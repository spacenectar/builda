#! /usr/bin/env node
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const helpers_1 = require("../../helpers");
const node_fs_1 = __importDefault(require("node:fs"));
const path_1 = __importDefault(require("path"));
const helpers_2 = require("../../helpers");
const generate_lines_1 = require("./helpers/generate-lines");
const message = `/**
 This file is autogenerated by Builda, please do not edit it.
 To generate an updated version, please run \`builda index\`
 **/`;
/**
 * Automatically generates the index registries for all directories specified in `directories` below. It runs automatically when `yarn preflight` runs or you can run it via `yarn genreg`
 */
exports.default = (config) => {
    const { indexes } = config;
    if (!indexes) {
        (0, helpers_1.throwError)(`No indexes entry found in the config file. Index files cannot be generated. See ${(0, helpers_2.getSiteLink)('docs/config', 'indexes')} for more information.`);
    }
    else {
        const { directories, indexExt } = indexes;
        const ext = indexExt || 'ts';
        directories.forEach((directory) => {
            let checkedDir = directory;
            let subdirs = [];
            let lines = '';
            if (directory.includes('*')) {
                checkedDir = directory.replace('/*', '');
                // scan directory for subdirectories
                subdirs = node_fs_1.default.readdirSync(path_1.default.resolve(checkedDir));
                subdirs.forEach((dir) => {
                    const pathString = path_1.default.resolve(`${checkedDir}/${dir}`);
                    return (lines += `${(0, generate_lines_1.generateLines)({
                        directory: pathString,
                        parent: dir
                    })}\n`);
                });
            }
            else {
                lines = (0, generate_lines_1.generateLines)({ directory });
            }
            const fileContents = `${message}\n\n${lines}`;
            if (lines) {
                node_fs_1.default.writeFileSync(path_1.default.resolve(checkedDir, `index.${ext}`), fileContents);
            }
        });
        (0, helpers_2.printMessage)('Generating indexes', 'config');
    }
};
