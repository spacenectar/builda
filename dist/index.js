#! /usr/bin/env node
"use strict";var go=Object.create;var Te=Object.defineProperty;var ho=Object.getOwnPropertyDescriptor;var yo=Object.getOwnPropertyNames;var bo=Object.getPrototypeOf,wo=Object.prototype.hasOwnProperty;var xo=(e,t)=>{for(var r in t)Te(e,r,{get:t[r],enumerable:!0})},tr=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of yo(t))!wo.call(e,i)&&i!==r&&Te(e,i,{get:()=>t[i],enumerable:!(o=ho(t,i))||o.enumerable});return e};var l=(e,t,r)=>(r=e!=null?go(bo(e)):{},tr(t||!e||!e.__esModule?Te(r,"default",{value:e,enumerable:!0}):r,e)),vo=e=>tr(Te({},"__esModule",{value:!0}),e);var bi={};xo(bi,{builda:()=>er,buildaQuestion:()=>Vt,buildaSubstitute:()=>Xt,changeCase:()=>v,default:()=>yi,printMessage:()=>u,throwError:()=>c});module.exports=vo(bi);var uo=l(require("yargs")),fo=l(require("chalk"));var g={version:"5.2.2",buildaDir:".builda",websiteUrl:"https://www.builda.app",buildaReadmeFileName:"getting-started.md",repository:{type:"git",url:"git+https://github.com/spacenectar/builda"}};var Gr=l(require("execa")),Yr=l(require("inquirer")),yt=l(require("fs")),bt=l(require("path")),We=l(require("process"));var Pe=l(require("chalk"));var Y=()=>console.log(Pe.default.magenta(`
  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 ${Pe.default.white(`v${g.version}
`)}
  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584  \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\u2588\u2588      \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584   \u2584\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588
  \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\u2588\u2588      \u2588\u2588\u2588   \u2580\u2588\u2588\u2588 \u2588\u2588\u2588\u2580   \u2588\u2588\u2588
  \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\u2588\u2588      \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588
  \u2588\u2588\u2588\u2584\u2584\u2584\u2588\u2588\u2580  \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\u2588\u2588      \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588
  \u2588\u2588\u2588\u2580\u2580\u2580\u2588\u2588\u2584  \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\u2588\u2588      \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588
  \u2588\u2588\u2588    \u2588\u2588\u2584 \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\u2588\u2588      \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588
  \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\u2588\u2588      \u2588\u2588\u2588   \u2584\u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588
  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580   \u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2580  \u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580  \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588

  ${Pe.default.white.bold("The Everything Generator")} \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588
`));var k=l(require("chalk")),Ue=l(require("process")),qe=l(require("readline")),ko={interval:80,frames:["\u280B","\u2819","\u2839","\u2838","\u283C","\u2834","\u2826","\u2827","\u2807","\u280F"]},je=Ue.default.stdout,$o=Ue.default.stderr,O,So=(e,t,r)=>{let o=null;if(t&&t==="error"&&(O!==void 0&&clearInterval(O),o=k.default.red(`\u{1F6A8} ${e}`)),t&&t==="danger"&&(o=k.default.red(`${e}`)),t&&t==="warning"&&(o=k.default.yellow(`\u{1F514} ${e}`)),t&&t==="config"&&(o=k.default.blue(`\u{1F527} ${e}`)),t&&t==="downloading"&&(o=k.default.blue(`\u{1F30D} ${e}`)),t&&t==="copying"&&(o=k.default.blue(`\u{1F4C2} ${e}`)),t&&t==="installing"&&(o=k.default.blue(`\u{1F4E6} ${e}`)),t&&t==="notice"&&(o=k.default.blue(`\u{1F4DD} ${e}`)),t&&t==="info"&&(o=k.default.bgHex("#6699CC").white.bold(" i ")+" "+k.default.reset.blue(e)),t&&t==="success"&&(O!==void 0&&clearInterval(O),o=k.default.green(`\u2705 ${e}`)),t&&t==="watch"&&(o=k.default.magenta(`\u{1F440} ${e}`)),t&&t==="build"&&(o=k.default.magenta(`\u{1F3D7} ${e}`)),t&&t==="run"&&(o=k.default.magenta(`\u{1F3C3} ${e}`)),t&&t==="primary"&&(o=k.default.magenta(`${e}`)),t&&t==="secondary"&&(o=k.default.white(`${e}`)),t&&t==="processing"){let s=ko,n=s.frames,a=s.interval,p=0;O!==void 0&&clearInterval(O),O=setInterval(()=>{let m=n[p];m==null&&(p=0,m=n[p]),qe.default.clearLine(je,0),qe.default.cursorTo(je,0),je.write(m),p=p>=n.length?0:p+1},a),o=k.default.blue(`${e}`)}return t||(o=e),r?o:(t==="error"?$o:je).write(`${o}
`)},u=So;var lr=l(require("chalk"));var Ge=["adorable","adventurous","aggressive","agreeable","alert","alive","amused","angry","annoyed","annoying","anxious","arrogant","ashamed","attractive","average","awful","bad","beautiful","better","bewildered","black","bloody","blue","blue-eyed","blushing","bored","brainy","brave","breakable","bright","busy","calm","careful","cautious","charming","cheerful","clean","clear","clever","cloudy","clumsy","colorful","combative","comfortable","concerned","condemned","confused","cooperative","courageous","crazy","creepy","crowded","cruel","curious","cute","dangerous","dark","dead","defeated","defiant","delightful","depressed","determined","different","difficult","disgusted","distinct","disturbed","dizzy","doubtful","drab","dull","eager","easy","elated","elegant","embarrassed","enchanting","encouraging","energetic","enthusiastic","envious","evil","excited","expensive","exuberant","fair","faithful","famous","fancy","fantastic","fierce","filthy","fine","foolish","fragile","frail","frantic","friendly","frightened","funny","gentle","gifted","glamorous","gleaming","glorious","good","gorgeous","graceful","grieving","grotesque","grumpy","handsome","happy","healthy","helpful","helpless","hilarious","homeless","homely","horrible","hungry","hurt","ill","important","impossible","inexpensive","innocent","inquisitive","itchy","jealous","jittery","jolly","joyous","kind","lazy","light","lively","lonely","long","lovely","lucky","magnificent","misty","modern","motionless","muddy","mushy","mysterious","nasty","naughty","nervous","nice","nutty","obedient","obnoxious","odd","old-fashioned","open","outrageous","outstanding","panicky","perfect","plain","pleasant","poised","poor","powerful","precious","prickly","proud","putrid","puzzled","quaint","real","relieved","repulsive","rich","scary","selfish","shiny","shy","silly","sleepy","smiling","smoggy","sore","sparkling","splendid","spotless","stormy","strange","stupid","successful","super","talented","tame","tasty","tender","tense","terrible","thankful","thoughtful","thoughtless","tired","tough","troubled","ugliest","ugly","uninterested","unsightly","unusual","upset","uptight","vast","victorious","vivacious","wandering","weary","wicked","wide-eyed","wild","witty","worried","worrisome","wrong","zany","zealous"],Ye=["Actor","Gold","Painting","Advertisement","Grass","Parrot","Afternoon","Greece","Pencil","Airport","Guitar","Piano","Ambulance","Hair","Pillow","Animal","Hamburger","Pizza","Answer","Helicopter","Planet","Apple","Helmet","Plastic","Army","Holiday","Portugal","Australia","Honey","Potato","Balloon","Horse","Queen","Banana","Hospital","Quill","Battery","House","Rain","Beach","Hydrogen","Rainbow","Beard","Ice","Raincoat","Bed","Insect","Refrigerator","Belgium","Insurance","Restaurant","Boy","Iron","River","Branch","Island","Rocket","Breakfast","Jackal","Room","Brother","Jelly","Rose","Camera","Jewellery","Russia","Candle","Jordan","Sandwich","Car","Juice","School","Caravan","Kangaroo","Scooter","Carpet","King","Shampoo","Cartoon","Kitchen","Shoe","China","Kite","Soccer","Church","Knife","Spoon","Crayon","Lamp","Stone","Crowd","Lawyer","Sugar","Daughter","Leather","Sweden","Death","Library","Teacher","Denmark","Lighter","Telephone","Diamond","Lion","Television","Dinner","Lizard","Tent","Disease","Lock","Thailand","Doctor","London","Tomato","Dog","Lunch","Toothbrush","Dream","Machine","Traffic","Dress","Magazine","Train","Easter","Magician","Truck","Egg","Manchester","Uganda","Eggplant","Market","Umbrella","Egypt","Match","Van","Elephant","Microphone","Vase","Energy","Monkey","Vegetable","Engine","Morning","Vulture","England","Motorcycle","Wall","Evening","Nail","Whale","Eye","Napkin","Window","Family","Needle","Wire","Finland","Nest","Xylophone","Fish","Nigeria","Yacht","Flag","Night","Yak","Flower","Notebook","Zebra","Football","Ocean","Zoo","Forest","Oil","Garden","Fountain","Orange","Gas","France","Oxygen","Girl","Furniture","Oyster","Glass","Garage","Ghost"];var To=()=>{let e=Ge[Math.floor(Math.random()*Ge.length)],t=Ye[Math.floor(Math.random()*Ye.length)];return`${e.toLowerCase()}-${t.toLowerCase()}`},Ce=To;var or={root:{root:"/"},tradeStore:{root:"trade-store",prefabs:"prefabs",blueprints:"blueprints"},docs:{root:"docs",gettingStarted:"getting-started",prefabs:"prefabs",config:"config-file",blueprints:"blueprints",telemetry:"telemetry",init:"initialise-a-project",resolvers:"resolvers",indexes:"indexes"}};var A=(e,t)=>{let{websiteUrl:r}=g,o=e.split("/"),i=or,s=o[0]||"./",n=o.map(a=>{var p;return a===s?a:(p=i[s])==null?void 0:p[a]});return`${r}/${n.join("/")}${t?`#${t}`:""}`};var jo=e=>e.startsWith("/")||e.startsWith("./")||e.startsWith("..")||e.startsWith("~")?"local":"remote",I=jo;var ir=e=>{let t=/^(?:[a-zA-Z:]+_[a-zA-Z:]+)+$/,r=/^(?:[A-Z]{1}[a-zA-Z:]+[A-Z]{1}[a-zA-Z:]+)+$/,o=/^(?:[a-z]{1}[a-zA-Z:]+[A-Z]{1}[a-zA-Z:]+)+$/,i=/^(?:[a-zA-Z:]+ [a-zA-Z:]+)+$/,s=/^(?:[a-zA-Z:]+-[a-zA-Z:]+)+$/;return t.test(e)?"snake":r.test(e)?"pascal":o.test(e)?"camel":i.test(e)?"sentence":s.test(e)?"kebab":"unknown"};var ie=e=>e.replace(/\s{2,}/g," ").trim(),sr=e=>{let t=ir(e),r=e.split(/(?=[A-Z:])/).filter(i=>i!==":"),o=r.slice(1).map(i=>i.toLowerCase());if(t==="snake"){let i=e.replace(/_/g," ").toLowerCase().replace(/:/g," ");return ie(i)}if(t==="pascal"){let i=e.split(/(?=[A-Z])/).map(s=>s.toLowerCase()).join(" ").replace(/:/g," ");return ie(i)}if(t==="camel"){let i=r[0]||"";o.unshift(i.toLowerCase());let s=o.join(" ");return ie(s)}if(t==="kebab"){let i=e.replace(/-/g," ").replace(/:/g," ").toLowerCase();return ie(i)}return t==="sentence"?ie(e.replace(/:/g,"")):e};var Ae=["Zero","One","Two","Three","Four","Five","Six","Seven","Eight","Nine"],Co=["Ten","Eleven","Twelve","Thirteen","Fourteen","Fifteen","Sixteen","Seventeen","Eighteen","Nineteen"],nr=["","","Twenty","Thirty","Fourty","Fifty","Sixty","Seventy","Eighty","Ninety"],Ee=e=>{let t=/\d+/g,r=e.match(t);if(r){let o=r.map(i=>{let s=parseInt(i,10);if(s<10)return":"+Ae[s];if(s<20)return":"+Co[s-10];if(s<100)return":"+nr[Math.floor(s/10)]+Ae[s%10];if(s<1e3){let n=s%100===0,a=":"+Ae[Math.floor(s/100)]+":Hundred";return n||(a+=":And:"+nr[Math.floor(s%100/10)]+":"+Ae[s%10]),a}if(s<1e6)return Ee(Math.floor(s/1e3).toString())+":Thousand"+Ee((s%1e3).toString());throw new Error("Numbers larger than 1 million are not supported")}).join(":");return e.replace(t,o)}return e};var ar=e=>e.replace(/&/g,":And").replace(/@/g,":At").replace(/#/g,":Hash").replace(/\$/g,":Dollar").replace(/£/g,":Pound").replace(/%/g,":Percent").replace(/\+/g,":Plus").replace(/\*/g,":Asterisk");var Ao=(e,t)=>t.startsWith("builda")||t.startsWith("run-s")||t.startsWith("run-p")||t.startsWith("npm-run-all")||t.startsWith("concurrently")?t:`builda x ${e}`,Fe=Ao;var Eo=(e,t)=>{let o=ar(e),i=Ee(o),n=sr(i).split(" ");switch(t){case"snakeCase":return n.join("_").toLowerCase();case"kebabCase":return n.join("-").toLowerCase();case"pascalCase":return n.map(a=>a.charAt(0).toUpperCase()+a.slice(1)).join("");case"camelCase":return n.map((a,p)=>p===0?a.charAt(0).toLowerCase()+a.slice(1):a.charAt(0).toUpperCase()+a.slice(1)).join("");case"sentenceCase":default:return n.map((a,p)=>p===0?a.charAt(0).toUpperCase()+a.slice(1):a.charAt(0).toLowerCase()+a.slice(1)).join(" ")}},v=Eo;var C=({link:e,anchor:t,endText:r})=>(r=r||"for more information.",`

See `+lr.default.blue.underline(A(e,t))+" "+r);var W=l(require("chalk"));var cr=l(require("inquirer")),w=(e,t)=>{console.clear(),Y();let r=new cr.default.ui.BottomBar,o=process.stdout.columns;t=t||"info";let i="bgBlue",s="i";t==="error"&&(i="bgRed",s="\u2716"),t==="success"&&(i="bgGreen",s="\u2714"),t==="warning"&&(i="bgYellow",s="\u26A0"),t==="builda"&&(i="bgMagenta",s="B\u0333");let n="  "+W.default.bold.white[i](`  ${s}  `),a="  "+W.default[i](" ".repeat(5))+" "+W.default[i](" ".repeat(o-10))+`
`,p=a+n+" "+W.default.bold.white[i](`  ${t.toUpperCase()}${" ".repeat(o-t.length-12)}
`)+a,m=W.default.white("\u2500".repeat(o)),f=e.replace(/\n/g,`
  `).replace(new RegExp(`(.{${o-20}})(\\s|$)`,"g"),`$1
  `);r.log.write(`
${p}\r
  ${W.default.white(f)}\r

${m}\r

`)};var c=e=>{let t=u(e,"danger",!0);throw new Error(t)};var pr=l(require("chalk")),_e=l(require("process")),ur=l(require("readline")),Mo=e=>new Promise(t=>{let r=ur.default.createInterface({input:_e.default.stdin,output:_e.default.stdout});r.question(pr.default.blue(`\u{1F914} ${e} [y/N] `),o=>{o=o.toLowerCase(),r.close(),t(o==="y")})}),_=Mo;var dr=l(require("fs")),Do=(e,t)=>dr.default.cpSync(e,t,{dereference:!0,recursive:!0,force:!0}),Ne=Do;var H=l(require("fs")),He=l(require("path")),fr=(e,t)=>{H.default.existsSync(t)||H.default.mkdirSync(t,{recursive:!0}),H.default.readdirSync(e).forEach(r=>{let o=He.default.resolve(e,r),i=He.default.join(t,r);H.default.lstatSync(o).isDirectory()?fr(o,i):H.default.cpSync(o,i,{recursive:!0,dereference:!0})})},se=fr;var Re=l(require("fs"));var Ie=l(require("path")),Lo=e=>{if(Re.default.existsSync(Ie.default.resolve(process.cwd(),"package.json"))){let o={...JSON.parse(Re.default.readFileSync(Ie.default.resolve(process.cwd(),"package.json"),"utf8")),builda:e===null?void 0:{...e}};Re.default.writeFileSync(Ie.default.resolve(process.cwd(),"package.json"),JSON.stringify(o,null,2))}else c("No package.json found in project")},L=Lo;var Ze=l(require("fs")),Oo=async e=>{try{return Ze.default.existsSync(e)||Ze.default.mkdirSync(e,{recursive:!0}),!0}catch{return!1}},j=Oo;var Qe=l(require("fs"));var Ke=l(require("path")),Wo=e=>{if(Qe.default.existsSync(Ke.default.resolve(process.cwd(),"package.json"))){let r=JSON.parse(Qe.default.readFileSync(Ke.default.resolve(process.cwd(),"package.json"),"utf8")).builda;if(!r&&!e)c('No "builda" entry found in package.json');else if(!r&&e)return{};return r}return c("No package.json found in project")},S=Wo;var ne=l(require("fs"));var B=l(require("path")),Bo=(e,t)=>{let r=[],i=ne.default.readFileSync(e,"utf8").split(`
`);for(let s of i)if(s!==""&&s.startsWith("@extends")){let n=s.split(" ")[1];if(ne.default.existsSync(B.default.resolve(t,n))){let p=ne.default.readFileSync(B.default.resolve(t,n),"utf8").split(`
`);for(let m of p)if(m!==""&&!m.startsWith("#"))if(n!=null&&n.includes("/")){let d=n.split("/").pop(),f=n.replace(d,"");r.push(B.default.join(f,m))}else r.push(m)}else c(`File ${n} does not exist. Please check your .buildaignore file.`)}else if(s!==""&&s.startsWith("@"))c(`Invalid line in .buildaignore file: ${s}. Only @extends is allowed to start with @.`);else{if(s!==""&&s.startsWith("!"))continue;s!==""&&!s.startsWith("#")&&r.push(s)}return[...new Set(r)]},zo=(e,t)=>{let r=[];for(let o of t){let i=B.default.join(e,o);o.includes("*")||(o.includes("/")?r.push(i):r.push(`**/${o}`))}return r},Jo=(e,t)=>{let r=t?"module":B.default.join(e,"modules","prefab"),o=B.default.resolve(r,".buildaignore");if(ne.default.existsSync(o)){let i=Bo(o,r);return zo(r,i)}return[]},Ve=Jo;var z=l(require("path")),Me=l(require("fs")),mr=l(require("glob"));var Xe=async({log:e,name:t,paths:r,substitute:o,source:i,destination:s})=>{let{buildaDir:n}=g,a=z.default.join(n,"modules","prefab"),p={log:e,name:t,paths:r,substitute:o,source:i,destination:s},m=[];for(let d of r){let f=z.default.join(i,d);if(!Z(n,f))if(d.includes("*")){let y=mr.default.sync(f).map(h=>z.default.relative(a,h));m.push(await Xe({...p,paths:y}))}else if(Me.default.lstatSync(f).isDirectory()){let h=Me.default.readdirSync(f).map(x=>z.default.join(d,x));m.push(await Xe({...p,paths:h}))}else m.push(new Promise(y=>{let h=z.default.dirname(d),x=z.default.join(s,h);if(!Z(n,f)){if(j(x),Me.default.existsSync(f)){let b=o.map($=>$.reverseInExport&&(x.includes("export")||x.includes("prefab"))?{...$,replace:$.with,with:$.replace}:$);J({file:f,outputDir:x,substitute:b,name:t})}y(f)}}))}await Promise.all(m)},M=Xe;var et=l(require("fs")),tt=l(require("path"));var gr=l(require("prettier")),qo=["css","html","js","jsx","json","less","md","mdx","scss","sass","ts","tsx","yaml","yml","graphql"],Uo=({file:e,rename:t,content:r,outputDir:o,substitute:i,name:s})=>{let n=e;t&&(n=t),n=n==null?void 0:n.split("/").pop();let a=e?et.default.readFileSync(tt.default.resolve(e),"utf8"):"",p=r??a;s&&(p=a.replace(/prefab-name-replace-string/g,v(s,"kebabCase")).replace(/%KEBAB_CASE%/g,v(s,"kebabCase")).replace(/%CAMEL_CASE%/g,v(s,"camelCase")).replace(/%SNAKE_CASE%/g,v(s,"snakeCase")).replace(/%PASCAL_CASE%/g,v(s,"pascalCase")).replace(/%SENTENCE_CASE%/g,v(s,"sentenceCase"))),i&&i.length>0&&i.forEach(d=>{let f=`${d.replace}`,y=new RegExp(f,"g");p=p.replace(y,d.with)});let m=n==null?void 0:n.split(".").pop();if(m&&qo.includes(m)&&(p=e?gr.default.format(p,{filepath:tt.default.resolve(e)}):p),p)return et.default.writeFileSync(`${o}/${n}`,p);throw new Error(`Could not write file ${n}`)},J=Uo;var Go=l(require("fs")),Yo=l(require("path")),_o=l(require("process"));var rt=l(require("fs")),De=l(require("path"));var{buildaDir:Ho}=g,ae=async(e,t,r)=>{let o=De.default.join(t,Ho,"modules","prefab");e.forEach(async i=>{let s=De.default.join(o,i);rt.default.cpSync(s,De.default.join(t,i),{recursive:!0}),r&&rt.default.rmSync(s,{recursive:!0,force:!0})})};var pe=l(require("path")),hr=l(require("fs"));var le=l(require("path")),ce=l(require("fs"));var ot=async()=>{if(ce.default.existsSync(le.default.resolve(process.cwd(),"package.json"))){let e=JSON.parse(ce.default.readFileSync(le.default.resolve(process.cwd(),"package.json"),"utf8")),r=JSON.parse(ce.default.readFileSync(le.default.resolve(process.cwd(),g.buildaDir,"modules","prefab","package.json"),"utf8")).scripts,o=e.scripts,i=Object.keys(o).filter(a=>!Object.keys(r).includes(a)),s={...r};i.forEach(a=>{s[a]=o[a]});let n={...e,scripts:s,dependencies:{...e.dependencies},devDependencies:{...e.devDependencies},peerDependencies:{...e.peerDependencies}};ce.default.writeFileSync(le.default.resolve(process.cwd(),g.buildaDir,"export","package.json"),JSON.stringify(n,null,2))}else c("No package.json found in project")},it=ot;var Zo=async({type:e,pathString:t})=>{var s,n;let r=process.cwd(),o=pe.default.join(r,g.buildaDir,"export"),i=await P(o);if(e==="copy")return t==="package.json"?void 0:Ne(`${r}/${t}`,pe.default.join(o,t));if(e==="update"){if(t==="package.json")return ot();let a=(n=(s=i.generatorOptions)==null?void 0:s.rootFiles)==null?void 0:n.find(p=>typeof p=="string"||!p.substitutions||p.substitutions.length===0?!1:p.path===t);if(a)await M({log:!0,name:i.name,paths:[t],substitute:a.substitutions,source:r,destination:o});else return Ne(`${r}/${t}`,pe.default.join(o,t))}if(e==="delete")return t==="package.json"&&c("package.json deleted. This will break your project"),hr.default.rmSync(pe.default.join(o,t),{recursive:!0,force:!0})},E=Zo;var Qo=(e,t)=>{let r=Ve(e);for(let o of r)if(o.startsWith("**/")){let i=o.replace("**/",""),s=t.split("/").pop();if(i===s)return!0}else if(o===t)return!0;return!1},Z=Qo;var Q=l(require("fs")),st=l(require("path"));async function Ko({buildaDir:e,prefabDir:t}){Q.default.existsSync(t)||c("No prefab found, cannot export");let r=st.default.join(e,"export");u("Creating export path...","processing"),Q.default.existsSync(r)&&Q.default.rmSync(r,{recursive:!0}),se(t,r),u("Export path created","success");let o=st.default.join(r,".builda");Q.default.existsSync(o)&&Q.default.rmSync(o,{recursive:!0}),u("Initial export created","success")}var q=Ko;var yr=l(require("fs")),Le=l(require("path"));async function Vo({prefabPath:e,rootDir:t,prefabDir:r,name:o,buildaDir:i}){var p,m;let s;if(I(e)==="remote"){let d=R({registryPath:e}).url;d||c("No registry found"),s=await V(d,t)}else s=await K(e,t);s!=null&&s.name||c("No prefab found");let n=s.name,a=s.version;if(u(`Installed ${n}@${a}`,"success"),(m=(p=s==null?void 0:s.generatorOptions)==null?void 0:p.rootFiles)==null||m.forEach(async d=>{if(typeof d!="string"){let f=d.substitutions??[];await M({name:o,paths:[d.path],substitute:f,source:r,destination:r})}}),s.blueprints){u("Installing prefab blueprints...","installing");let d=[],f=Object.keys(s.blueprints);for(let y of f){let h=s.blueprints[y];u(`Installing blueprint: "${y}"`,"processing");let x=Le.default.join(t,i,"modules","blueprints");if(j(x),h.location==="prefab"){let b=Le.default.join(r,i,"modules","blueprints",y);yr.default.existsSync(b)&&se(b,Le.default.join(x,y))}else{let b=I(h.location);d.push(new Promise($=>{if(b==="local"&&K(h.location,t),b==="remote"){let F=R({registryPath:h.location}).url;F||c("No registry found"),V(F,t)}$(y)}))}u(`${y} installed`,"success")}await Promise.all(d)}return u("Prefab has been set up.","success"),s}var ue=Vo;var de=l(require("path")),nt=l(require("fs")),br=l(require("glob"));var at=async({log:e,paths:t,source:r})=>{let{buildaDir:o}=g,i=de.default.join(o,"modules","prefab"),s={log:e,paths:t,source:r},n=[];for(let a of t){let p=de.default.join(r,a);if(!Z(o,p))if(a.includes("*")){let m=br.default.sync(p).map(d=>de.default.relative(i,d));n.push(await at({...s,paths:m}))}else if(nt.default.lstatSync(p).isDirectory()){let d=nt.default.readdirSync(p).map(f=>de.default.join(a,f));n.push(await at({...s,paths:d}))}else n.push(new Promise(m=>{m(p)}))}return Promise.all(n.flat())},lt=at;var fe=l(require("fs")),wr=l(require("tar")),xr=l(require("path"));var Xo=async(e,t,r)=>{fe.default.existsSync(`${e}/${r}.tgz`)?(fe.default.copyFileSync(`${e}/${r}.tgz`,`${t}/${r}.tgz`),await wr.default.extract({file:`${t}/${r}.tgz`,cwd:t}),fe.default.unlinkSync(`${t}/${r}.tgz`)):c("No tarball found. Please run `builda package` first")},ei=async(e,t)=>{let r=xr.default.join(t||"./",g.buildaDir),o=await P(e),i=o.type==="blueprint"?`${r}/modules/blueprints/${o.name}`:`${r}/modules/prefab`;return await j(i),await Xo(e,i,"module"),fe.default.writeFileSync(`${i}/registry.json`,JSON.stringify(o)),o},K=ei;var me=l(require("fs")),Sr=l(require("path")),Tr=l(require("axios")),Pr=l(require("tar"));var vr=l(require("fs")),kr=l(require("process"));var $r=l(require("axios")),ti=async e=>{let t="registry.json";if(e=e||kr.default.cwd(),I(e)==="local")return JSON.parse(vr.default.readFileSync(`${e}/${t}`,"utf8"));let o=R({registryPath:e});o.error&&c(o.error);let i=o.url;i.includes("%FILE_NAME%")?i=i.replace("%FILE_NAME%",t):i=`${i}/${t}`;let s=await U(i,!0);return s.status||c(s.message),$r.default.get(i,{responseType:"json"}).then(n=>n.data).catch(n=>{c(n.message)})},P=ti;var ri=async(e,t)=>{let r=Sr.default.join(t||"./",g.buildaDir),o=await P(e),i=o.type==="blueprint"?`${r}/modules/blueprints/${o.name}`:`${r}/modules/prefab`;return await j(i),u(`Downloading ${o.name}...`,"downloading"),await Tr.default.get(`${e}/module.tgz`,{responseType:"arraybuffer",headers:{"Content-Type":"application/gzip"}}).then(s=>me.default.writeFileSync(`${i}/module.tgz`,s.data,{encoding:"binary"})).then(async()=>{if(me.default.existsSync(`${i}/module.tgz`)){u("Extracting module files...","config");try{await Pr.default.extract({file:`${i}/module.tgz`,cwd:i}),me.default.unlinkSync(`${i}/module.tgz`)}catch(s){c(s)}}}).catch(s=>{c(`There was an error downloading the tarball. Please check the URL and try again.

${s}`)}).finally(()=>{u("Copying the registry file...","copying"),me.default.writeFileSync(`${i}/registry.json`,JSON.stringify(o,null,2))}),u("Done.","success"),o},V=ri;var jr={builda:"https://builda.app/modules/%REPO_NAME%",github:"https://raw.githubusercontent.com/%REPO_NAME%",bitbucket:"https://bitbucket.org/%REPO_NAME%/raw"};var ii=({resolver:e,modulePath:t,version:r,resolvers:o})=>{let i=o[e];if(!i)return"";let s=i;return s.includes("%REPO_NAME%")?s=s.replace("%REPO_NAME%",t):s=s.replace(`${e}`,""),s.includes("%VERSION%")?s=s.replace("%VERSION%",r):s=`${s}/${r||"latest"}`,s.endsWith("/")&&(s=s.slice(0,-1)),ct(s)},Cr=ii;var si=({registryPath:e,config:t})=>{var n;let r=e,o="",i=jr;if(r.startsWith("http")||r.startsWith("https")){let a=r;return r.includes("github.com")&&(a=r.replace("github.com","raw.githubusercontent.com").replace("/blob","").replace("/tree","")),r.includes("bitbucket.org")&&(a=r.replace("src","raw")),a.endsWith("/")&&(a=a.slice(0,-1)),{url:a,error:o}}let s=r.match(/^([a-z]+:{1}[/]{0})([a-z0-9-/]+)((?:@{1}v?[0-9.]+)?(?:[\w\d-]*))?$/);if(s){let a=((n=s[1])==null?void 0:n.replace(":",""))||"",p=s[2]||"",m=s[3]?s[3].replace("@",""):"latest";t!=null&&t.resolvers&&(i={...i,...t.resolvers});let d=Cr({resolver:a,modulePath:p,version:m,resolvers:i});return d||(o=`Could not find a resolver for ${r}`),{url:d,error:o}}else return o='Paths must start with a colon terminated lowercase string with no spaces or special characters (e.g. "builda:" or "([a-z]+:{1}[/]{0})" ) if using a resolver or "http(s)" if using a url',{url:"",error:o}},R=si;var Ar=l(require("fs")),Er=l(require("path")),Fr=l(require("process"));var ni=(e,t,r)=>{if(t){let o=`${e}s`,i=Er.default.resolve(Fr.default.cwd(),`${g.buildaDir}/modules/${o}/${r.use}`),s=JSON.parse(Ar.default.readFileSync(`${i}/registry.json`,"utf8"));return{path:i,registry:s}}throw new Error("Could not find config file")},pt=ni;var ai=({name:e,registry:t,script:r})=>{var s,n;let o=[],i=r!=null&&r.substitute&&((s=r.substitute)==null?void 0:s.length)>0?r==null?void 0:r.substitute:(n=t==null?void 0:t.generatorOptions)==null?void 0:n.substitutions;return i&&i.length&&i.forEach(a=>{var y;let p=a.with==="script"?e:a.with,m=(a==null?void 0:a.replace)||a.replace,f=(a==null?void 0:a.with)||p||"";!p&&!m&&a.required&&c(`"--${a.replace}" missing in arguments. This is required.
`),f&&!m&&o.push({replace:m.toUpperCase(),with:f}),m&&(f===""&&c(`"--${a.replace}" requires a value`),a.valid&&f!==""&&!((y=a.valid)!=null&&y.includes(f))&&c(`
"${f}" is not a valid ${a.replace}. Please use one of the following: 
 - ${a.valid.join(`
 - `)}
`),o.push({replace:a.replace.toUpperCase(),with:f}))}),o},ut=ai;var Rr=l(require("axios")),Ir=l(require("ajv"));var Nr={$schema:"http://json-schema.org/draft-07/schema#",definitions:{ModuleConfig:{additionalProperties:{$ref:"#/definitions/ModuleConfigContents"},type:"object"},ModuleConfigContents:{additionalProperties:!1,properties:{location:{description:"The location of the module. This can be a local path, a remote url, a resolver or 'prefab' (if preinstalled inside a prefab)",type:"string"},outputDir:{description:"If the module should have a custom output directory, specify it here (relative to the app_root)",type:"string"},resolve:{anyOf:[{type:"string"},{additionalProperties:!1,properties:{type:{type:"string"},url:{type:"string"}},required:["url","type"],type:"object"}],description:"The custom resolver to use for the module"},version:{description:"The version of the module (not required for blueprints preinstalled inside a prefab)",type:"string"}},required:["location"],type:"object"},ModuleRegistry:{additionalProperties:!1,description:"See (https://builda.app/docs/build-a-module/registry) for more info",properties:{author:{additionalProperties:!1,description:"The module author's details",properties:{buildaUser:{description:"The builda username of the author. This is optional but is required if you want to publish your module to the builda trade store (see (https://builda.app/docs/trade-store))",type:"string"},email:{description:"The author's email",type:"string"},name:{description:"The author's name",type:"string"},website:{description:"The author's website",type:"string"}},required:["name"],type:"object"},blueprints:{$ref:"#/definitions/ModuleConfig",description:"If the module is a prefab and requires blueprints or has it's own blueprints, you should add them here if the module is a blueprint, this field is ignored",examples:["github:cool-developer/blueprint-cool-module@3.0.0","internal:blueprint-name"]},funding:{description:"Is this module looking for funding? If so, you can add a list of funding links here.",items:{type:"string"},type:"array"},generatorOptions:{additionalProperties:!1,description:"A set of options which will be passed to the module generator when the module has been installed",properties:{extraFolders:{description:"Extra folders which should be created in the module root when the module is installed (Will create any folders which don't already exist in the tree)",items:{type:"string"},type:"array"},substitutions:{additionalProperties:!1,description:"A set of substitutions which should be made in the module files when the module is installed",type:"array",items:{$ref:"#/definitions/TSubstitution"}},postScripts:{description:"Any post install scripts which should be run after the module has been installed and all files have been copied across and substitutions made (script paths are relative to the module root and should be in the form of a node cli script)",items:{type:"string"},type:"array"},rootFiles:{description:"Any files which should be copied to the module root when the module is installed in addition to the default files (see (https://builda.app/docs/build-a-module/prefabs#root-files)) e.g. .env files",items:{type:"string"},type:"array"}},type:"object"},keywords:{description:"The module keywords (optional but recommended if you want to publish your module to the builda trade store)",items:{type:"string"},type:"array"},name:{description:"The name of the module",type:"string"},prerelease:{default:!1,description:"If this is a prerelease, set this to true",type:"boolean"},publishToTradeStore:{default:!1,description:"Do you want to publish this module to the builda trade store? (see (https://builda.app/docs/trade-store))",type:"boolean"},type:{description:"The module type",enum:["blueprint","prefab"],type:"string"},url:{description:"The url of the module (generally a git repository) You can also use resolver aliases here. See (https://builda.app/docs/resolvers)",type:"string"},version:{description:"The module version number (in semver format)",pattern:"^\\d+\\.\\d+\\.\\d+$",type:"string"}},required:["name","type","version","url"],type:"object"},RootFile:{additionalProperties:!1,properties:{path:{description:"The path to the root file (relative to the .builda/export directory)",type:"string"},rewrite:{default:!1,description:"Should the file contents be rewritten with the default substitutions? https://builda.app/docs/build-a-module/substitutions",type:"boolean"},substitutions:{description:"Are there any custom substitutions to be made? see (https://builda.app/docs/build-a-module/substitutions)",items:{$ref:"#/definitions/TSubstitution"},type:"array"}},required:["path","substitutions"],type:"object"},TSubstitution:{additionalProperties:!1,properties:{replace:{description:"The string to be replaced",pattern:"^%[A-Z_]+%$",type:"string"},required:{default:!1,description:"Is this substitution required? (i.e. if it is not found, should the build fail?)",type:"boolean"},valid:{description:"Do you want to provide a list of valid options for this substitution? (i.e. if it is not found, should the build fail?)",items:{type:"string"},type:"array"},with:{description:"The string to replace with",type:"string"}},required:["replace","with"],type:"object"}}};var ci=new Ir.default,U=async(e,t)=>{let r=e;if(!t){let i=R({registryPath:e});if(i.error)return{status:!1,message:i.error};r=i.url}let o=r.includes("registry.json")?r:`${r}/registry.json`;return Rr.default.get(o).then(i=>{var a;if(!i.data)return{status:!1,message:"Something went wrong while fetching the registry. No data was returned and no error was provided."};let s=ci.compile(Nr);return s(i.data)?{status:!0,message:"Registry fetched successfully"}:((a=s.errors)==null||a.forEach(p=>{console.log(`Registry validation error: ${p.message}`)}),{status:!1,message:"The registry file is not valid. Please check the documentation for the correct format."})}).catch(i=>i.code==="ENOTFOUND"||i.code==="ERR_BAD_REQUEST"?{status:!1,message:"The url must point to a folder that contains a registry.json file"}:i.code==="ECONNREFUSED"?{status:!1,message:`The server at ${o} is not responding are you sure it is correct?`}:{status:!1,message:i.message})};var Lr=l(require("inquirer")),Oe=l(require("chalk"));var Mr=[{name:"Test Blueprint",value:"github:builda-modules/blueprint-test"},{name:"Fake blueprint",value:""},{name:"Another fake blueprint",value:""},{name:"Yet another fake blueprint",value:""}];var Dr=async(e,t)=>{let r=await U(e);if(r.status){if(t.prefabRegistry){let i=t.prefabRegistry.blueprints;return i&&i[e]?{status:!1,message:"A blueprint with that name already exists"}:{status:!0,message:""}}return{status:!0,message:""}}return{status:!1,message:r.message||"Could not validate the blueprint"}},dt=async e=>(w(`These questions are all about adding blueprints to your project.\r

If you're not sure what a blueprint is`+C({link:"docs/blueprints"})),Lr.default.prompt([{type:"confirm",name:"addBlueprints",message:()=>{let t=[],r=e.prefabRegistry,o=r==null?void 0:r.blueprints;return e.prefab&&o&&(t=Object.keys(o),w(`You are generating this project from the ${Oe.default.blue(r.name)} prefab.

It comes with the following blueprints:

	`+t.map(i=>Oe.default.blue(i)).join(`
	`)+`

Ensure that any additional blueprints you add are compatible with this prefab.`,"warning")),`Do you want to add any${t.length?"additional":""} blueprints to your project?`},default:!0},{type:"list",name:"blueprintChoice",message:"Do you have url(s) for your blueprint(s) or do you want to choose from a list?",choices:[{name:"I have url(s)",value:"url"},{name:"I want to choose from a list (coming soon)",value:"list",disabled:"This option is not available yet"}]},{type:"input",name:"blueprintUrls",message:"Enter the blueprint url(s) (if adding more than one, please separate them with a space):",when:t=>t.blueprintChoice==="url",validate:async t=>{if(!t)return"You must enter at least one url";let r=t.split(" ");for(let o of r){let i=await Dr(o,e);if(!i.status)return`The module at ${o} returned an error: ${i.message}`}return!0}},{type:"checkbox",name:"blueprintList",message:()=>(w("This list is not exhaustive. You can find more blueprints at "+Oe.default.blue.underline(A("tradeStore/blueprints"))),"Choose your blueprints:"),choices:Mr,when:t=>t.blueprintChoice==="list",validate:async t=>{if(!t.length)return"You must choose at least one blueprint";for(let r of t){let o=await Dr(r,e);if(!o.status)return`The module at ${r} returned an error: ${o.message}`}return!0}}]));var ge=l(require("fs")),Or=l(require("inquirer")),ft=l(require("chalk"));var mt=async()=>{let e=()=>{try{return JSON.parse(ge.default.readFileSync("package.json","utf8"))}catch{return""}};e()||(w("You must have a package.json file in the root of your project to add to an existing project.","error"),process.exit(1));let{name:t}=e(),o=(()=>!!(ge.default.existsSync("lerna.json")||e().workspaces))(),s=(()=>ge.default.existsSync("yarn.lock")?"yarn":ge.default.existsSync("package-lock.json")?"npm":"unknown")();return Or.default.prompt([{type:"input",name:"projectName",message:`We think your project is called ${ft.default.bold.magenta(t)}. Press enter if correct? If not, enter the correct name here.`,default:t},{type:"input",name:"appRoot",message:()=>(w(`The app root is the directory where your app files are stored.

This is usually your current working directory but if you are using a monorepo or if you'd like to store your app files in a different directory, you can specify it here it here.

If you're not sure, just press enter to use the current working directory.`),`We think your app root ${o?"may be in a monorepo, please enter the package name. If it is not a monorepo, just press enter to use ./ or specify the directory your app is store in":"is ./"}`),default:"./"},{type:"list",name:"packageManager",message:()=>(w("Builda works with both npm and yarn. If you are using a different package manager, unfortunately, Builda may not work for you."),"We think you are using "+ft.default.bold.magenta(s)+". Press enter if correct? If not, select the correct package manager."),choices:["npm","yarn"],default:s}])};var Wr=l(require("inquirer")),Br=l(require("chalk"));var gt=async e=>{let t=Ce();return e&&w(`Great! That prefab is ready to install!

First things first though, we need a few more details, to get you set up.`,"success"),Wr.default.prompt([{type:"input",name:"appName",required:!0,message:`What do you want to call your project? This will also be the folder name we will create for your app. (If you don't know, just press enter to use ${Br.default.bold.magenta(t)})`,default:t}])};var Jr=l(require("inquirer")),he=l(require("chalk"));var zr=[{name:"Test Prefab",value:"github:builda-modules/prefab-test"},{name:"Fake prefab",value:""},{name:"Another fake prefab",value:""},{name:"Yet another fake prefab",value:""}];var ht=async()=>(w(`These questions are all about building a project from a prefab.

If you're not sure what a prefab is, visit `+he.default.blue.underline(A("docs/prefabs"))+he.default.white(" for more information.")),Jr.default.prompt([{type:"list",name:"prefabChoice",message:"Do you have a prefab url or do you want to choose from a list?",choices:[{name:"I have a url",value:"url"},{name:"I want to choose from a list (coming soon)",value:"list",disabled:"This option is not available yet"}]},{type:"input",name:"prefabUrl",message:()=>(w("The url should point to the folder that the prefabs registry.json file is in. It can be a regular link or use a resolver."+C({link:"docs/resolvers"})),"Enter the prefab url:"),when:e=>e.prefabChoice==="url",validate:async e=>{if(!e)return"You must enter a url";let t=await U(e);return t.status!==!0&&he.default.red(t.message),t.status}},{type:"list",name:"prefabList",message:()=>(w("This list is not exhaustive. You can find more prefabs at "+he.default.blue.underline(A("tradeStore/prefabs"))),"Choose a prefab:"),choices:zr,when:e=>e.prefabChoice==="list"}]));var di=e=>e.startsWith("http")||e.startsWith("https")?e:`https://${e}`,ct=di;var qr=l(require("axios")),X=l(require("fs")),ee=l(require("path"));async function Ur({module:e,rootDir:t,prefabDir:r,name:o,buildaDir:i,websiteUrl:s,buildaReadmeFileName:n}){var b,$,F,N;let a=ee.default.join(t,i,"export");X.default.existsSync(a)||c("No export directory found"),($=(b=e==null?void 0:e.generatorOptions)==null?void 0:b.rootFiles)==null||$.forEach(async T=>{if(typeof T=="string")ae([T],t);else{let oe=T.substitutions??[];await M({log:!0,name:o,paths:[T.path],substitute:oe,source:r.replace(`${t}/`,""),destination:t})}}),(N=(F=e==null?void 0:e.generatorOptions)==null?void 0:F.extraFolders)==null||N.forEach(async T=>{X.default.mkdirSync(ee.default.join(t,T),{recursive:!0}),X.default.writeFileSync(ee.default.join(t,T,".gitkeep"),"")});let p=X.default.readFileSync(ee.default.resolve(r,"package.json"),{encoding:"utf8"}),m=JSON.parse(p),d={...m,name:v(o,"kebabCase")},f=m.scripts,y={};Object.entries(f).forEach(([T,oe])=>{y[T]=Fe(T,oe)}),d.scripts=y,X.default.writeFileSync(ee.default.join(t,"package.json"),JSON.stringify(d,null,2));let h=`${s}/assets/prefab-getting-started.md`,x=[{replace:"%PREFAB_NAME%",with:e.name},{replace:"%PREFAB_URL%",with:e.url},{replace:"%PREFAB_VERSION%",with:e.version}];return await qr.default.get(h,{headers:{"Content-Type":"text/plain"}}).then(T=>{T.status===200&&J({content:T.data,rename:n,outputDir:t,substitute:x})}).catch(T=>{console.log(T),u(`Could not download the getting started file. Visit ${s}/docs/getting-started#prefab for assistance`,"warning")}),u("All files copied to application.","success"),e}var ye=async({appName:e,prefab:t,smokeTest:r})=>{let{buildaDir:o,websiteUrl:i,buildaReadmeFileName:s}=g;Y();let n={};if(!t){let{usePrefab:h}=await Yr.default.prompt([{type:"confirm",name:"usePrefab",message:"Do you want to set the project up using a prefab?",default:!0}]);if(h){let x=await ht();n.prefab=x.prefabUrl||x.prefabList}else w(`You can set up a project from scratch by answering a few questions about your project.\r

If you are unsure about any of these, you can always change them later by editing the 'builda' section of your package.json file.`);n.prefab&&w(`Great! That prefab is ready to install!

First things first though, we need a few more details, to get you set up.`,"success")}let a={};(!t||!e)&&(a=await gt()),n={...n,...a};let p=e||n.appName,m=t||n.prefab,d=v(p,"kebabCase"),f=bt.default.join(We.default.cwd(),d);await j(d),We.default.chdir(d);let y=bt.default.join(f,o,"modules","prefab");if(yt.default.readdirSync(f).length!==0&&c(`The directory: '${d}' already exists. It is not recommended to install a prefab into an existing project.`),m){let h=await ue({prefabPath:m,rootDir:f,prefabDir:y,name:p,buildaDir:o});await q({buildaDir:o,prefabDir:y}),await Ur({module:h,rootDir:f,prefabDir:y,name:p,buildaDir:o,websiteUrl:i,buildaReadmeFileName:s})}u(`Your application, "${p}" has been initialised!`,"success"),r?(We.default.chdir("../"),yt.default.rm(p,{recursive:!0,force:!0},h=>{h&&console.log(h),u("This was a smoke test. No files were created.","primary")})):((0,Gr.default)("cd",[p]),u(`For more information about how to use your application, visit: ${i}/docs/getting-started`,"primary"))};var wt=()=>({command:"project [appName]",desc:"Generate a new app from a prefab",aliases:["app","--app","--project"],builder:e=>e.positional("appName",{describe:"The name of the app",type:"string",default:""}).option("prefab",{alias:"p",default:"",describe:"The prefab to use (url, local path, or preset name)",type:"string"}).option("smokeTest",{alias:"s",default:!1,describe:"Runs the command but deletes the output immediately",type:"boolean"}),handler:async e=>{let t={appName:e.appName,prefab:e.prefab,smokeTest:e.smokeTest};await ye({...t})}});var xt=l(require("chalk")),be=l(require("process")),G=l(require("path")),te=l(require("fs")),_r=l(require("execa"));var vt=async({command:e,args:t})=>{var m;let r=be.default.cwd(),o=G.default.join(be.default.cwd(),g.buildaDir,"export");r.split("/").pop()==="export"&&(o=r);let i=te.default.readFileSync(G.default.resolve(o,"package.json"),{encoding:"utf8"}),a=JSON.parse(i).scripts[e],p="";te.default.existsSync(G.default.resolve(r,"yarn.lock"))&&te.default.existsSync(G.default.resolve(r,"package-lock.json"))?c("Builda detected a yarn.lock file and a package-lock.json file. Please delete one of these files and try again"):te.default.existsSync(G.default.resolve(r,"yarn.lock"))?p="yarn":te.default.existsSync(G.default.resolve(r,"package-lock.json"))?p="npm":c("Builda could not detect a yarn.lock or package-lock.json file. Please run `yarn` or `npm install` and try again"),a||c(`No script found with the name '${e}'`),o||c(`No path found for script '${e}'`),e||c("No command found");try{let d=`${p} run ${e}`;if(t){let f=Object.keys(t),y=Object.values(t),h=f.reduce((x,b,$)=>{let F=y[$],N="";return b==="_"||b==="command"||b==="$0"?x:(b.length===1?N=`-${b}`:N=`--${b}`,F&&typeof F=="boolean"?` ${x} ${N}`:` ${x} ${N}="${F}"`)},"");d=`${d}${h}`}be.default.stdout.write(xt.default.magenta("Running with Builda: ")+xt.default.white.bold(`'${d}'`)+`
`),(m=_r.default.command(d,{cwd:o,stdio:"inherit"}).stdout)==null||m.pipe(be.default.stdout)}catch(d){c(d.message)}};var kt=()=>({command:"execute <command>",desc:"Execute a command from within the export directory",aliases:["x","exec"],builder:e=>e.positional("command",{describe:"The name of the command",type:"string",demandOption:!0}),handler:async e=>vt({command:e.command,args:e})});var we=l(require("process")),$t=l(require("fs"));var St=async({pathString:e})=>{var i;let t=S();e||c("A path must be provided"),(i=t.ejected)!=null&&i.includes(e)&&c(`${e} has already been ejected.`);let r=e.replace(`${we.default.cwd()}/`,""),o=`${we.default.cwd()}/.builda/export/${r}`;try{$t.default.existsSync(o)||c(`No file found at ${o}.`),u(`Moving ${r} to application...`,"info"),ae([r],we.default.cwd()),u(`Deleting original from ${o}`,"info"),$t.default.rmSync(o,{recursive:!0,force:!0});let s=e.replace(`${we.default.cwd()}/`,""),n=t.ejected??[];n.push(s);let a={...t,ejected:n};L(a),u(`Ejected ${e}. You can now edit this file directly.`,"success")}catch(s){c(s.message)}};var Tt=()=>({command:"eject <pathString>",desc:"Eject a file or directory from builda to make it editable",builder:e=>e.positional("pathString",{describe:"The path to the file or directory to eject",type:"string",demandOption:!0}).option("configPath",{aliases:["c","config"],default:"",describe:"The path to a config file",type:"string"}),handler:async e=>St({pathString:e.pathString})});var Be=l(require("fs")),xe=l(require("path"));var re=async e=>{var y;let{buildaDir:t}=g,r=process.cwd(),o=xe.default.join(r,t),i,s;Be.default.existsSync(xe.default.resolve(process.cwd(),"package.json"))&&(i=JSON.parse(Be.default.readFileSync(xe.default.resolve(process.cwd(),"package.json"),"utf8")),s=i.builda,s||c('No "builda" entry found in package.json'));let n=i.name;Be.default.existsSync(t)&&!e&&(u("A .builda directory already exists. The directory will be deleted and rebuilt from the prefab.","warning"),await _("Do you wish to proceed?")||(u("Installation aborted","error"),process.exit(1))),e?u(`Updating ${n}`,"installing"):u(`Installing ${n}`,"installing");let a=`${(y=s.prefab)==null?void 0:y.location}`,p=xe.default.join(o,"modules","prefab");await ue({prefabPath:a,rootDir:r,prefabDir:p,name:n,buildaDir:t}),await q({buildaDir:t,prefabDir:p}),await it();let m=await P(p),d=m.name.replace("prefab-",""),f=m.version;e?u(`${d}, been updated to v${f}`,"success"):u(`${d}, v${f} has been installed`,"success")};var Pt=()=>({command:"install",desc:"Installs the applications prefab and builds the export directory",builder:e=>e.option("configPath",{aliases:["c","config"],default:"",describe:"The path to a config file",type:"string"}),handler:async()=>re()});var Hr=l(require("path")),Zr=l(require("process"));var ve=async({modulePath:e,fromScript:t})=>{var a;let r={},o=S(),i=Zr.default.cwd(),s=Hr.default.join(i,g.buildaDir,"modules"),n=e.includes(" ")?e.split(" "):[e];await j(s);for(let p of n){if(I(p)==="remote"){let m=R({registryPath:p}).url;m||c("No registry found"),r=await V(m)}else r=await K(p);if(!t)if(r!=null&&r.name){let m=r.type,d=r.name,f=r.version;m==="blueprint"&&(o!=null&&o.blueprints||(o.blueprints={}),(a=o==null?void 0:o.blueprints)!=null&&a[d]?c(`A blueprint called ${d} already exists. Perhaps you meant 'builda update ${d}?'`):o.blueprints[d]={version:f,location:p}),m==="prefab"&&c("You cannot add a prefab as a module. A prefab is used to set up a new project. Try 'builda project' instead."),L(o),u(`Added ${d} to your project`,"success")}else c("Something went wrong")}};var{websiteUrl:fi}=g,jt=()=>({command:"add <blueprintPath>",desc:"Adds a new blueprint",builder:e=>e.positional("blueprintPath",{describe:`The path to the blueprint (can be a resolver - see http://${fi}/docs/resolvers)`,type:"string",demandOption:!0}).option("configPath",{aliases:["c","config"],default:"",describe:"The path to a config file",type:"string"}),handler:async e=>ve({modulePath:e.blueprintPath})});var D=l(require("fs")),Vr=l(require("tar"));var Qr=l(require("fs")),Kr=(e,t)=>Qr.default.existsSync(e)?{error:!1,message:""}:{error:!0,message:`Cannot find ${t&&"a folder called"} '${e}' in the current directory.`};var ke=async e=>{let t=await P(),{name:r,type:o,version:i}=t,s="registry.json",n="module",a=[];if(D.default.existsSync(".npmignore")){let x=D.default.readFileSync(".npmignore","utf8").split(`
`).filter(b=>b!==""&&!b.startsWith("#")&&!b.startsWith("!"));a.push(...x)}if(D.default.existsSync(`${n}/.gitignore`)){let x=D.default.readFileSync(`${n}/.gitignore`,"utf8").split(`
`).filter(b=>b!==""&&!b.startsWith("#")&&!b.startsWith("!"));a.push(...x)}a.includes(".builda")&&a.splice(a.indexOf(".builda"),1),t||c(`No ${s} file found. See ${C({link:"docs/packaging"})} for more information.`),r||c(`No name entry found in ${s}. Please add one.\r`),o||c(`No type entry found in ${s}. Please add one.\r`),!i&&!e&&c(`No version entry found in ${s}. Please add one.\r`);let p=Kr(n,!0);p.error&&c(p.message),r.startsWith(`${o}-`)||c(`The name entry in ${s} must be prefixed with ${o}-.\r`),u("All checks passed.","success");let d=(e==null?void 0:e.replace("v",""))||i,f={...t,version:d},y=JSON.stringify(f,null,2);if(D.default.writeFileSync(s,y),D.default.existsSync(`${n}.tgz`)){if(u("A module package already exists. Do you want to overwrite it?","warning"),!await _("Overwrite?")){u("Package process aborted","error");return}D.default.unlinkSync(`${n}.tgz`)}u(`Packaging ${r}...`,"processing"),await Vr.default.create({file:`${n}.tgz`,gzip:!0,cwd:n,filter:h=>!a.includes(h)},D.default.readdirSync(n)),u("Package created","success")};var Ct=()=>({command:"package",desc:"Package a module ready for publishing",aliases:["package","pack"],handler:async()=>ke()});var At=l(require("fs")),ro=require("simple-git");var Xr=async()=>!0;var eo=l(require("fs")),to=(e,t)=>eo.default.existsSync(e)?{error:!1,message:""}:{error:!0,message:`Cannot find ${t&&"a folder called"} '${e}' in the current directory.`};var Et=async e=>{let t=await P(),{name:r,type:o,version:i,publishToTradeStore:s}=t,n="registry.json",a="README.md",p="module.tgz";t||c(`No ${n} file found. Publish can only be ran in the context of a module`),r||c(`No name entry found in ${n}. Please add one.\r`),o||c(`No type entry found in ${n}. Please add one.\r`),!i&&!e&&c(`No version entry found in ${n}. Please add one.\r`),s||u(`No tradeStore entry found in ${n}.
This module will not be published to the Builda Trade Store (https://builda.app/trade-store).\r`,"info"),At.default.existsSync(p)||(u("No module package found. Building package...","processing"),await ke(e),u("Package built","success")),r.startsWith(`${o}-`)||c(`The name entry in ${n} must be prefixed with ${o}-.\r`);let d=to(a);d.error&&c(d.message);let f=(0,ro.simpleGit)();f.checkIsRepo()||c("This is not a git repository. Please initialise git and try again.\r"),(await f.status()).isClean()||c("The git repository is not clean. Please commit all changes and try again.\r"),u("All checks passed.","success");let h=(e==null?void 0:e.replace("v",""))||i,x={...t,version:h},b=JSON.stringify(x,null,2);At.default.writeFileSync(n,b),u(`Adding ${p} to git...`,"processing"),await f.add(`${p}`),await f.commit(`Adds updated ${p}`),u("Added to git","success"),u("Tagging the latest commit...","processing");let $=await f.tags();($.all.includes(h)||$.all.includes(`v${h}`))&&c(`A tag with the version number v${h} already exists. Please update the version number in ${n} and try again.\r`),await f.addTag(`v${h}`);let N="tags";if(t.prerelease)u("Prerelease entry found in registry.json. Skipping latest tag...","info"),N="tag";else{let oe=(await f.listRemote(["--tags"])).includes("refs/tags/latest"),mo=(await f.tags()).all.includes("latest");(oe||mo)&&(await f.tag(["--delete","latest"]),await f.push(["origin","--delete","latest"])),await f.addTag("latest")}await f.pushTags("origin"),u(`${N} created.`,"success"),u("Pushing changes to git...","processing"),await f.push(),u("Changes pushed to git.","success"),s&&(u("Publishing to the Builda Trade Store...","processing"),Xr()),u("Module published.","success")};var Ft=()=>({command:"publish",desc:"publish a module",aliases:["pub","push"],builder:e=>e.option("version",{aliases:["v","ver"],default:"",describe:"update module version (semver)",type:"string"}),handler:async e=>Et(e.version)});var oo=l(require("chokidar"));var Nt=e=>{let{prefab:t}=e,r=[...e.ignored??[]];r.includes(g.buildaDir)||r.push(g.buildaDir),t||c("No prefab found in config file. Watch cannot be run without a prefab"),oo.default.watch(".",{persistent:!0,ignoreInitial:!0,ignored:r}).on("change",i=>{console.log(`File ${i} has been changed`),E({type:"update",pathString:i})}).on("add",i=>{console.log(`File ${i} has been added`),E({type:"copy",pathString:i})}).on("addDir",i=>{console.log(`Directory ${i} has been added`),E({type:"copy",pathString:i})}).on("unlinkDir",i=>{console.log(`Directory ${i} has been deleted`),E({type:"delete",pathString:i})}).on("unlink",i=>{console.log(`File ${i} has been deleted`),E({type:"delete",pathString:i})}).on("ready",()=>{u("Watching for changes...","primary"),u("Press Ctrl+C to stop watching","secondary")})};var Rt=()=>({command:"watch",desc:"Watches your app for changes and rebuilds",aliases:["w"],builder:e=>e.option("configPath",{aliases:["c","config"],default:"",describe:"The path to a config file",type:"string"}),handler:async()=>{let e=await S();if(e!=null&&e.prefab)return Nt(e);(e==null?void 0:e.prefab)===void 0&&c("No prefab found in config file. Watch can only be run within a prefab"),c("No config file found")}});var Dt=l(require("fs")),ze=l(require("path"));var io=l(require("fs")),It=l(require("path"));var Mt=({directory:e,parent:t})=>{let r=io.default.readdirSync(It.default.resolve(e));return r.length!==0?r.map(o=>{let i=t?`${t}/${o}`:o;if(!o.match(/\.[jt]sx$/))return`export { default as ${v(o,"pascalCase")} } from './${i}';`;let s=It.default.parse(o).name;return`export { default as ${v(s,"camelCase")} } from './${s}';`}).filter(o=>o).toString().replace(/,/g,`
`):""};var mi=`/**
 This file is autogenerated by Builda, please do not edit it.
 To generate an updated version, please run \`builda index\`
 **/`,Lt=e=>{let{indexes:t}=e;if(!t)c(`No indexes entry found in the config file. Index files cannot be generated. See ${A("docs/config","indexes")} for more information.`);else{let{directories:r,indexExt:o}=t,i=o||"ts";r.forEach(s=>{let n=s,a=[],p="";s.includes("*")?(n=s.replace("/*",""),a=Dt.default.readdirSync(ze.default.resolve(n)),a.forEach(d=>{let f=ze.default.resolve(`${n}/${d}`);return p+=`${Mt({directory:f,parent:d})}
`})):p=Mt({directory:s});let m=`${mi}

${p}`;p&&Dt.default.writeFileSync(ze.default.resolve(n,`index.${i}`),m)}),u("Generating indexes","config")}};var Ot=()=>({command:"indexer",desc:"Generate an index file for the specified directories",aliases:["index"],builder:e=>e.option("configPath",{aliases:["c","config"],default:"",describe:"The path to a config file",type:"string"}),handler:async e=>{let t=await S();if(t)return Lt(t);c("No config file found")}});var $e=l(require("fs")),Wt=l(require("path"));var gi=e=>{if(e.scripts){let t={};return Object.entries(e.scripts).forEach(o=>{let i=o[0];t[i]=o[1]}),t}else return c('No "scripts" entry found in config file')},so=gi;var ao=l(require("inquirer"));var no=async(e,t,r,o,i)=>{let{buildaDir:s}=g,n=`${t}/${v(e,"kebabCase")}`,a=Wt.default.join(s,"export",n);$e.default.existsSync(n)&&c(`A ${o.use} already exists with the name ${e}`),$e.default.existsSync(a)&&c(`An existing ${o.use} with the name ${e} was found in the prefab. Continuing will overwrite this version.\r
If you want to edit the prefab version, you need to eject it with 'builda eject ${e}'`),$e.default.mkdirSync(n,{recursive:!0});let{path:p,registry:m}=pt("blueprint",r,o),d=(i==null?void 0:i.split(":"))||[],f=d.length===2?{replace:d[0],with:d[1]}:void 0,y=o?ut({registry:m,name:e,script:o,sub:f}):[],h=Wt.default.resolve(p,"module");return $e.default.readdirSync(h).forEach(x=>{let b=`${h}/${x}`,$=`${n}`;J({file:b,rename:b.replace("temp_name",e),outputDir:$,substitute:y,name:e})}),r.prefab&&E({type:"copy",pathString:n}),u("Done!","success")},Bt=async({config:e,name:t,scriptName:r,subString:o})=>{let i=so(e),s=i==null?void 0:i[r];if(s.use)if((!t||t==="")&&c(`You need to provide a name for your new ${r}`),u(`Building new ${r}: '${t}'...`,"notice"),s.variants){let n=await ao.default.prompt([{type:"list",name:"variantChoice",message:`What type of ${r} do you wish to build?`,choices:s.variants.map(a=>({name:a.name,value:a.outputDir}))}]);await no(t,n.variantChoice,e,s,o)}else await no(t,s.outputDir,e,s,o);else c("No valid scripts found")};var zt=()=>({command:"new <scriptName>",desc:"Create something new from a blueprint",builder:e=>e.positional("scriptName",{describe:"The blueprint script to run",type:"string",default:""}).positional("name",{describe:"The name of the new thing",type:"string",default:""}).option("subString",{aliases:["s","sub"],default:"",describe:`A string matcher for the blueprint script. e.g: "%MY_STRING%:'new string'"`,type:"string"}),handler:async e=>{let t=await S();if(t)return Bt({config:t,scriptName:e.scriptName,name:e.name});c("No config file found")}});var Je=l(require("fs")),Jt=l(require("path"));var qt=async({config:e})=>{let{prefab:t}=e,r=process.cwd();t||c("No prefab found in config file. Build cannot be run without a prefab");let o=Jt.default.join(r,g.buildaDir),i=Jt.default.join(r,g.buildaDir,"modules","prefab");Je.default.existsSync(o)||c("No .builda directory found. Try running `builda install` first"),Je.default.existsSync(i)||c("No prefab directory could be found in .builda/modules"),u("Building project...","processing"),Je.default.readdir(r,async(s,n)=>{s&&c(s.message),q({buildaDir:o,prefabDir:i}),(await lt({paths:n,source:r})).forEach(p=>{let d=p.replace(`${r}/`,"");E({type:"update",pathString:d})})})};var Ut=()=>({command:"build",desc:"Build your project",aliases:["-b","--build"],builder:e=>e.option("configPath",{aliases:["c","config"],default:"",describe:"The path to a config file",type:"string"}),handler:async()=>{let e=await S();if(e)return qt({config:e});c("No config file found")}});var Gt=l(require("fs")),lo=l(require("path"));var Yt=async()=>{let e=S(),{prefab:t}=e,{buildaDir:r}=g,o=lo.default.join(process.cwd(),r);if(Gt.default.existsSync(o))Gt.default.rmSync(o,{recursive:!0});else if(!t)c('No prefab found in config (perhaps you meant to run "builda init" or "builda project" instead?)');else return u("Prefab config found but no .builda directory found.","warning"),u('Running "builda install" instead',"info"),re();return re(!0)};var _t=()=>({command:"update",desc:"An alias for `builda install` which skips the existing folder check",builder:e=>e.option("configPath",{aliases:["c","config"],default:"",describe:"The path to a config file",type:"string"}),handler:async()=>Yt()});var Ht=l(require("fs")),co=l(require("events")),Zt=l(require("inquirer")),Se=l(require("chalk"));var Qt=async({config:e})=>{co.default.defaultMaxListeners=50;let{buildaDir:t}=g,r={projectName:"",appRoot:"",packageManager:""};if(e&&Object.keys(e).length!==0){e.prefab&&(w('This project was generated from a prefab and cannot be reinitialised. Maybe you meant to run "builda install" instead?',"error"),process.exit(1)),w(`It looks like builda has already been initialised in this project.
You can overwrite the existing config if you want to start again.\r

`+Se.default.yellow("Be careful though")+", continuing will instantly delete any existing config and your"+t+" directory.","warning");let{overwrite:i}=await Zt.default.prompt([{type:"confirm",name:"overwrite",message:Se.default.red("Are you sure you want to reset the builda config?"),default:!1}]);i||(u("Process aborted at user request","notice"),process.exit(0)),L(null),Ht.default.existsSync(t)&&Ht.default.rmSync(t,{recursive:!0})}w("Welcome to "+Se.default.magenta("Builda")+" This is a guided setup process help you get your project up and running."+C({link:"docs/init",endText:`if you get stuck.

`})+Se.default.white("You can exit the process at any time by pressing Ctrl+C."),"builda");let{initType:o}=await Zt.default.prompt([{type:"list",name:"initType",message:"What would you like to do?",choices:[{name:"I want to start a new project",value:"new"},{name:"I want to add builda to an existing project",value:"existing"},{name:"I want to create my own prefab",value:"prefab"},{name:"I want to create my own blueprint",value:"blueprint"}]}]);if(o==="new"&&(w(`A fresh start! Let's get you set up with a new project.\r

You can choose to use a prefab to get started quickly, or you can set up a project from scratch.`),ye({})),o==="existing"){w(`You can add builda to an existing project by answering a few questions about your project.\r

If you are unsure about any of these, you can always change them later by editing the 'builda' entry in package.json.`);let i=await mt();r={...r,...i};let s=await dt(r);r={...r,...s};let n=r.blueprintUrls||r.blueprintList.join("");L({}),ve({modulePath:n})}o==="prefab"&&(w(`You can create your own prefab by answering a few questions about your project.\r

If you are unsure about any of these, you can always change them later by editing the 'builda' entry in package.json.`+C({link:"docs/build-a-module",anchor:"prefab"})),console.log("Coming soon..."),process.exit(0)),o==="blueprint"&&(w(`You can create your own blueprint by answering a few questions about your project.\r

If you are unsure about any of these, you can always change them later by editing the 'builda' entry in package.json.\r

`+C({link:"docs/build-a-module",anchor:"blueprint"})),console.log("Coming soon..."),process.exit(0))};var Kt=()=>({command:"init",desc:"Initialise builda",builder:e=>e.option("configPath",{aliases:["c","config"],default:"",describe:"The path to a config file",type:"string"}),handler:async e=>{let t=await S(!0);return Qt({config:t||void 0})}});var po=l(require("inquirer")),Vt=async e=>po.default.prompt(e);var Xt=async e=>{var n,a;let t=await P(),r=(a=(n=t==null?void 0:t.generatorOptions)==null?void 0:n.rootFiles)==null?void 0:a.filter(p=>typeof p!="string"&&p.rewrite),o=(r==null?void 0:r.map(p=>p.path))??[],i=r==null?void 0:r.map(p=>p.substitutions??[]),s=[...e,...(i==null?void 0:i.flat())??[]];M({paths:o,substitute:s,source:process.cwd(),destination:process.cwd()})};var{websiteUrl:hi}=g,er=async()=>uo.default.scriptName("builda").usage("$0 <cmd> [args]").help().demandCommand(1,'You need at least one command before moving on. Try "builda --help" for more information').command({...wt()}).command({...Kt()}).command({...Ut()}).command({...jt()}).command({...Tt()}).command({...Pt()}).command({...zt()}).command({...kt()}).command({...Ct()}).command({...Ft()}).command({...Rt()}).command({..._t()}).command({...Ot()}).epilogue(`For more information, visit ${fo.default.blue.underline(`${hi}/docs`)}`).argv;require.main===module&&er();var yi=er;0&&(module.exports={builda,buildaQuestion,buildaSubstitute,changeCase,printMessage,throwError});
