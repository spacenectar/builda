#! /usr/bin/env node
"use strict";var po=Object.create;var Pe=Object.defineProperty;var fo=Object.getOwnPropertyDescriptor;var mo=Object.getOwnPropertyNames;var go=Object.getPrototypeOf,ho=Object.prototype.hasOwnProperty;var yo=(e,t)=>{for(var r in t)Pe(e,r,{get:t[r],enumerable:!0})},tr=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let i of mo(t))!ho.call(e,i)&&i!==r&&Pe(e,i,{get:()=>t[i],enumerable:!(o=fo(t,i))||o.enumerable});return e};var l=(e,t,r)=>(r=e!=null?po(go(e)):{},tr(t||!e||!e.__esModule?Pe(r,"default",{value:e,enumerable:!0}):r,e)),bo=e=>tr(Pe({},"__esModule",{value:!0}),e);var di={};yo(di,{builda:()=>Qt,buildaQuestion:()=>Ht,buildaSubstitute:()=>Zt,changeCase:()=>x,default:()=>pi,printMessage:()=>p,throwError:()=>c});module.exports=bo(di);var co=l(require("yargs")),uo=l(require("chalk"));var g={version:"5.1.0-next.2",buildaDir:".builda",websiteUrl:"https://www.builda.app",buildaReadmeFileName:"getting-started.md",repository:{type:"git",url:"git+https://github.com/spacenectar/builda"}};var qr=l(require("execa")),zr=l(require("inquirer")),gt=l(require("fs")),We=l(require("path")),qe=l(require("process"));var Ce=l(require("chalk"));var ie=()=>console.log(Ce.default.magenta(`
  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 ${Ce.default.white(`v${g.version}
`)}
  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584  \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\u2588\u2588      \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584   \u2584\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588
  \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\u2588\u2588      \u2588\u2588\u2588   \u2580\u2588\u2588\u2588 \u2588\u2588\u2588\u2580   \u2588\u2588\u2588
  \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\u2588\u2588      \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588
  \u2588\u2588\u2588\u2584\u2584\u2584\u2588\u2588\u2580  \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\u2588\u2588      \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588
  \u2588\u2588\u2588\u2580\u2580\u2580\u2588\u2588\u2584  \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\u2588\u2588      \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588
  \u2588\u2588\u2588    \u2588\u2588\u2584 \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\u2588\u2588      \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588
  \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\u2588\u2588      \u2588\u2588\u2588   \u2584\u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588
  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580   \u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2580  \u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580  \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588

  ${Ce.default.white.bold("The Everything Generator")} \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588
`));var k=l(require("chalk")),He=l(require("process")),_e=l(require("readline")),wo={interval:80,frames:["\u280B","\u2819","\u2839","\u2838","\u283C","\u2834","\u2826","\u2827","\u2807","\u280F"]},Ae=He.default.stdout,xo=He.default.stderr,K,vo=(e,t,r)=>{let o=null;if(t&&t==="error"&&(K!==void 0&&clearInterval(K),o=k.default.red(`\u{1F6A8} ${e}`)),t&&t==="danger"&&(o=k.default.red(`${e}`)),t&&t==="warning"&&(o=k.default.yellow(`\u{1F514} ${e}`)),t&&t==="config"&&(o=k.default.blue(`\u{1F527} ${e}`)),t&&t==="downloading"&&(o=k.default.blue(`\u{1F30D} ${e}`)),t&&t==="copying"&&(o=k.default.blue(`\u{1F4C2} ${e}`)),t&&t==="installing"&&(o=k.default.blue(`\u{1F4E6} ${e}`)),t&&t==="notice"&&(o=k.default.blue(`\u{1F4DD} ${e}`)),t&&t==="info"&&(o=k.default.bgHex("#6699CC").white.bold(" i ")+" "+k.default.reset.blue(e)),t&&t==="success"&&(K!==void 0&&clearInterval(K),o=k.default.green(`\u2705 ${e}`)),t&&t==="watch"&&(o=k.default.magenta(`\u{1F440} ${e}`)),t&&t==="build"&&(o=k.default.magenta(`\u{1F3D7} ${e}`)),t&&t==="run"&&(o=k.default.magenta(`\u{1F3C3} ${e}`)),t&&t==="primary"&&(o=k.default.magenta(`${e}`)),t&&t==="secondary"&&(o=k.default.white(`${e}`)),t&&t==="processing"){let s=wo,a=s.frames,n=s.interval,u=0;K!==void 0&&clearInterval(K),K=setInterval(()=>{let m=a[u];m==null&&(u=0,m=a[u]),_e.default.clearLine(Ae,0),_e.default.cursorTo(Ae,0),Ae.write(m),u=u>=a.length?0:u+1},n),o=k.default.blue(`${e}`)}return t||(o=e),r?o:(t==="error"?xo:Ae).write(`${o}
`)},p=vo;var lr=l(require("chalk"));var Ze=["adorable","adventurous","aggressive","agreeable","alert","alive","amused","angry","annoyed","annoying","anxious","arrogant","ashamed","attractive","average","awful","bad","beautiful","better","bewildered","black","bloody","blue","blue-eyed","blushing","bored","brainy","brave","breakable","bright","busy","calm","careful","cautious","charming","cheerful","clean","clear","clever","cloudy","clumsy","colorful","combative","comfortable","concerned","condemned","confused","cooperative","courageous","crazy","creepy","crowded","cruel","curious","cute","dangerous","dark","dead","defeated","defiant","delightful","depressed","determined","different","difficult","disgusted","distinct","disturbed","dizzy","doubtful","drab","dull","eager","easy","elated","elegant","embarrassed","enchanting","encouraging","energetic","enthusiastic","envious","evil","excited","expensive","exuberant","fair","faithful","famous","fancy","fantastic","fierce","filthy","fine","foolish","fragile","frail","frantic","friendly","frightened","funny","gentle","gifted","glamorous","gleaming","glorious","good","gorgeous","graceful","grieving","grotesque","grumpy","handsome","happy","healthy","helpful","helpless","hilarious","homeless","homely","horrible","hungry","hurt","ill","important","impossible","inexpensive","innocent","inquisitive","itchy","jealous","jittery","jolly","joyous","kind","lazy","light","lively","lonely","long","lovely","lucky","magnificent","misty","modern","motionless","muddy","mushy","mysterious","nasty","naughty","nervous","nice","nutty","obedient","obnoxious","odd","old-fashioned","open","outrageous","outstanding","panicky","perfect","plain","pleasant","poised","poor","powerful","precious","prickly","proud","putrid","puzzled","quaint","real","relieved","repulsive","rich","scary","selfish","shiny","shy","silly","sleepy","smiling","smoggy","sore","sparkling","splendid","spotless","stormy","strange","stupid","successful","super","talented","tame","tasty","tender","tense","terrible","thankful","thoughtful","thoughtless","tired","tough","troubled","ugliest","ugly","uninterested","unsightly","unusual","upset","uptight","vast","victorious","vivacious","wandering","weary","wicked","wide-eyed","wild","witty","worried","worrisome","wrong","zany","zealous"],Qe=["Actor","Gold","Painting","Advertisement","Grass","Parrot","Afternoon","Greece","Pencil","Airport","Guitar","Piano","Ambulance","Hair","Pillow","Animal","Hamburger","Pizza","Answer","Helicopter","Planet","Apple","Helmet","Plastic","Army","Holiday","Portugal","Australia","Honey","Potato","Balloon","Horse","Queen","Banana","Hospital","Quill","Battery","House","Rain","Beach","Hydrogen","Rainbow","Beard","Ice","Raincoat","Bed","Insect","Refrigerator","Belgium","Insurance","Restaurant","Boy","Iron","River","Branch","Island","Rocket","Breakfast","Jackal","Room","Brother","Jelly","Rose","Camera","Jewellery","Russia","Candle","Jordan","Sandwich","Car","Juice","School","Caravan","Kangaroo","Scooter","Carpet","King","Shampoo","Cartoon","Kitchen","Shoe","China","Kite","Soccer","Church","Knife","Spoon","Crayon","Lamp","Stone","Crowd","Lawyer","Sugar","Daughter","Leather","Sweden","Death","Library","Teacher","Denmark","Lighter","Telephone","Diamond","Lion","Television","Dinner","Lizard","Tent","Disease","Lock","Thailand","Doctor","London","Tomato","Dog","Lunch","Toothbrush","Dream","Machine","Traffic","Dress","Magazine","Train","Easter","Magician","Truck","Egg","Manchester","Uganda","Eggplant","Market","Umbrella","Egypt","Match","Van","Elephant","Microphone","Vase","Energy","Monkey","Vegetable","Engine","Morning","Vulture","England","Motorcycle","Wall","Evening","Nail","Whale","Eye","Napkin","Window","Family","Needle","Wire","Finland","Nest","Xylophone","Fish","Nigeria","Yacht","Flag","Night","Yak","Flower","Notebook","Zebra","Football","Ocean","Zoo","Forest","Oil","Garden","Fountain","Orange","Gas","France","Oxygen","Girl","Furniture","Oyster","Glass","Garage","Ghost"];var $o=()=>{let e=Ze[Math.floor(Math.random()*Ze.length)],t=Qe[Math.floor(Math.random()*Qe.length)];return`${e.toLowerCase()}-${t.toLowerCase()}`},Ee=$o;var or={root:{root:"/"},tradeStore:{root:"trade-store",prefabs:"prefabs",blueprints:"blueprints"},docs:{root:"docs",gettingStarted:"getting-started",prefabs:"prefabs",config:"config-file",blueprints:"blueprints",telemetry:"telemetry",init:"initialise-a-project",resolvers:"resolvers",indexes:"indexes"}};var O=(e,t)=>{let{websiteUrl:r}=g,o=e.split("/"),i=or,s=o[0]||"./",a=o.map(n=>{var u;return n===s?n:(u=i[s])==null?void 0:u[n]});return`${r}/${a.join("/")}${t?`#${t}`:""}`};var ko=e=>e.startsWith("/")||e.startsWith("./")||e.startsWith("..")||e.startsWith("~")?"local":"remote",M=ko;var ir=e=>{let t=/^(?:[a-zA-Z:]+_[a-zA-Z:]+)+$/,r=/^(?:[A-Z]{1}[a-zA-Z:]+[A-Z]{1}[a-zA-Z:]+)+$/,o=/^(?:[a-z]{1}[a-zA-Z:]+[A-Z]{1}[a-zA-Z:]+)+$/,i=/^(?:[a-zA-Z:]+ [a-zA-Z:]+)+$/,s=/^(?:[a-zA-Z:]+-[a-zA-Z:]+)+$/;return t.test(e)?"snake":r.test(e)?"pascal":o.test(e)?"camel":i.test(e)?"sentence":s.test(e)?"kebab":"unknown"};var ue=e=>e.replace(/\s{2,}/g," ").trim(),sr=e=>{let t=ir(e),r=e.split(/(?=[A-Z:])/).filter(i=>i!==":"),o=r.slice(1).map(i=>i.toLowerCase());if(t==="snake"){let i=e.replace(/_/g," ").toLowerCase().replace(/:/g," ");return ue(i)}if(t==="pascal"){let i=e.split(/(?=[A-Z])/).map(s=>s.toLowerCase()).join(" ").replace(/:/g," ");return ue(i)}if(t==="camel"){let i=r[0]||"";o.unshift(i.toLowerCase());let s=o.join(" ");return ue(s)}if(t==="kebab"){let i=e.replace(/-/g," ").replace(/:/g," ").toLowerCase();return ue(i)}return t==="sentence"?ue(e.replace(/:/g,"")):e};var Fe=["Zero","One","Two","Three","Four","Five","Six","Seven","Eight","Nine"],jo=["Ten","Eleven","Twelve","Thirteen","Fourteen","Fifteen","Sixteen","Seventeen","Eighteen","Nineteen"],nr=["","","Twenty","Thirty","Fourty","Fifty","Sixty","Seventy","Eighty","Ninety"],Re=e=>{let t=/\d+/g,r=e.match(t);if(r){let o=r.map(i=>{let s=parseInt(i,10);if(s<10)return":"+Fe[s];if(s<20)return":"+jo[s-10];if(s<100)return":"+nr[Math.floor(s/10)]+Fe[s%10];if(s<1e3){let a=s%100===0,n=":"+Fe[Math.floor(s/100)]+":Hundred";return a||(n+=":And:"+nr[Math.floor(s%100/10)]+":"+Fe[s%10]),n}if(s<1e6)return Re(Math.floor(s/1e3).toString())+":Thousand"+Re((s%1e3).toString());throw new Error("Numbers larger than 1 million are not supported")}).join(":");return e.replace(t,o)}return e};var ar=e=>e.replace(/&/g,":And").replace(/@/g,":At").replace(/#/g,":Hash").replace(/\$/g,":Dollar").replace(/£/g,":Pound").replace(/%/g,":Percent").replace(/\+/g,":Plus").replace(/\*/g,":Asterisk");var To=(e,t)=>t.startsWith("builda")||t.startsWith("run-s")||t.startsWith("run-p")||t.startsWith("npm-run-all")||t.startsWith("concurrently")?t:`builda x ${e}`,Ne=To;var Po=(e,t)=>{let o=ar(e),i=Re(o),a=sr(i).split(" ");switch(t){case"snakeCase":return a.join("_").toLowerCase();case"kebabCase":return a.join("-").toLowerCase();case"pascalCase":return a.map(n=>n.charAt(0).toUpperCase()+n.slice(1)).join("");case"camelCase":return a.map((n,u)=>u===0?n.charAt(0).toLowerCase()+n.slice(1):n.charAt(0).toUpperCase()+n.slice(1)).join("");case"sentenceCase":default:return a.map((n,u)=>u===0?n.charAt(0).toUpperCase()+n.slice(1):n.charAt(0).toLowerCase()+n.slice(1)).join(" ")}},x=Po;var D=({link:e,anchor:t,endText:r})=>(r=r||"for more information.",`

See `+lr.default.blue.underline(O(e,t))+" "+r);var V=l(require("chalk"));var cr=l(require("inquirer")),y=(e,t)=>{console.clear(),ie();let r=new cr.default.ui.BottomBar,o=process.stdout.columns;t=t||"info";let i="bgBlue",s="i";t==="error"&&(i="bgRed",s="\u2716"),t==="success"&&(i="bgGreen",s="\u2714"),t==="warning"&&(i="bgYellow",s="\u26A0"),t==="builda"&&(i="bgMagenta",s="B\u0333");let a="  "+V.default.bold.white[i](`  ${s}  `),n="  "+V.default[i](" ".repeat(5))+" "+V.default[i](" ".repeat(o-10))+`
`,u=n+a+" "+V.default.bold.white[i](`  ${t.toUpperCase()}${" ".repeat(o-t.length-12)}
`)+n,m=V.default.white("\u2500".repeat(o)),d=e.replace(/\n/g,`
  `).replace(new RegExp(`(.{${o-20}})(\\s|$)`,"g"),`$1
  `);r.log.write(`
${u}\r
  ${V.default.white(d)}\r

${m}\r

`)};var c=e=>{let t=p(e,"danger",!0);throw new Error(t)};var ur=l(require("chalk")),Ke=l(require("process")),pr=l(require("readline")),Ro=e=>new Promise(t=>{let r=pr.default.createInterface({input:Ke.default.stdin,output:Ke.default.stdout});r.question(ur.default.blue(`\u{1F914} ${e} [y/N] `),o=>{o=o.toLowerCase(),r.close(),t(o==="y")})}),Me=Ro;var dr=l(require("fs")),No=(e,t)=>dr.default.cpSync(e,t,{dereference:!0,recursive:!0,force:!0}),_=No;var se=l(require("fs")),Ve=l(require("path")),fr=(e,t)=>{se.default.existsSync(t)||se.default.mkdirSync(t,{recursive:!0}),se.default.readdirSync(e).forEach(r=>{let o=Ve.default.resolve(e,r),i=Ve.default.join(t,r);se.default.lstatSync(o).isDirectory()?fr(o,i):se.default.cpSync(o,i,{recursive:!0,dereference:!0})})},ne=fr;var De=l(require("fs"));var Ie=l(require("path")),Mo=e=>{if(De.default.existsSync(Ie.default.resolve(process.cwd(),"package.json"))){let o={...JSON.parse(De.default.readFileSync(Ie.default.resolve(process.cwd(),"package.json"),"utf8")),builda:e===null?void 0:{...e}};De.default.writeFileSync(Ie.default.resolve(process.cwd(),"package.json"),JSON.stringify(o,null,2))}else c("No package.json found in project")},H=Mo;var Xe=l(require("fs")),Do=async e=>{try{return Xe.default.existsSync(e)||Xe.default.mkdirSync(e,{recursive:!0}),!0}catch{return!1}},T=Do;var et=l(require("fs"));var tt=l(require("path")),Io=e=>{if(et.default.existsSync(tt.default.resolve(process.cwd(),"package.json"))){let r=JSON.parse(et.default.readFileSync(tt.default.resolve(process.cwd(),"package.json"),"utf8")).builda;if(!r&&!e)c('No "builda" entry found in package.json');else if(!r&&e)return{};return r}return c("No package.json found in project")},S=Io;var E=l(require("path")),Le=l(require("fs")),gr=l(require("glob"));var rt=l(require("fs")),ot=l(require("path"));var mr=l(require("prettier")),Lo=["css","html","js","jsx","json","less","md","mdx","scss","sass","ts","tsx","yaml","yml","graphql"],Oo=({file:e,rename:t,content:r,outputDir:o,substitute:i,name:s})=>{let a=e;t&&(a=t),a=a==null?void 0:a.split("/").pop();let n=e?rt.default.readFileSync(ot.default.resolve(e),"utf8"):"",u=r??n;s&&(u=n.replace(/prefab-name-replace-string/g,x(s,"kebabCase")).replace(/%KEBAB_CASE%/g,x(s,"kebabCase")).replace(/%CAMEL_CASE%/g,x(s,"camelCase")).replace(/%SNAKE_CASE%/g,x(s,"snakeCase")).replace(/%PASCAL_CASE%/g,x(s,"pascalCase")).replace(/%SENTENCE_CASE%/g,x(s,"sentenceCase"))),i&&i.length>0&&i.forEach(f=>{let d=`${f.replace}`,b=new RegExp(d,"g");u=u.replace(b,f.with)});let m=a==null?void 0:a.split(".").pop();if(m&&Lo.includes(m)&&(u=e?mr.default.format(u,{filepath:ot.default.resolve(e)}):u),u)return rt.default.writeFileSync(`${o}/${a}`,u);throw new Error(`Could not write file ${a}`)},Z=Oo;var it=async({name:e,paths:t,substitute:r,fromRoot:o=!1,fromCustomPath:i,toRoot:s=!1})=>{let{buildaDir:a}=g,n=E.default.join(a,"modules","prefab"),u=E.default.join(a,"export"),m=[];for(let f of t){let d=o?f:E.default.join(n,f);if(f.includes("*")){let b=gr.default.sync(d).map(h=>E.default.relative(n,h));m.push(await it({name:e,paths:b,substitute:r,fromRoot:o,fromCustomPath:i,toRoot:s}))}else if(Le.default.lstatSync(d).isDirectory()){let h=Le.default.readdirSync(d).map(v=>E.default.join(f,v));m.push(await it({name:e,paths:h,substitute:r,fromRoot:o,fromCustomPath:i,toRoot:s}))}else m.push(new Promise(b=>{let h=E.default.basename(E.default.dirname(f)),v=E.default.basename(f),$=E.default.join(u,h),j=i||E.default.join(process.cwd(),"..",".."),I=E.default.join(j,E.default.dirname(f));if(T($),Le.default.existsSync(d)){let N=r.map(J=>J.reverseInExport?{...J,replace:J.with,with:J.replace}:J);Z({file:d,outputDir:$,substitute:N,name:e}),s&&Z({file:d,rename:v.replace("unique.",""),outputDir:I,substitute:r,name:e})}b(d)}))}await Promise.all(m)},Q=it;var Bo=l(require("fs")),Wo=l(require("path")),qo=l(require("process"));var st=l(require("fs")),Oe=l(require("path"));var{buildaDir:zo}=g,Uo=Oe.default.join(zo,"modules","prefab"),pe=async(e,t,r)=>{e.forEach(async o=>{let i=Oe.default.join(Uo,o);st.default.cpSync(i,Oe.default.join(t,o),{recursive:!0}),r&&st.default.rmSync(i,{recursive:!0,force:!0})})};var X=l(require("fs")),hr=l(require("tar")),nt=l(require("path"));var ae={ignore:[".DS_Store","node_modules",".builda",".git",".github",".vscode","npm-debug.log","yarn-error.log","yarn-debug.log"]};var Go=ae.ignore,Yo=async(e,t,r)=>{X.default.existsSync(`${e}/${r}.tgz`)?(X.default.copyFileSync(`${e}/${r}.tgz`,`${t}/${r}.tgz`),await hr.default.extract({file:`${t}/${r}.tgz`,cwd:t}),X.default.unlinkSync(`${t}/${r}.tgz`)):X.default.readdirSync(nt.default.join(e,r)).filter(a=>!Go.includes(a)).forEach(async a=>{let n=`${e}/${a}`;await T(t).then(()=>{X.default.copyFileSync(n,`${t}/${a}`)})})},_o=async(e,t)=>{let r=nt.default.join(t||"./",g.buildaDir),o=await P(e),i=o.type==="blueprint"?`${r}/modules/blueprints/${o.name}`:`${r}/modules/prefab`;return await T(i),await Yo(e,i,"module"),X.default.writeFileSync(`${i}/registry.json`,JSON.stringify(o)),o},q=_o;var de=l(require("fs")),xr=l(require("path")),vr=l(require("axios")),$r=l(require("tar"));var yr=l(require("fs")),br=l(require("process"));var wr=l(require("axios")),Ho=async e=>{let t="registry.json";if(e=e||br.default.cwd(),M(e)==="local")return JSON.parse(yr.default.readFileSync(`${e}/${t}`,"utf8"));let o=F({registryPath:e});o.error&&c(o.error);let i=o.url;i.includes("%FILE_NAME%")?i=i.replace("%FILE_NAME%",t):i=`${i}/${t}`;let s=await ee(i,!0);return s.status||c(s.message),wr.default.get(i,{responseType:"json"}).then(a=>a.data).catch(a=>{c(a.message)})},P=Ho;var Zo=async(e,t)=>{let r=xr.default.join(t||"./",g.buildaDir),o=await P(e),i=o.type==="blueprint"?`${r}/modules/blueprints/${o.name}`:`${r}/modules/prefab`;return await T(i),p(`Downloading ${o.name}...`,"downloading"),await vr.default.get(`${e}/module.tgz`,{responseType:"arraybuffer",headers:{"Content-Type":"application/gzip"}}).then(s=>de.default.writeFileSync(`${i}/module.tgz`,s.data,{encoding:"binary"})).then(async()=>{if(de.default.existsSync(`${i}/module.tgz`)){p("Extracting module files...","config");try{await $r.default.extract({file:`${i}/module.tgz`,cwd:i}),de.default.unlinkSync(`${i}/module.tgz`)}catch(s){c(s)}}}).catch(s=>{c(`There was an error downloading the tarball. Please check the URL and try again.

${s}`)}).finally(()=>{p("Copying the registry file...","copying"),de.default.writeFileSync(`${i}/registry.json`,JSON.stringify(o,null,2))}),p("Done.","success"),o},z=Zo;var Sr={builda:"https://builda.app/modules/%REPO_NAME%",github:"https://raw.githubusercontent.com/%REPO_NAME%",bitbucket:"https://bitbucket.org/%REPO_NAME%/raw"};var Ko=({resolver:e,modulePath:t,version:r,resolvers:o})=>{let i=o[e];if(!i)return"";let s=i;return s.includes("%REPO_NAME%")?s=s.replace("%REPO_NAME%",t):s=s.replace(`${e}`,""),s.includes("%VERSION%")?s=s.replace("%VERSION%",r):s=`${s}/${r||"latest"}`,s.endsWith("/")&&(s=s.slice(0,-1)),at(s)},kr=Ko;var Vo=({registryPath:e,config:t})=>{var a;let r=e,o="",i=Sr;if(r.startsWith("http")||r.startsWith("https")){let n=r;return r.includes("github.com")&&(n=r.replace("github.com","raw.githubusercontent.com").replace("/blob","").replace("/tree","")),r.includes("bitbucket.org")&&(n=r.replace("src","raw")),n.endsWith("/")&&(n=n.slice(0,-1)),{url:n,error:o}}let s=r.match(/^([a-z]+:{1}[/]{0})([a-z0-9-/]+)((?:@{1}v?[0-9.]+)?(?:[\w\d-]*))?$/);if(s){let n=((a=s[1])==null?void 0:a.replace(":",""))||"",u=s[2]||"",m=s[3]?s[3].replace("@",""):"latest";t&&t.resolvers&&(i={...i,...t.resolvers});let f=kr({resolver:n,modulePath:u,version:m,resolvers:i});return f||(o=`Could not find a resolver for ${r}`),{url:f,error:o}}else return o='Paths must start with a colon terminated lowercase string with no spaces or special characters (e.g. "builda:" or "([a-z]+:{1}[/]{0})" ) if using a resolver or "http(s)" if using a url',{url:"",error:o}},F=Vo;var jr=l(require("fs")),Tr=l(require("path")),Pr=l(require("process"));var Xo=(e,t,r)=>{if(t){let o=`${e}s`,i=Tr.default.resolve(Pr.default.cwd(),`${g.buildaDir}/modules/${o}/${r.use}`),s=JSON.parse(jr.default.readFileSync(`${i}/registry.json`,"utf8"));return{path:i,registry:s}}throw new Error("Could not find config file")},lt=Xo;var ei=({name:e,registry:t,script:r})=>{var s,a;let o=[],i=r!=null&&r.substitute&&((s=r.substitute)==null?void 0:s.length)>0?r==null?void 0:r.substitute:(a=t==null?void 0:t.generatorOptions)==null?void 0:a.substitutions;return i&&i.length&&i.forEach(n=>{var b;let u=n.with==="script"?e:n.with,m=(n==null?void 0:n.replace)||n.replace,d=(n==null?void 0:n.with)||u||"";!u&&!m&&n.required&&c(`"--${n.replace}" missing in arguments. This is required.
`),d&&!m&&o.push({replace:m.toUpperCase(),with:d}),m&&(d===""&&c(`"--${n.replace}" requires a value`),n.valid&&d!==""&&!((b=n.valid)!=null&&b.includes(d))&&c(`
"${d}" is not a valid ${n.replace}. Please use one of the following: 
 - ${n.valid.join(`
 - `)}
`),o.push({replace:n.replace.toUpperCase(),with:d}))}),o},ct=ei;var Ar=l(require("axios")),Er=l(require("ajv"));var Cr={$schema:"http://json-schema.org/draft-07/schema#",definitions:{ModuleConfig:{additionalProperties:{$ref:"#/definitions/ModuleConfigContents"},type:"object"},ModuleConfigContents:{additionalProperties:!1,properties:{location:{description:"The location of the module. This can be a local path, a remote url, a resolver or 'prefab' (if preinstalled inside a prefab)",type:"string"},outputDir:{description:"If the module should have a custom output directory, specify it here (relative to the app_root)",type:"string"},resolve:{anyOf:[{type:"string"},{additionalProperties:!1,properties:{type:{type:"string"},url:{type:"string"}},required:["url","type"],type:"object"}],description:"The custom resolver to use for the module"},version:{description:"The version of the module (not required for blueprints preinstalled inside a prefab)",type:"string"}},required:["location"],type:"object"},ModuleRegistry:{additionalProperties:!1,description:"See (https://builda.app/docs/build-a-module/registry) for more info",properties:{author:{additionalProperties:!1,description:"The module author's details",properties:{buildaUser:{description:"The builda username of the author. This is optional but is required if you want to publish your module to the builda trade store (see (https://builda.app/docs/trade-store))",type:"string"},email:{description:"The author's email",type:"string"},name:{description:"The author's name",type:"string"},website:{description:"The author's website",type:"string"}},required:["name"],type:"object"},blueprints:{$ref:"#/definitions/ModuleConfig",description:"If the module is a prefab and requires blueprints or has it's own blueprints, you should add them here if the module is a blueprint, this field is ignored",examples:["github:cool-developer/blueprint-cool-module@3.0.0","internal:blueprint-name"]},funding:{description:"Is this module looking for funding? If so, you can add a list of funding links here.",items:{type:"string"},type:"array"},generatorOptions:{additionalProperties:!1,description:"A set of options which will be passed to the module generator when the module has been installed",properties:{extraFolders:{description:"Extra folders which should be created in the module root when the module is installed (Will create any folders which don't already exist in the tree)",items:{type:"string"},type:"array"},substitutions:{additionalProperties:!1,description:"A set of substitutions which should be made in the module files when the module is installed",type:"array",items:{$ref:"#/definitions/TSubstitution"}},postScripts:{description:"Any post install scripts which should be run after the module has been installed and all files have been copied across and substitutions made (script paths are relative to the module root and should be in the form of a node cli script)",items:{type:"string"},type:"array"},rootFiles:{description:"Any files which should be copied to the module root when the module is installed in addition to the default files (see (https://builda.app/docs/build-a-module/prefabs#root-files)) e.g. .env files",items:{type:"string"},type:"array"}},type:"object"},keywords:{description:"The module keywords (optional but recommended if you want to publish your module to the builda trade store)",items:{type:"string"},type:"array"},name:{description:"The name of the module",type:"string"},prerelease:{default:!1,description:"If this is a prerelease, set this to true",type:"boolean"},publishToTradeStore:{default:!1,description:"Do you want to publish this module to the builda trade store? (see (https://builda.app/docs/trade-store))",type:"boolean"},type:{description:"The module type",enum:["blueprint","prefab"],type:"string"},url:{description:"The url of the module (generally a git repository) You can also use resolver aliases here. See (https://builda.app/docs/resolvers)",type:"string"},version:{description:"The module version number (in semver format)",pattern:"^\\d+\\.\\d+\\.\\d+$",type:"string"}},required:["name","type","version","url"],type:"object"},RootFile:{additionalProperties:!1,properties:{path:{description:"The path to the root file (relative to the .builda/export directory)",type:"string"},rewrite:{default:!1,description:"Should the file contents be rewritten with the default substitutions? https://builda.app/docs/build-a-module/substitutions",type:"boolean"},substitutions:{description:"Are there any custom substitutions to be made? see (https://builda.app/docs/build-a-module/substitutions)",items:{$ref:"#/definitions/TSubstitution"},type:"array"}},required:["path","substitutions"],type:"object"},TSubstitution:{additionalProperties:!1,properties:{replace:{description:"The string to be replaced",pattern:"^%[A-Z_]+%$",type:"string"},required:{default:!1,description:"Is this substitution required? (i.e. if it is not found, should the build fail?)",type:"boolean"},valid:{description:"Do you want to provide a list of valid options for this substitution? (i.e. if it is not found, should the build fail?)",items:{type:"string"},type:"array"},with:{description:"The string to replace with",type:"string"}},required:["replace","with"],type:"object"}}};var ri=new Er.default,ee=async(e,t)=>{let r=e;if(!t){let i=F({registryPath:e});if(i.error)return{status:!1,message:i.error};r=i.url}let o=r.includes("registry.json")?r:`${r}/registry.json`;return Ar.default.get(o).then(i=>{var n;if(!i.data)return{status:!1,message:"Something went wrong while fetching the registry. No data was returned and no error was provided."};let s=ri.compile(Cr);return s(i.data)?{status:!0,message:"Registry fetched successfully"}:((n=s.errors)==null||n.forEach(u=>{console.log(`Registry validation error: ${u.message}`)}),{status:!1,message:"The registry file is not valid. Please check the documentation for the correct format."})}).catch(i=>i.code==="ENOTFOUND"||i.code==="ERR_BAD_REQUEST"?{status:!1,message:"The url must point to a folder that contains a registry.json file"}:i.code==="ECONNREFUSED"?{status:!1,message:`The server at ${o} is not responding are you sure it is correct?`}:{status:!1,message:i.message})};var Nr=l(require("inquirer")),Be=l(require("chalk"));var Fr=[{name:"Test Blueprint",value:"github:builda-modules/blueprint-test"},{name:"Fake blueprint",value:""},{name:"Another fake blueprint",value:""},{name:"Yet another fake blueprint",value:""}];var Rr=async(e,t)=>{let r=await ee(e);if(r.status){if(t.prefabRegistry){let i=t.prefabRegistry.blueprints;return i&&i[e]?{status:!1,message:"A blueprint with that name already exists"}:{status:!0,message:""}}return{status:!0,message:""}}return{status:!1,message:r.message||"Could not validate the blueprint"}},ut=async e=>(y(`These questions are all about adding blueprints to your project.\r

If you're not sure what a blueprint is`+D({link:"docs/blueprints"})),Nr.default.prompt([{type:"confirm",name:"addBlueprints",message:()=>{let t=[],r=e.prefabRegistry,o=r==null?void 0:r.blueprints;return e.prefab&&o&&(t=Object.keys(o),y(`You are generating this project from the ${Be.default.blue(r.name)} prefab.

It comes with the following blueprints:

	`+t.map(i=>Be.default.blue(i)).join(`
	`)+`

Ensure that any additional blueprints you add are compatible with this prefab.`,"warning")),`Do you want to add any${t.length?"additional":""} blueprints to your project?`},default:!0},{type:"list",name:"blueprintChoice",message:"Do you have url(s) for your blueprint(s) or do you want to choose from a list?",choices:[{name:"I have url(s)",value:"url"},{name:"I want to choose from a list (coming soon)",value:"list",disabled:"This option is not available yet"}]},{type:"input",name:"blueprintUrls",message:"Enter the blueprint url(s) (if adding more than one, please separate them with a space):",when:t=>t.blueprintChoice==="url",validate:async t=>{if(!t)return"You must enter at least one url";let r=t.split(" ");for(let o of r){let i=await Rr(o,e);if(!i.status)return`The module at ${o} returned an error: ${i.message}`}return!0}},{type:"checkbox",name:"blueprintList",message:()=>(y("This list is not exhaustive. You can find more blueprints at "+Be.default.blue.underline(O("tradeStore/blueprints"))),"Choose your blueprints:"),choices:Fr,when:t=>t.blueprintChoice==="list",validate:async t=>{if(!t.length)return"You must choose at least one blueprint";for(let r of t){let o=await Rr(r,e);if(!o.status)return`The module at ${r} returned an error: ${o.message}`}return!0}}]));var fe=l(require("fs")),Mr=l(require("inquirer")),pt=l(require("chalk"));var dt=async()=>{let e=()=>{try{return JSON.parse(fe.default.readFileSync("package.json","utf8"))}catch{return""}};e()||(y("You must have a package.json file in the root of your project to add to an existing project.","error"),process.exit(1));let{name:t}=e(),o=(()=>!!(fe.default.existsSync("lerna.json")||e().workspaces))(),s=(()=>fe.default.existsSync("yarn.lock")?"yarn":fe.default.existsSync("package-lock.json")?"npm":"unknown")();return Mr.default.prompt([{type:"input",name:"projectName",message:`We think your project is called ${pt.default.bold.magenta(t)}. Press enter if correct? If not, enter the correct name here.`,default:t},{type:"input",name:"appRoot",message:()=>(y(`The app root is the directory where your app files are stored.

This is usually your current working directory but if you are using a monorepo or if you'd like to store your app files in a different directory, you can specify it here it here.

If you're not sure, just press enter to use the current working directory.`),`We think your app root ${o?"may be in a monorepo, please enter the package name. If it is not a monorepo, just press enter to use ./ or specify the directory your app is store in":"is ./"}`),default:"./"},{type:"list",name:"packageManager",message:()=>(y("Builda works with both npm and yarn. If you are using a different package manager, unfortunately, Builda may not work for you."),"We think you are using "+pt.default.bold.magenta(s)+". Press enter if correct? If not, select the correct package manager."),choices:["npm","yarn"],default:s}])};var Dr=l(require("inquirer")),Ir=l(require("chalk"));var ft=async e=>{let t=Ee();return e&&y(`Great! That prefab is ready to install!

First things first though, we need a few more details, to get you set up.`,"success"),Dr.default.prompt([{type:"input",name:"appName",required:!0,message:`What do you want to call your project? This will also be the folder name we will create for your app. (If you don't know, just press enter to use ${Ir.default.bold.magenta(t)})`,default:t}])};var Or=l(require("inquirer")),me=l(require("chalk"));var Lr=[{name:"Test Prefab",value:"github:builda-modules/prefab-test"},{name:"Fake prefab",value:""},{name:"Another fake prefab",value:""},{name:"Yet another fake prefab",value:""}];var mt=async()=>(y(`These questions are all about building a project from a prefab.

If you're not sure what a prefab is, visit `+me.default.blue.underline(O("docs/prefabs"))+me.default.white(" for more information.")),Or.default.prompt([{type:"list",name:"prefabChoice",message:"Do you have a prefab url or do you want to choose from a list?",choices:[{name:"I have a url",value:"url"},{name:"I want to choose from a list (coming soon)",value:"list",disabled:"This option is not available yet"}]},{type:"input",name:"prefabUrl",message:()=>(y("The url should point to the folder that the prefabs registry.json file is in. It can be a regular link or use a resolver."+D({link:"docs/resolvers"})),"Enter the prefab url:"),when:e=>e.prefabChoice==="url",validate:async e=>{if(!e)return"You must enter a url";let t=await ee(e);return t.status!==!0&&me.default.red(t.message),t.status}},{type:"list",name:"prefabList",message:()=>(y("This list is not exhaustive. You can find more prefabs at "+me.default.blue.underline(O("tradeStore/prefabs"))),"Choose a prefab:"),choices:Lr,when:e=>e.prefabChoice==="list"}]));var si=e=>e.startsWith("http")||e.startsWith("https")?e:`https://${e}`,at=si;var Br=l(require("axios")),B=l(require("fs")),C=l(require("path"));async function Wr(e,t,r,o,i,s,a,n,u,m){var Ge,Te,Kt,Vt,Xt;if(M(e)==="remote"){let w=F({registryPath:e}).url;w||c("No registry found"),t=await z(w,r)}else t=await q(e,r);t!=null&&t.name||c("No prefab found");let f=t.name,d=t.version,b=((Ge=t==null?void 0:t.generatorOptions)==null?void 0:Ge.substitutions)??[];p(`Installed ${f}@${d}`,"success"),p("Creating export path...","processing"),ne(i,s),p("Export path created","success"),p("Copying required files to application...","copying"),await Q({name:a,paths:o,substitute:[...b,{replace:"%APP_NAME%",with:x(a,"kebabCase")}]});let h=C.default.join(s,n),v=B.default.readFileSync(C.default.resolve(s,"package.json"),{encoding:"utf8"}),$=JSON.parse(v),j={...$};(Kt=(Te=t==null?void 0:t.generatorOptions)==null?void 0:Te.rootFiles)==null||Kt.forEach(async w=>{let oe=typeof w=="string"?w:w.path,L=C.default.dirname(oe),W=C.default.basename(oe);if(typeof w=="string")await pe([w],r);else{let G=w.substitutions??[];await Q({name:a,paths:[w.path],substitute:G,fromCustomPath:r,toRoot:!0})}if(W.startsWith("unique.")){B.default.unlinkSync(C.default.join(s,L,W));let G=W.replace("unique.","");p("Found unique file","processing"),B.default.renameSync(C.default.join(r,L,W),C.default.join(r,L,G)),p(`Renamed unique file to: ${G}`,"success");let Y=$.builda||{},Ye={...Y,ignored:[...Y.ignored||[],C.default.join(L,G)]};j.builda=Ye}}),(Xt=(Vt=t==null?void 0:t.generatorOptions)==null?void 0:Vt.extraFolders)==null||Xt.forEach(async w=>{B.default.mkdirSync(C.default.join(r,w),{recursive:!0}),B.default.writeFileSync(C.default.join(r,w,".gitkeep"),"")});let I=$.scripts,N={};Object.entries(I).forEach(([w,oe])=>{N[w]=Ne(w,oe)}),j.scripts=N,B.default.writeFileSync(C.default.join(r,"package.json"),JSON.stringify(j,null,2));let J=`${u}/assets/prefab-getting-started.md`,Je=[{replace:"%PREFAB_NAME%",with:f},{replace:"%PREFAB_URL%",with:t.url},{replace:"%PREFAB_VERSION%",with:d}];if(await Br.default.get(J,{headers:{"Content-Type":"text/plain"}}).then(w=>{w.status===200&&Z({content:w.data,rename:m,outputDir:r,substitute:Je})}).catch(w=>{console.log(w),p(`Could not download the getting started file. Visit ${u}/docs/getting-started#prefab for assistance`,"warning")}),B.default.existsSync(h)&&B.default.rmSync(h,{recursive:!0}),t.blueprints){p("Installing prefab blueprints...","installing");let w=[],oe=Object.keys(t.blueprints);for(let L of oe){let W=t.blueprints[L];p(`Installing blueprint: "${L}"`,"processing");let G=C.default.join(r,n,"modules","blueprints");if(T(G),W.location==="prefab"){let Y=C.default.join(i,n,"modules","blueprints",L);B.default.existsSync(Y)&&ne(Y,C.default.join(G,L))}else{let Y=M(W.location);w.push(new Promise(Ye=>{if(Y==="local"&&q(W.location,r),Y==="remote"){let er=F({registryPath:W.location}).url;er||c("No registry found"),z(er,r)}Ye(L)}))}p(`${L} installed`,"success")}await Promise.all(w)}return p("All files copied to application.","success"),t}var ge=async({appName:e,prefab:t,smokeTest:r})=>{let{buildaDir:o,websiteUrl:i,buildaReadmeFileName:s}=g,a=[o,"package.json","README.md"];ie();let n={};if(!t){let{usePrefab:j}=await zr.default.prompt([{type:"confirm",name:"usePrefab",message:"Do you want to set the project up using a prefab?",default:!0}]);if(j){let I=await mt();n.prefab=I.prefabUrl||I.prefabList}else y(`You can set up a project from scratch by answering a few questions about your project.\r

If you are unsure about any of these, you can always change them later by editing the 'builda' section of your package.json file.`);n.prefab&&y(`Great! That prefab is ready to install!

First things first though, we need a few more details, to get you set up.`,"success")}let u={};(!t||!e)&&(u=await ft()),n={...n,...u};let m=e||n.appName,f=t||n.prefab,d=x(m,"kebabCase"),b=We.default.join(qe.default.cwd(),d);await T(d),qe.default.chdir(d);let h=We.default.join(b,o,"export"),v=We.default.join(b,o,"modules","prefab");gt.default.readdirSync(b).length!==0&&c(`The directory: '${d}' already exists. It is not recommended to install a prefab into an existing project.`),await T(h),f&&await Wr(f,{},b,a,v,h,m,o,i,s),p(`Your application, "${m}" has been initialised!`,"success"),r?(qe.default.chdir("../"),gt.default.rm(m,{recursive:!0,force:!0},j=>{j&&console.log(j),p("This was a smoke test. No files were created.","primary")})):((0,qr.default)("cd",[m]),p(`For more information about how to use your application, visit: ${i}/docs/getting-started`,"primary"))};var ht=()=>({command:"project [appName]",desc:"Generate a new app from a prefab",aliases:["app","--app","--project"],builder:e=>e.positional("appName",{describe:"The name of the app",type:"string",default:""}).option("prefab",{alias:"p",default:"",describe:"The prefab to use (url, local path, or preset name)",type:"string"}).option("smokeTest",{alias:"s",default:!1,describe:"Runs the command but deletes the output immediately",type:"boolean"}),handler:async e=>{let t={appName:e.appName,prefab:e.prefab,smokeTest:e.smokeTest};await ge({...t})}});var yt=l(require("chalk")),he=l(require("process")),te=l(require("path")),le=l(require("fs")),Ur=l(require("execa"));var bt=async({command:e,args:t})=>{var m;let r=he.default.cwd(),o=te.default.join(he.default.cwd(),g.buildaDir,"export");r.split("/").pop()==="export"&&(o=r);let i=le.default.readFileSync(te.default.resolve(o,"package.json"),{encoding:"utf8"}),n=JSON.parse(i).scripts[e],u="";le.default.existsSync(te.default.resolve(r,"yarn.lock"))&&le.default.existsSync(te.default.resolve(r,"package-lock.json"))?c("Builda detected a yarn.lock file and a package-lock.json file. Please delete one of these files and try again"):le.default.existsSync(te.default.resolve(r,"yarn.lock"))?u="yarn":le.default.existsSync(te.default.resolve(r,"package-lock.json"))?u="npm":c("Builda could not detect a yarn.lock or package-lock.json file. Please run `yarn` or `npm install` and try again"),n||c(`No script found with the name '${e}'`),o||c(`No path found for script '${e}'`),e||c("No command found");try{let f=`${u} run ${e}`;if(t){let d=Object.keys(t),b=Object.values(t),h=d.reduce((v,$,j)=>{let I=b[j],N="";return $==="_"||$==="command"||$==="$0"?v:($.length===1?N=`-${$}`:N=`--${$}`,I&&typeof I=="boolean"?` ${v} ${N}`:` ${v} ${N}="${I}"`)},"");f=`${f}${h}`}he.default.stdout.write(yt.default.magenta("Running with Builda: ")+yt.default.white.bold(`'${f}'`)+`
`),(m=Ur.default.command(f,{cwd:o,stdio:"inherit"}).stdout)==null||m.pipe(he.default.stdout)}catch(f){c(f.message)}};var wt=()=>({command:"execute <command>",desc:"Execute a command from within the export directory",aliases:["x","exec"],builder:e=>e.positional("command",{describe:"The name of the command",type:"string",demandOption:!0}),handler:async e=>bt({command:e.command,args:e})});var ye=l(require("process")),xt=l(require("fs"));var vt=async({pathString:e})=>{var i;let t=S();e||c("A path must be provided"),(i=t.ejected)!=null&&i.includes(e)&&c(`${e} has already been ejected.`);let r=e.replace(`${ye.default.cwd()}/`,""),o=`${ye.default.cwd()}/.builda/export/${r}`;try{xt.default.existsSync(o)||c(`No file found at ${o}.`),p(`Moving ${r} to application...`,"info"),pe([r],ye.default.cwd()),p(`Deleting original from ${o}`,"info"),xt.default.rmSync(o,{recursive:!0,force:!0});let s=e.replace(`${ye.default.cwd()}/`,""),a=t.ejected??[];a.push(s);let n={...t,ejected:a};H(n),p(`Ejected ${e}. You can now edit this file directly.`,"success")}catch(s){c(s.message)}};var $t=()=>({command:"eject <pathString>",desc:"Eject a file or directory from builda to make it editable",builder:e=>e.positional("pathString",{describe:"The path to the file or directory to eject",type:"string",demandOption:!0}).option("configPath",{aliases:["c","config"],default:"",describe:"The path to a config file",type:"string"}),handler:async e=>vt({pathString:e.pathString})});var A=l(require("fs")),R=l(require("path"));var be=async()=>{let e=S(),{prefab:t,blueprints:r}=e,{buildaDir:o}=g,i=process.cwd(),s=R.default.join(i,o,"modules");if(A.default.existsSync(s)||A.default.mkdirSync(s,{recursive:!0}),p("Installing modules...","info"),p("Looking for prefab...","processing"),t){A.default.existsSync(R.default.join(s,"prefab"))?c("prefab directory already exists, aborting"):A.default.mkdirSync(s,{recursive:!0}),p("Prefab found","success"),t.location||c("No prefab location found"),t.location==="prefab"&&c('Prefab location cannot be "prefab". Please specify a specific location'),t.version||p("No prefab version specified, using the location entry as full path to prefab","warning");let a=t.version?`${t.location}/v/${t.version}`:t.location;if(M(a)==="remote"){let u=F({registryPath:a}).url;await z(u)}else await q(a);let n=R.default.join(s,"prefab");if(A.default.existsSync(n)){p("Prefab installed successfully","success"),p("Creating export folder...","processing");let u=R.default.join(i,g.buildaDir),m=R.default.join(u,"modules","prefab"),f=R.default.join(u,"export");A.default.existsSync(f)||(A.default.mkdirSync(f,{recursive:!0}),_(m,f),A.default.existsSync(R.default.join(f,g.buildaDir))&&A.default.rmSync(R.default.join(f,g.buildaDir),{force:!0,recursive:!0}),p("Export folder created successfully","success"))}else c("Prefab installation failed")}else p("No prefab found, skipping...","info");if(p("Looking for blueprints...","processing"),r){p("Blueprints found","success");let a=Object.entries(r);for(let[n,u]of a){if(!u.version&&u.location!=="prefab"&&p(`No version specified for ${n}, using location entry as full path to blueprint`,"warning"),u.location||c(`No blueprint path found for ${n}`),A.default.existsSync(R.default.join(s,"blueprints",n))?c(`blueprint ${n} already exists, aborting`):A.default.mkdirSync(s,{recursive:!0}),u.location==="prefab"){let m=R.default.join(s,"prefab",".builda","modules","blueprints",n);A.default.existsSync(m)?ne(m,R.default.join(s,"blueprints",n)):c(`No blueprint found in prefab for ${n}`)}else{let m=u.version?`${u.location}/v/${u.version}`:u.location;if(M(m)==="remote"){let f=F({registryPath:m}).url;await z(f)}else await q(m)}A.default.existsSync(R.default.join(s,"blueprints",n))?p(`Blueprint ${n} installed successfully`,"success"):c(`Blueprint ${n} installation failed`)}}else p("No blueprints found, skipping...","info")};var St=()=>({command:"install",desc:"Installs the applications prefab and builds the export directory",builder:e=>e.option("configPath",{aliases:["c","config"],default:"",describe:"The path to a config file",type:"string"}),handler:async()=>be()});var Jr=l(require("path")),Gr=l(require("process"));var we=async({modulePath:e,fromScript:t})=>{var n;let r={},o=S(),i=Gr.default.cwd(),s=Jr.default.join(i,g.buildaDir,"modules"),a=e.includes(" ")?e.split(" "):[e];await T(s);for(let u of a){if(M(u)==="remote"){let m=F({registryPath:u}).url;m||c("No registry found"),r=await z(m)}else r=await q(u);if(!t)if(r!=null&&r.name){let m=r.type,f=r.name,d=r.version;m==="blueprint"&&(o!=null&&o.blueprints||(o.blueprints={}),(n=o==null?void 0:o.blueprints)!=null&&n[f]?c(`A blueprint called ${f} already exists. Perhaps you meant 'builda update ${f}?'`):o.blueprints[f]={version:d,location:u}),m==="prefab"&&c("You cannot add a prefab as a module. A prefab is used to set up a new project. Try 'builda project' instead."),H(o),p(`Added ${f} to your project`,"success")}else c("Something went wrong")}};var{websiteUrl:ni}=g,kt=()=>({command:"add <blueprintPath>",desc:"Adds a new blueprint",builder:e=>e.positional("blueprintPath",{describe:`The path to the blueprint (can be a resolver - see http://${ni}/docs/resolvers)`,type:"string",demandOption:!0}).option("configPath",{aliases:["c","config"],default:"",describe:"The path to a config file",type:"string"}),handler:async e=>we({modulePath:e.blueprintPath})});var U=l(require("fs")),Hr=l(require("tar"));var Yr=l(require("fs")),_r=(e,t)=>Yr.default.existsSync(e)?{error:!1,message:""}:{error:!0,message:`Cannot find ${t&&"a folder called"} '${e}' in the current directory.`};var xe=async e=>{let t=await P(),{name:r,type:o,version:i}=t,s="registry.json",a="module",n=[];if(U.default.existsSync(".npmignore")){let v=U.default.readFileSync(".npmignore","utf8").split(`
`);n.push(...v)}if(U.default.existsSync(`${a}/.gitignore`)){let v=U.default.readFileSync(`${a}/.gitignore`,"utf8").split(`
`);n.push(...v)}t||c(`No ${s} file found. See ${D({link:"docs/packaging"})} for more information.`),r||c(`No name entry found in ${s}. Please add one.\r`),o||c(`No type entry found in ${s}. Please add one.\r`),!i&&!e&&c(`No version entry found in ${s}. Please add one.\r`);let u=_r(a,!0);u.error&&c(u.message),r.startsWith(`${o}-`)||c(`The name entry in ${s} must be prefixed with ${o}-.\r`),p("All checks passed.","success");let f=(e==null?void 0:e.replace("v",""))||i,d={...t,version:f},b=JSON.stringify(d,null,2);if(U.default.writeFileSync(s,b),U.default.existsSync(`${a}.tgz`)){if(p("A module package already exists. Do you want to overwrite it?","warning"),!await Me("Overwrite?")){p("Package process aborted","error");return}U.default.unlinkSync(`${a}.tgz`)}p(`Packaging ${r}...`,"processing"),await Hr.default.create({file:`${a}.tgz`,gzip:!0,cwd:a,filter:h=>!n.includes(h)},U.default.readdirSync(a)),p("Package created","success")};var jt=()=>({command:"package",desc:"Package a module ready for publishing",aliases:["package","pack"],handler:async()=>xe()});var Tt=l(require("fs")),Vr=require("simple-git");var Zr=async()=>!0;var Qr=l(require("fs")),Kr=(e,t)=>Qr.default.existsSync(e)?{error:!1,message:""}:{error:!0,message:`Cannot find ${t&&"a folder called"} '${e}' in the current directory.`};var Pt=async e=>{let t=await P(),{name:r,type:o,version:i,publishToTradeStore:s}=t,a="registry.json",n="README.md",u="module.tgz";t||c(`No ${a} file found. Publish can only be ran in the context of a module`),r||c(`No name entry found in ${a}. Please add one.\r`),o||c(`No type entry found in ${a}. Please add one.\r`),!i&&!e&&c(`No version entry found in ${a}. Please add one.\r`),s||p(`No tradeStore entry found in ${a}.
This module will not be published to the Builda Trade Store (https://builda.app/trade-store).\r`,"info"),Tt.default.existsSync(u)||(p("No module package found. Building package...","processing"),await xe(e),p("Package built","success")),r.startsWith(`${o}-`)||c(`The name entry in ${a} must be prefixed with ${o}-.\r`);let f=Kr(n);f.error&&c(f.message);let d=(0,Vr.simpleGit)();d.checkIsRepo()||c("This is not a git repository. Please initialise git and try again.\r"),(await d.status()).isClean()||c("The git repository is not clean. Please commit all changes and try again.\r"),p("All checks passed.","success");let h=(e==null?void 0:e.replace("v",""))||i,v={...t,version:h},$=JSON.stringify(v,null,2);Tt.default.writeFileSync(a,$),p(`Adding ${u} to git...`,"processing"),await d.add(`${u}`),await d.commit(`Adds updated ${u}`),p("Added to git","success"),p("Tagging the latest commit...","processing");let j=await d.tags();(j.all.includes(h)||j.all.includes(`v${h}`))&&c(`A tag with the version number v${h} already exists. Please update the version number in ${a} and try again.\r`),await d.addTag(`v${h}`);let N="tags";if(t.prerelease)p("Prerelease entry found in registry.json. Skipping latest tag...","info"),N="tag";else{let Je=(await d.listRemote(["--tags"])).includes("refs/tags/latest"),Te=(await d.tags()).all.includes("latest");(Je||Te)&&(await d.tag(["--delete","latest"]),await d.push(["origin","--delete","latest"])),await d.addTag("latest")}await d.pushTags("origin"),p(`${N} created.`,"success"),p("Pushing changes to git...","processing"),await d.push(),p("Changes pushed to git.","success"),s&&(p("Publishing to the Builda Trade Store...","processing"),Zr()),p("Module published.","success")};var Ct=()=>({command:"publish",desc:"publish a module",aliases:["pub","push"],builder:e=>e.option("version",{aliases:["v","ver"],default:"",describe:"update module version (semver)",type:"string"}),handler:async e=>Pt(e.version)});var eo=l(require("chokidar"));var re=l(require("path")),At=l(require("fs"));var ve=l(require("path")),$e=l(require("fs"));var Xr=async()=>{if($e.default.existsSync(ve.default.resolve(process.cwd(),"package.json"))){let e=JSON.parse($e.default.readFileSync(ve.default.resolve(process.cwd(),"package.json"),"utf8")),t=JSON.parse($e.default.readFileSync(ve.default.resolve(process.cwd(),g.buildaDir,"modules","prefab","package.json"),"utf8")),r=t.scripts,o=e.scripts,i=Object.keys(o).filter(n=>!Object.keys(r).includes(n)),s={...r};i.forEach(n=>{s[n]=o[n]});let a={...t,dependencies:{...e.dependencies},devDependencies:{...e.devDependencies},peerDependencies:{...e.peerDependencies},scripts:s};$e.default.writeFileSync(ve.default.resolve(process.cwd(),g.buildaDir,"export","package.json"),JSON.stringify(a,null,2))}else c("No package.json found in project")};var ce=async({type:e,pathString:t})=>{var s,a;let r=process.cwd(),o=re.default.resolve(r,g.buildaDir,"export"),i=await P(o);if(e==="copy")return t==="package.json"?void 0:_(`${r}/${t}`,re.default.join(o,t));if(e==="update"){if(t==="package.json")return Xr();let n=(a=(s=i.generatorOptions)==null?void 0:s.rootFiles)==null?void 0:a.find(u=>typeof u=="string"||!u.substitutions||u.substitutions.length===0?!1:u.path===t);if(At.default.rmSync(re.default.join(o,t),{recursive:!0,force:!0}),n)await Q({name:i.name,paths:[re.default.join(r,t)],fromRoot:!0,substitute:n.substitutions});else return _(`${r}/${t}`,re.default.join(r,g.buildaDir,"export",t))}if(e==="delete")return t==="package.json"&&c("package.json deleted. This will break your project"),At.default.rmSync(re.default.join(o,t),{recursive:!0,force:!0})};var Et=e=>{let{prefab:t}=e,r=[...ae.ignore,...e.ignored||[]];t||c("No prefab found in config file. Watch cannot be run without a prefab"),eo.default.watch(".",{persistent:!0,ignoreInitial:!0,ignored:r}).on("change",i=>{console.log(`File ${i} has been changed`),ce({type:"update",pathString:i})}).on("add",i=>{console.log(`File ${i} has been added`),ce({type:"copy",pathString:i})}).on("addDir",i=>{console.log(`Directory ${i} has been added`),ce({type:"copy",pathString:i})}).on("unlinkDir",i=>{console.log(`Directory ${i} has been deleted`),ce({type:"delete",pathString:i})}).on("unlink",i=>{console.log(`File ${i} has been deleted`),ce({type:"delete",pathString:i})}).on("ready",()=>{p("Watching for changes...","primary"),p("Press Ctrl+C to stop watching","secondary")})};var Ft=()=>({command:"watch",desc:"Watches your app for changes and rebuilds",aliases:["w"],builder:e=>e.option("configPath",{aliases:["c","config"],default:"",describe:"The path to a config file",type:"string"}),handler:async()=>{let e=await S();if(e!=null&&e.prefab)return Et(e);(e==null?void 0:e.prefab)===void 0&&c("No prefab found in config file. Watch can only be run within a prefab"),c("No config file found")}});var Mt=l(require("fs")),ze=l(require("path"));var to=l(require("fs")),Rt=l(require("path"));var Nt=({directory:e,parent:t})=>{let r=to.default.readdirSync(Rt.default.resolve(e));return r.length!==0?r.map(o=>{let i=t?`${t}/${o}`:o;if(!o.match(/\.[jt]sx$/))return`export { default as ${x(o,"pascalCase")} } from './${i}';`;let s=Rt.default.parse(o).name;return`export { default as ${x(s,"camelCase")} } from './${s}';`}).filter(o=>o).toString().replace(/,/g,`
`):""};var ai=`/**
 This file is autogenerated by Builda, please do not edit it.
 To generate an updated version, please run \`builda index\`
 **/`,Dt=e=>{let{indexes:t}=e;if(!t)c(`No indexes entry found in the config file. Index files cannot be generated. See ${O("docs/config","indexes")} for more information.`);else{let{directories:r,indexExt:o}=t,i=o||"ts";r.forEach(s=>{let a=s,n=[],u="";s.includes("*")?(a=s.replace("/*",""),n=Mt.default.readdirSync(ze.default.resolve(a)),n.forEach(f=>{let d=ze.default.resolve(`${a}/${f}`);return u+=`${Nt({directory:d,parent:f})}
`})):u=Nt({directory:s});let m=`${ai}

${u}`;u&&Mt.default.writeFileSync(ze.default.resolve(a,`index.${i}`),m)}),p("Generating indexes","config")}};var It=()=>({command:"indexer",desc:"Generate an index file for the specified directories",aliases:["index"],builder:e=>e.option("configPath",{aliases:["c","config"],default:"",describe:"The path to a config file",type:"string"}),handler:async e=>{let t=await S();if(t)return Dt(t);c("No config file found")}});var ke=l(require("fs")),Ot=l(require("path"));var li=e=>{if(e.scripts){let t={};return Object.entries(e.scripts).forEach(o=>{let i=o[0];t[i]=o[1]}),t}else return c('No "scripts" entry found in config file')},ro=li;var so=l(require("inquirer"));var oo=l(require("fs")),Ue=l(require("path"));var ci=ae.ignore,Se=async({config:e})=>{var m,f;let{prefab:t}=e,r=process.cwd(),o=Ue.default.join(r,g.buildaDir),i=Ue.default.join(o,"export"),a=((f=(m=(await P(i)).generatorOptions)==null?void 0:m.rootFiles)==null?void 0:f.filter(d=>!!(typeof d=="string"?d:d.path).startsWith("unique.")))??[],n=[...ci,...a.map(d=>typeof d=="string"?d:d.path)];t||c("No prefab found in config file. Build cannot be run without a prefab");let u=[];p("Building your project","processing"),oo.default.readdir(r,(d,b)=>{d&&c(d.message),b.forEach(h=>{n.includes(h)||_(`${r}/${h}`,Ue.default.join(`${g.buildaDir}/export`,h)),u.push(Promise.resolve(h))}),Promise.all(u).then(()=>{p("Build complete","success")})})};var Lt=()=>({command:"build",desc:"Build your project",aliases:["-b","--build"],builder:e=>e.option("configPath",{aliases:["c","config"],default:"",describe:"The path to a config file",type:"string"}),handler:async()=>{let e=await S();if(e)return Se({config:e});c("No config file found")}});var io=async(e,t,r,o,i)=>{let{buildaDir:s}=g,a=`${t}/${x(e,"kebabCase")}`,n=Ot.default.join(s,"export",a);ke.default.existsSync(a)&&c(`A ${o.use} already exists with the name ${e}`),ke.default.existsSync(n)&&c(`An existing ${o.use} with the name ${e} was found in the prefab. Continuing will overwrite this version.\r
If you want to edit the prefab version, you need to eject it with 'builda eject ${e}'`),ke.default.mkdirSync(a,{recursive:!0});let{path:u,registry:m}=lt("blueprint",r,o),f=(i==null?void 0:i.split(":"))||[],d=f.length===2?{replace:f[0],with:f[1]}:void 0,b=o?ct({registry:m,name:e,script:o,sub:d}):[],h=Ot.default.resolve(u,"module");return ke.default.readdirSync(h).forEach(v=>{let $=`${h}/${v}`,j=`${a}`;Z({file:$,rename:$.replace("temp_name",e),outputDir:j,substitute:b,name:e})}),r.prefab&&Se({config:r}),p("Done!","success")},Bt=async({config:e,name:t,scriptName:r,subString:o})=>{let i=ro(e),s=i==null?void 0:i[r];if(s.use)if((!t||t==="")&&c(`You need to provide a name for your new ${r}`),p(`Building new ${r}: '${t}'...`,"notice"),s.variants){let a=await so.default.prompt([{type:"list",name:"variantChoice",message:`What type of ${r} do you wish to build?`,choices:s.variants.map(n=>({name:n.name,value:n.outputDir}))}]);await io(t,a.variantChoice,e,s,o)}else await io(t,s.outputDir,e,s,o);else c("No valid scripts found")};var Wt=()=>({command:"new <scriptName>",desc:"Create something new from a blueprint",builder:e=>e.positional("scriptName",{describe:"The blueprint script to run",type:"string",default:""}).positional("name",{describe:"The name of the new thing",type:"string",default:""}).option("subString",{aliases:["s","sub"],default:"",describe:`A string matcher for the blueprint script. e.g: "%MY_STRING%:'new string'"`,type:"string"}),handler:async e=>{let t=await S();if(t)return Bt({config:t,scriptName:e.scriptName,name:e.name});c("No config file found")}});var qt=l(require("fs")),no=l(require("path"));var zt=async()=>{let e=S(),{prefab:t}=e,{buildaDir:r}=g,o=no.default.join(process.cwd(),r);qt.default.existsSync(o)?qt.default.rmdirSync(o,{recursive:!0}):t?(p("Prefab config found but no builda directory found.","warning"),p('Running "builda install" instead',"info")):c('No prefab found in config (perhaps you meant to run "builda init" instead?)'),await be()};var Ut=()=>({command:"update",desc:"Updates the applications prefab to the latest version",builder:e=>e.option("configPath",{aliases:["c","config"],default:"",describe:"The path to a config file",type:"string"}),handler:async()=>zt()});var Jt=l(require("fs")),ao=l(require("events")),Gt=l(require("inquirer")),je=l(require("chalk"));var Yt=async({config:e})=>{ao.default.defaultMaxListeners=50;let{buildaDir:t}=g,r={projectName:"",appRoot:"",packageManager:""};if(e&&Object.keys(e).length!==0){e.prefab&&(y('This project was generated from a prefab and cannot be reinitialised. Maybe you meant to run "builda install" instead?',"error"),process.exit(1)),y(`It looks like builda has already been initialised in this project.
You can overwrite the existing config if you want to start again.\r

`+je.default.yellow("Be careful though")+", continuing will instantly delete any existing config and your"+t+" directory.","warning");let{overwrite:i}=await Gt.default.prompt([{type:"confirm",name:"overwrite",message:je.default.red("Are you sure you want to reset the builda config?"),default:!1}]);i||(p("Process aborted at user request","notice"),process.exit(0)),H(null),Jt.default.existsSync(t)&&Jt.default.rmSync(t,{recursive:!0})}y("Welcome to "+je.default.magenta("Builda")+" This is a guided setup process help you get your project up and running."+D({link:"docs/init",endText:`if you get stuck.

`})+je.default.white("You can exit the process at any time by pressing Ctrl+C."),"builda");let{initType:o}=await Gt.default.prompt([{type:"list",name:"initType",message:"What would you like to do?",choices:[{name:"I want to start a new project",value:"new"},{name:"I want to add builda to an existing project",value:"existing"},{name:"I want to create my own prefab",value:"prefab"},{name:"I want to create my own blueprint",value:"blueprint"}]}]);if(o==="new"&&(y(`A fresh start! Let's get you set up with a new project.\r

You can choose to use a prefab to get started quickly, or you can set up a project from scratch.`),ge({})),o==="existing"){y(`You can add builda to an existing project by answering a few questions about your project.\r

If you are unsure about any of these, you can always change them later by editing the 'builda' entry in package.json.`);let i=await dt();r={...r,...i};let s=await ut(r);r={...r,...s};let a=r.blueprintUrls||r.blueprintList.join("");H({}),we({modulePath:a})}o==="prefab"&&(y(`You can create your own prefab by answering a few questions about your project.\r

If you are unsure about any of these, you can always change them later by editing the 'builda' entry in package.json.`+D({link:"docs/build-a-module",anchor:"prefab"})),console.log("Coming soon..."),process.exit(0)),o==="blueprint"&&(y(`You can create your own blueprint by answering a few questions about your project.\r

If you are unsure about any of these, you can always change them later by editing the 'builda' entry in package.json.\r

`+D({link:"docs/build-a-module",anchor:"blueprint"})),console.log("Coming soon..."),process.exit(0))};var _t=()=>({command:"init",desc:"Initialise builda",builder:e=>e.option("configPath",{aliases:["c","config"],default:"",describe:"The path to a config file",type:"string"}),handler:async e=>{let t=await S(!0);return Yt({config:t||void 0})}});var lo=l(require("inquirer")),Ht=async e=>lo.default.prompt(e);var Zt=async e=>{var a,n;let t=await P(),r=(n=(a=t==null?void 0:t.generatorOptions)==null?void 0:a.rootFiles)==null?void 0:n.filter(u=>typeof u!="string"&&u.rewrite),o=(r==null?void 0:r.map(u=>u.path))??[],i=r==null?void 0:r.map(u=>u.substitutions??[]),s=[...e,...(i==null?void 0:i.flat())??[]];console.log({paths:o,substitute:s}),Q({paths:o,substitute:s,fromRoot:!0,toRoot:!0})};var{websiteUrl:ui}=g,Qt=async()=>co.default.scriptName("builda").usage("$0 <cmd> [args]").help().demandCommand(1,'You need at least one command before moving on. Try "builda --help" for more information').command({...ht()}).command({..._t()}).command({...Lt()}).command({...kt()}).command({...$t()}).command({...St()}).command({...Wt()}).command({...wt()}).command({...jt()}).command({...Ct()}).command({...Ft()}).command({...Ut()}).command({...It()}).epilogue(`For more information, visit ${uo.default.blue.underline(`${ui}/docs`)}`).argv;require.main===module&&Qt();var pi=Qt;0&&(module.exports={builda,buildaQuestion,buildaSubstitute,changeCase,printMessage,throwError});
