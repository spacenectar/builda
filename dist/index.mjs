#! /usr/bin/env node
var Tt=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,r)=>(typeof require<"u"?require:t)[r]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw Error('Dynamic require of "'+e+'" is not supported')});import ri from"yargs";import oi from"chalk";var m={version:"5.2.2",buildaDir:".builda",websiteUrl:"https://www.builda.app",buildaReadmeFileName:"getting-started.md",repository:{type:"git",url:"git+https://github.com/spacenectar/builda"}};import Oo from"execa";import Wo from"inquirer";import Xt from"fs";import er from"path";import Ve from"process";import Ee from"chalk";var z=()=>console.log(Ee.magenta(`
  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 ${Ee.white(`v${m.version}
`)}
  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584  \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\u2588\u2588      \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2584   \u2584\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588
  \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\u2588\u2588      \u2588\u2588\u2588   \u2580\u2588\u2588\u2588 \u2588\u2588\u2588\u2580   \u2588\u2588\u2588
  \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\u2588\u2588      \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588
  \u2588\u2588\u2588\u2584\u2584\u2584\u2588\u2588\u2580  \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\u2588\u2588      \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588
  \u2588\u2588\u2588\u2580\u2580\u2580\u2588\u2588\u2584  \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\u2588\u2588      \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588
  \u2588\u2588\u2588    \u2588\u2588\u2584 \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\u2588\u2588      \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588
  \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588 \u2588\u2588\u2588      \u2588\u2588\u2588   \u2584\u2588\u2588\u2588 \u2588\u2588\u2588    \u2588\u2588\u2588
  \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580   \u2580\u2588\u2588\u2588\u2588\u2588\u2588\u2580  \u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2580  \u2588\u2588\u2588    \u2588\u2588\u2588 \u2588\u2588\u2588\u2588\u2588\u2588

  ${Ee.white.bold("The Everything Generator")} \u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588
`));import k from"chalk";import jt from"process";import Pt from"readline";var xr={interval:80,frames:["\u280B","\u2819","\u2839","\u2838","\u283C","\u2834","\u2826","\u2827","\u2807","\u280F"]},pe=jt.stdout,vr=jt.stderr,L,kr=(e,t,r)=>{let o=null;if(t&&t==="error"&&(L!==void 0&&clearInterval(L),o=k.red(`\u{1F6A8} ${e}`)),t&&t==="danger"&&(o=k.red(`${e}`)),t&&t==="warning"&&(o=k.yellow(`\u{1F514} ${e}`)),t&&t==="config"&&(o=k.blue(`\u{1F527} ${e}`)),t&&t==="downloading"&&(o=k.blue(`\u{1F30D} ${e}`)),t&&t==="copying"&&(o=k.blue(`\u{1F4C2} ${e}`)),t&&t==="installing"&&(o=k.blue(`\u{1F4E6} ${e}`)),t&&t==="notice"&&(o=k.blue(`\u{1F4DD} ${e}`)),t&&t==="info"&&(o=k.bgHex("#6699CC").white.bold(" i ")+" "+k.reset.blue(e)),t&&t==="success"&&(L!==void 0&&clearInterval(L),o=k.green(`\u2705 ${e}`)),t&&t==="watch"&&(o=k.magenta(`\u{1F440} ${e}`)),t&&t==="build"&&(o=k.magenta(`\u{1F3D7} ${e}`)),t&&t==="run"&&(o=k.magenta(`\u{1F3C3} ${e}`)),t&&t==="primary"&&(o=k.magenta(`${e}`)),t&&t==="secondary"&&(o=k.white(`${e}`)),t&&t==="processing"){let s=xr,n=s.frames,a=s.interval,c=0;L!==void 0&&clearInterval(L),L=setInterval(()=>{let f=n[c];f==null&&(c=0,f=n[c]),Pt.clearLine(pe,0),Pt.cursorTo(pe,0),pe.write(f),c=c>=n.length?0:c+1},a),o=k.blue(`${e}`)}return t||(o=e),r?o:(t==="error"?vr:pe).write(`${o}
`)},p=kr;import Rr from"chalk";var Fe=["adorable","adventurous","aggressive","agreeable","alert","alive","amused","angry","annoyed","annoying","anxious","arrogant","ashamed","attractive","average","awful","bad","beautiful","better","bewildered","black","bloody","blue","blue-eyed","blushing","bored","brainy","brave","breakable","bright","busy","calm","careful","cautious","charming","cheerful","clean","clear","clever","cloudy","clumsy","colorful","combative","comfortable","concerned","condemned","confused","cooperative","courageous","crazy","creepy","crowded","cruel","curious","cute","dangerous","dark","dead","defeated","defiant","delightful","depressed","determined","different","difficult","disgusted","distinct","disturbed","dizzy","doubtful","drab","dull","eager","easy","elated","elegant","embarrassed","enchanting","encouraging","energetic","enthusiastic","envious","evil","excited","expensive","exuberant","fair","faithful","famous","fancy","fantastic","fierce","filthy","fine","foolish","fragile","frail","frantic","friendly","frightened","funny","gentle","gifted","glamorous","gleaming","glorious","good","gorgeous","graceful","grieving","grotesque","grumpy","handsome","happy","healthy","helpful","helpless","hilarious","homeless","homely","horrible","hungry","hurt","ill","important","impossible","inexpensive","innocent","inquisitive","itchy","jealous","jittery","jolly","joyous","kind","lazy","light","lively","lonely","long","lovely","lucky","magnificent","misty","modern","motionless","muddy","mushy","mysterious","nasty","naughty","nervous","nice","nutty","obedient","obnoxious","odd","old-fashioned","open","outrageous","outstanding","panicky","perfect","plain","pleasant","poised","poor","powerful","precious","prickly","proud","putrid","puzzled","quaint","real","relieved","repulsive","rich","scary","selfish","shiny","shy","silly","sleepy","smiling","smoggy","sore","sparkling","splendid","spotless","stormy","strange","stupid","successful","super","talented","tame","tasty","tender","tense","terrible","thankful","thoughtful","thoughtless","tired","tough","troubled","ugliest","ugly","uninterested","unsightly","unusual","upset","uptight","vast","victorious","vivacious","wandering","weary","wicked","wide-eyed","wild","witty","worried","worrisome","wrong","zany","zealous"],Ne=["Actor","Gold","Painting","Advertisement","Grass","Parrot","Afternoon","Greece","Pencil","Airport","Guitar","Piano","Ambulance","Hair","Pillow","Animal","Hamburger","Pizza","Answer","Helicopter","Planet","Apple","Helmet","Plastic","Army","Holiday","Portugal","Australia","Honey","Potato","Balloon","Horse","Queen","Banana","Hospital","Quill","Battery","House","Rain","Beach","Hydrogen","Rainbow","Beard","Ice","Raincoat","Bed","Insect","Refrigerator","Belgium","Insurance","Restaurant","Boy","Iron","River","Branch","Island","Rocket","Breakfast","Jackal","Room","Brother","Jelly","Rose","Camera","Jewellery","Russia","Candle","Jordan","Sandwich","Car","Juice","School","Caravan","Kangaroo","Scooter","Carpet","King","Shampoo","Cartoon","Kitchen","Shoe","China","Kite","Soccer","Church","Knife","Spoon","Crayon","Lamp","Stone","Crowd","Lawyer","Sugar","Daughter","Leather","Sweden","Death","Library","Teacher","Denmark","Lighter","Telephone","Diamond","Lion","Television","Dinner","Lizard","Tent","Disease","Lock","Thailand","Doctor","London","Tomato","Dog","Lunch","Toothbrush","Dream","Machine","Traffic","Dress","Magazine","Train","Easter","Magician","Truck","Egg","Manchester","Uganda","Eggplant","Market","Umbrella","Egypt","Match","Van","Elephant","Microphone","Vase","Energy","Monkey","Vegetable","Engine","Morning","Vulture","England","Motorcycle","Wall","Evening","Nail","Whale","Eye","Napkin","Window","Family","Needle","Wire","Finland","Nest","Xylophone","Fish","Nigeria","Yacht","Flag","Night","Yak","Flower","Notebook","Zebra","Football","Ocean","Zoo","Forest","Oil","Garden","Fountain","Orange","Gas","France","Oxygen","Girl","Furniture","Oyster","Glass","Garage","Ghost"];var $r=()=>{let e=Fe[Math.floor(Math.random()*Fe.length)],t=Ne[Math.floor(Math.random()*Ne.length)];return`${e.toLowerCase()}-${t.toLowerCase()}`},ue=$r;var At={root:{root:"/"},tradeStore:{root:"trade-store",prefabs:"prefabs",blueprints:"blueprints"},docs:{root:"docs",gettingStarted:"getting-started",prefabs:"prefabs",config:"config-file",blueprints:"blueprints",telemetry:"telemetry",init:"initialise-a-project",resolvers:"resolvers",indexes:"indexes"}};var C=(e,t)=>{let{websiteUrl:r}=m,o=e.split("/"),i=At,s=o[0]||"./",n=o.map(a=>{var c;return a===s?a:(c=i[s])==null?void 0:c[a]});return`${r}/${n.join("/")}${t?`#${t}`:""}`};var Tr=e=>e.startsWith("/")||e.startsWith("./")||e.startsWith("..")||e.startsWith("~")?"local":"remote",R=Tr;var Et=e=>{let t=/^(?:[a-zA-Z:]+_[a-zA-Z:]+)+$/,r=/^(?:[A-Z]{1}[a-zA-Z:]+[A-Z]{1}[a-zA-Z:]+)+$/,o=/^(?:[a-z]{1}[a-zA-Z:]+[A-Z]{1}[a-zA-Z:]+)+$/,i=/^(?:[a-zA-Z:]+ [a-zA-Z:]+)+$/,s=/^(?:[a-zA-Z:]+-[a-zA-Z:]+)+$/;return t.test(e)?"snake":r.test(e)?"pascal":o.test(e)?"camel":i.test(e)?"sentence":s.test(e)?"kebab":"unknown"};var V=e=>e.replace(/\s{2,}/g," ").trim(),Ft=e=>{let t=Et(e),r=e.split(/(?=[A-Z:])/).filter(i=>i!==":"),o=r.slice(1).map(i=>i.toLowerCase());if(t==="snake"){let i=e.replace(/_/g," ").toLowerCase().replace(/:/g," ");return V(i)}if(t==="pascal"){let i=e.split(/(?=[A-Z])/).map(s=>s.toLowerCase()).join(" ").replace(/:/g," ");return V(i)}if(t==="camel"){let i=r[0]||"";o.unshift(i.toLowerCase());let s=o.join(" ");return V(s)}if(t==="kebab"){let i=e.replace(/-/g," ").replace(/:/g," ").toLowerCase();return V(i)}return t==="sentence"?V(e.replace(/:/g,"")):e};var de=["Zero","One","Two","Three","Four","Five","Six","Seven","Eight","Nine"],Pr=["Ten","Eleven","Twelve","Thirteen","Fourteen","Fifteen","Sixteen","Seventeen","Eighteen","Nineteen"],Nt=["","","Twenty","Thirty","Fourty","Fifty","Sixty","Seventy","Eighty","Ninety"],fe=e=>{let t=/\d+/g,r=e.match(t);if(r){let o=r.map(i=>{let s=parseInt(i,10);if(s<10)return":"+de[s];if(s<20)return":"+Pr[s-10];if(s<100)return":"+Nt[Math.floor(s/10)]+de[s%10];if(s<1e3){let n=s%100===0,a=":"+de[Math.floor(s/100)]+":Hundred";return n||(a+=":And:"+Nt[Math.floor(s%100/10)]+":"+de[s%10]),a}if(s<1e6)return fe(Math.floor(s/1e3).toString())+":Thousand"+fe((s%1e3).toString());throw new Error("Numbers larger than 1 million are not supported")}).join(":");return e.replace(t,o)}return e};var Rt=e=>e.replace(/&/g,":And").replace(/@/g,":At").replace(/#/g,":Hash").replace(/\$/g,":Dollar").replace(/£/g,":Pound").replace(/%/g,":Percent").replace(/\+/g,":Plus").replace(/\*/g,":Asterisk");var jr=(e,t)=>t.startsWith("builda")||t.startsWith("run-s")||t.startsWith("run-p")||t.startsWith("npm-run-all")||t.startsWith("concurrently")?t:`builda x ${e}`,me=jr;var Cr=(e,t)=>{let o=Rt(e),i=fe(o),n=Ft(i).split(" ");switch(t){case"snakeCase":return n.join("_").toLowerCase();case"kebabCase":return n.join("-").toLowerCase();case"pascalCase":return n.map(a=>a.charAt(0).toUpperCase()+a.slice(1)).join("");case"camelCase":return n.map((a,c)=>c===0?a.charAt(0).toLowerCase()+a.slice(1):a.charAt(0).toUpperCase()+a.slice(1)).join("");case"sentenceCase":default:return n.map((a,c)=>c===0?a.charAt(0).toUpperCase()+a.slice(1):a.charAt(0).toLowerCase()+a.slice(1)).join(" ")}},x=Cr;var j=({link:e,anchor:t,endText:r})=>(r=r||"for more information.",`

See `+Rr.blue.underline(C(e,t))+" "+r);import J from"chalk";import Ir from"inquirer";var b=(e,t)=>{console.clear(),z();let r=new Ir.ui.BottomBar,o=process.stdout.columns;t=t||"info";let i="bgBlue",s="i";t==="error"&&(i="bgRed",s="\u2716"),t==="success"&&(i="bgGreen",s="\u2714"),t==="warning"&&(i="bgYellow",s="\u26A0"),t==="builda"&&(i="bgMagenta",s="B\u0333");let n="  "+J.bold.white[i](`  ${s}  `),a="  "+J[i](" ".repeat(5))+" "+J[i](" ".repeat(o-10))+`
`,c=a+n+" "+J.bold.white[i](`  ${t.toUpperCase()}${" ".repeat(o-t.length-12)}
`)+a,f=J.white("\u2500".repeat(o)),d=e.replace(/\n/g,`
  `).replace(new RegExp(`(.{${o-20}})(\\s|$)`,"g"),`$1
  `);r.log.write(`
${c}\r
  ${J.white(d)}\r

${f}\r

`)};var l=e=>{let t=p(e,"danger",!0);throw new Error(t)};import Mr from"chalk";import It from"process";import Dr from"readline";var Lr=e=>new Promise(t=>{let r=Dr.createInterface({input:It.stdin,output:It.stdout});r.question(Mr.blue(`\u{1F914} ${e} [y/N] `),o=>{o=o.toLowerCase(),r.close(),t(o==="y")})}),q=Lr;import Or from"fs";var Wr=(e,t)=>Or.cpSync(e,t,{dereference:!0,recursive:!0,force:!0}),ge=Wr;import X from"fs";import Mt from"path";var Dt=(e,t)=>{X.existsSync(t)||X.mkdirSync(t,{recursive:!0}),X.readdirSync(e).forEach(r=>{let o=Mt.resolve(e,r),i=Mt.join(t,r);X.lstatSync(o).isDirectory()?Dt(o,i):X.cpSync(o,i,{recursive:!0,dereference:!0})})},ee=Dt;import Re from"fs";import Ie from"path";var Br=e=>{if(Re.existsSync(Ie.resolve(process.cwd(),"package.json"))){let o={...JSON.parse(Re.readFileSync(Ie.resolve(process.cwd(),"package.json"),"utf8")),builda:e===null?void 0:{...e}};Re.writeFileSync(Ie.resolve(process.cwd(),"package.json"),JSON.stringify(o,null,2))}else l("No package.json found in project")},M=Br;import Lt from"fs";var zr=async e=>{try{return Lt.existsSync(e)||Lt.mkdirSync(e,{recursive:!0}),!0}catch{return!1}},P=zr;import Ot from"fs";import Wt from"path";var Jr=e=>{if(Ot.existsSync(Wt.resolve(process.cwd(),"package.json"))){let r=JSON.parse(Ot.readFileSync(Wt.resolve(process.cwd(),"package.json"),"utf8")).builda;if(!r&&!e)l('No "builda" entry found in package.json');else if(!r&&e)return{};return r}return l("No package.json found in project")},$=Jr;import he from"fs";import U from"path";var qr=(e,t)=>{let r=[],i=he.readFileSync(e,"utf8").split(`
`);for(let s of i)if(s!==""&&s.startsWith("@extends")){let n=s.split(" ")[1];if(he.existsSync(U.resolve(t,n))){let c=he.readFileSync(U.resolve(t,n),"utf8").split(`
`);for(let f of c)if(f!==""&&!f.startsWith("#"))if(n!=null&&n.includes("/")){let u=n.split("/").pop(),d=n.replace(u,"");r.push(U.join(d,f))}else r.push(f)}else l(`File ${n} does not exist. Please check your .buildaignore file.`)}else if(s!==""&&s.startsWith("@"))l(`Invalid line in .buildaignore file: ${s}. Only @extends is allowed to start with @.`);else{if(s!==""&&s.startsWith("!"))continue;s!==""&&!s.startsWith("#")&&r.push(s)}return[...new Set(r)]},Ur=(e,t)=>{let r=[];for(let o of t){let i=U.join(e,o);o.includes("*")||(o.includes("/")?r.push(i):r.push(`**/${o}`))}return r},Gr=(e,t)=>{let r=t?"module":U.join(e,"modules","prefab"),o=U.resolve(r,".buildaignore");if(he.existsSync(o)){let i=qr(o,r);return Ur(r,i)}return[]},Me=Gr;import G from"path";import De from"fs";import Yr from"glob";var Le=async({log:e,name:t,paths:r,substitute:o,source:i,destination:s})=>{let{buildaDir:n}=m,a=G.join(n,"modules","prefab"),c={log:e,name:t,paths:r,substitute:o,source:i,destination:s},f=[];for(let u of r){let d=G.join(i,u);if(!Y(n,d))if(u.includes("*")){let h=Yr.sync(d).map(g=>G.relative(a,g));f.push(await Le({...c,paths:h}))}else if(De.lstatSync(d).isDirectory()){let g=De.readdirSync(d).map(w=>G.join(u,w));f.push(await Le({...c,paths:g}))}else f.push(new Promise(h=>{let g=G.dirname(u),w=G.join(s,g);if(!Y(n,d)){if(P(w),De.existsSync(d)){let y=o.map(v=>v.reverseInExport&&(w.includes("export")||w.includes("prefab"))?{...v,replace:v.with,with:v.replace}:v);O({file:d,outputDir:w,substitute:y,name:t})}h(d)}}))}await Promise.all(f)},I=Le;import Bt from"fs";import zt from"path";import _r from"prettier";var Hr=["css","html","js","jsx","json","less","md","mdx","scss","sass","ts","tsx","yaml","yml","graphql"],Zr=({file:e,rename:t,content:r,outputDir:o,substitute:i,name:s})=>{let n=e;t&&(n=t),n=n==null?void 0:n.split("/").pop();let a=e?Bt.readFileSync(zt.resolve(e),"utf8"):"",c=r??a;s&&(c=a.replace(/prefab-name-replace-string/g,x(s,"kebabCase")).replace(/%KEBAB_CASE%/g,x(s,"kebabCase")).replace(/%CAMEL_CASE%/g,x(s,"camelCase")).replace(/%SNAKE_CASE%/g,x(s,"snakeCase")).replace(/%PASCAL_CASE%/g,x(s,"pascalCase")).replace(/%SENTENCE_CASE%/g,x(s,"sentenceCase"))),i&&i.length>0&&i.forEach(u=>{let d=`${u.replace}`,h=new RegExp(d,"g");c=c.replace(h,u.with)});let f=n==null?void 0:n.split(".").pop();if(f&&Hr.includes(f)&&(c=e?_r.format(c,{filepath:zt.resolve(e)}):c),c)return Bt.writeFileSync(`${o}/${n}`,c);throw new Error(`Could not write file ${n}`)},O=Zr;import Jt from"fs";import Oe from"path";var{buildaDir:Qr}=m,te=async(e,t,r)=>{let o=Oe.join(t,Qr,"modules","prefab");e.forEach(async i=>{let s=Oe.join(o,i);Jt.cpSync(s,Oe.join(t,i),{recursive:!0}),r&&Jt.rmSync(s,{recursive:!0,force:!0})})};import we from"path";import Kr from"fs";import ye from"path";import be from"fs";var We=async()=>{if(be.existsSync(ye.resolve(process.cwd(),"package.json"))){let e=JSON.parse(be.readFileSync(ye.resolve(process.cwd(),"package.json"),"utf8")),r=JSON.parse(be.readFileSync(ye.resolve(process.cwd(),m.buildaDir,"modules","prefab","package.json"),"utf8")).scripts,o=e.scripts,i=Object.keys(o).filter(a=>!Object.keys(r).includes(a)),s={...r};i.forEach(a=>{s[a]=o[a]});let n={...e,scripts:s,dependencies:{...e.dependencies},devDependencies:{...e.devDependencies},peerDependencies:{...e.peerDependencies}};be.writeFileSync(ye.resolve(process.cwd(),m.buildaDir,"export","package.json"),JSON.stringify(n,null,2))}else l("No package.json found in project")},Be=We;var Vr=async({type:e,pathString:t})=>{var s,n;let r=process.cwd(),o=we.join(r,m.buildaDir,"export"),i=await T(o);if(e==="copy")return t==="package.json"?void 0:ge(`${r}/${t}`,we.join(o,t));if(e==="update"){if(t==="package.json")return We();let a=(n=(s=i.generatorOptions)==null?void 0:s.rootFiles)==null?void 0:n.find(c=>typeof c=="string"||!c.substitutions||c.substitutions.length===0?!1:c.path===t);if(a)await I({log:!0,name:i.name,paths:[t],substitute:a.substitutions,source:r,destination:o});else return ge(`${r}/${t}`,we.join(o,t))}if(e==="delete")return t==="package.json"&&l("package.json deleted. This will break your project"),Kr.rmSync(we.join(o,t),{recursive:!0,force:!0})},A=Vr;var Xr=(e,t)=>{let r=Me(e);for(let o of r)if(o.startsWith("**/")){let i=o.replace("**/",""),s=t.split("/").pop();if(i===s)return!0}else if(o===t)return!0;return!1},Y=Xr;import re from"fs";import qt from"path";async function eo({buildaDir:e,prefabDir:t}){re.existsSync(t)||l("No prefab found, cannot export");let r=qt.join(e,"export");p("Creating export path...","processing"),re.existsSync(r)&&re.rmSync(r,{recursive:!0}),ee(t,r),p("Export path created","success");let o=qt.join(r,".builda");re.existsSync(o)&&re.rmSync(o,{recursive:!0}),p("Initial export created","success")}var W=eo;import to from"fs";import ze from"path";async function ro({prefabPath:e,rootDir:t,prefabDir:r,name:o,buildaDir:i}){var c,f;let s;if(R(e)==="remote"){let u=N({registryPath:e}).url;u||l("No registry found"),s=await H(u,t)}else s=await _(e,t);s!=null&&s.name||l("No prefab found");let n=s.name,a=s.version;if(p(`Installed ${n}@${a}`,"success"),(f=(c=s==null?void 0:s.generatorOptions)==null?void 0:c.rootFiles)==null||f.forEach(async u=>{if(typeof u!="string"){let d=u.substitutions??[];await I({name:o,paths:[u.path],substitute:d,source:r,destination:r})}}),s.blueprints){p("Installing prefab blueprints...","installing");let u=[],d=Object.keys(s.blueprints);for(let h of d){let g=s.blueprints[h];p(`Installing blueprint: "${h}"`,"processing");let w=ze.join(t,i,"modules","blueprints");if(P(w),g.location==="prefab"){let y=ze.join(r,i,"modules","blueprints",h);to.existsSync(y)&&ee(y,ze.join(w,h))}else{let y=R(g.location);u.push(new Promise(v=>{if(y==="local"&&_(g.location,t),y==="remote"){let E=N({registryPath:g.location}).url;E||l("No registry found"),H(E,t)}v(h)}))}p(`${h} installed`,"success")}await Promise.all(u)}return p("Prefab has been set up.","success"),s}var oe=ro;import xe from"path";import Ut from"fs";import oo from"glob";var Je=async({log:e,paths:t,source:r})=>{let{buildaDir:o}=m,i=xe.join(o,"modules","prefab"),s={log:e,paths:t,source:r},n=[];for(let a of t){let c=xe.join(r,a);if(!Y(o,c))if(a.includes("*")){let f=oo.sync(c).map(u=>xe.relative(i,u));n.push(await Je({...s,paths:f}))}else if(Ut.lstatSync(c).isDirectory()){let u=Ut.readdirSync(c).map(d=>xe.join(a,d));n.push(await Je({...s,paths:u}))}else n.push(new Promise(f=>{f(c)}))}return Promise.all(n.flat())},qe=Je;import ve from"fs";import io from"tar";import so from"path";var no=async(e,t,r)=>{ve.existsSync(`${e}/${r}.tgz`)?(ve.copyFileSync(`${e}/${r}.tgz`,`${t}/${r}.tgz`),await io.extract({file:`${t}/${r}.tgz`,cwd:t}),ve.unlinkSync(`${t}/${r}.tgz`)):l("No tarball found. Please run `builda package` first")},ao=async(e,t)=>{let r=so.join(t||"./",m.buildaDir),o=await T(e),i=o.type==="blueprint"?`${r}/modules/blueprints/${o.name}`:`${r}/modules/prefab`;return await P(i),await no(e,i,"module"),ve.writeFileSync(`${i}/registry.json`,JSON.stringify(o)),o},_=ao;import ke from"fs";import fo from"path";import mo from"axios";import go from"tar";import lo from"fs";import co from"process";import po from"axios";var uo=async e=>{let t="registry.json";if(e=e||co.cwd(),R(e)==="local")return JSON.parse(lo.readFileSync(`${e}/${t}`,"utf8"));let o=N({registryPath:e});o.error&&l(o.error);let i=o.url;i.includes("%FILE_NAME%")?i=i.replace("%FILE_NAME%",t):i=`${i}/${t}`;let s=await B(i,!0);return s.status||l(s.message),po.get(i,{responseType:"json"}).then(n=>n.data).catch(n=>{l(n.message)})},T=uo;var ho=async(e,t)=>{let r=fo.join(t||"./",m.buildaDir),o=await T(e),i=o.type==="blueprint"?`${r}/modules/blueprints/${o.name}`:`${r}/modules/prefab`;return await P(i),p(`Downloading ${o.name}...`,"downloading"),await mo.get(`${e}/module.tgz`,{responseType:"arraybuffer",headers:{"Content-Type":"application/gzip"}}).then(s=>ke.writeFileSync(`${i}/module.tgz`,s.data,{encoding:"binary"})).then(async()=>{if(ke.existsSync(`${i}/module.tgz`)){p("Extracting module files...","config");try{await go.extract({file:`${i}/module.tgz`,cwd:i}),ke.unlinkSync(`${i}/module.tgz`)}catch(s){l(s)}}}).catch(s=>{l(`There was an error downloading the tarball. Please check the URL and try again.

${s}`)}).finally(()=>{p("Copying the registry file...","copying"),ke.writeFileSync(`${i}/registry.json`,JSON.stringify(o,null,2))}),p("Done.","success"),o},H=ho;var Gt={builda:"https://builda.app/modules/%REPO_NAME%",github:"https://raw.githubusercontent.com/%REPO_NAME%",bitbucket:"https://bitbucket.org/%REPO_NAME%/raw"};var bo=({resolver:e,modulePath:t,version:r,resolvers:o})=>{let i=o[e];if(!i)return"";let s=i;return s.includes("%REPO_NAME%")?s=s.replace("%REPO_NAME%",t):s=s.replace(`${e}`,""),s.includes("%VERSION%")?s=s.replace("%VERSION%",r):s=`${s}/${r||"latest"}`,s.endsWith("/")&&(s=s.slice(0,-1)),Ue(s)},Yt=bo;var wo=({registryPath:e,config:t})=>{var n;let r=e,o="",i=Gt;if(r.startsWith("http")||r.startsWith("https")){let a=r;return r.includes("github.com")&&(a=r.replace("github.com","raw.githubusercontent.com").replace("/blob","").replace("/tree","")),r.includes("bitbucket.org")&&(a=r.replace("src","raw")),a.endsWith("/")&&(a=a.slice(0,-1)),{url:a,error:o}}let s=r.match(/^([a-z]+:{1}[/]{0})([a-z0-9-/]+)((?:@{1}v?[0-9.]+)?(?:[\w\d-]*))?$/);if(s){let a=((n=s[1])==null?void 0:n.replace(":",""))||"",c=s[2]||"",f=s[3]?s[3].replace("@",""):"latest";t!=null&&t.resolvers&&(i={...i,...t.resolvers});let u=Yt({resolver:a,modulePath:c,version:f,resolvers:i});return u||(o=`Could not find a resolver for ${r}`),{url:u,error:o}}else return o='Paths must start with a colon terminated lowercase string with no spaces or special characters (e.g. "builda:" or "([a-z]+:{1}[/]{0})" ) if using a resolver or "http(s)" if using a url',{url:"",error:o}},N=wo;import xo from"fs";import vo from"path";import ko from"process";var $o=(e,t,r)=>{if(t){let o=`${e}s`,i=vo.resolve(ko.cwd(),`${m.buildaDir}/modules/${o}/${r.use}`),s=JSON.parse(xo.readFileSync(`${i}/registry.json`,"utf8"));return{path:i,registry:s}}throw new Error("Could not find config file")},Ge=$o;var So=({name:e,registry:t,script:r})=>{var s,n;let o=[],i=r!=null&&r.substitute&&((s=r.substitute)==null?void 0:s.length)>0?r==null?void 0:r.substitute:(n=t==null?void 0:t.generatorOptions)==null?void 0:n.substitutions;return i&&i.length&&i.forEach(a=>{var h;let c=a.with==="script"?e:a.with,f=(a==null?void 0:a.replace)||a.replace,d=(a==null?void 0:a.with)||c||"";!c&&!f&&a.required&&l(`"--${a.replace}" missing in arguments. This is required.
`),d&&!f&&o.push({replace:f.toUpperCase(),with:d}),f&&(d===""&&l(`"--${a.replace}" requires a value`),a.valid&&d!==""&&!((h=a.valid)!=null&&h.includes(d))&&l(`
"${d}" is not a valid ${a.replace}. Please use one of the following: 
 - ${a.valid.join(`
 - `)}
`),o.push({replace:a.replace.toUpperCase(),with:d}))}),o},Ye=So;import Po from"axios";import jo from"ajv";var _t={$schema:"http://json-schema.org/draft-07/schema#",definitions:{ModuleConfig:{additionalProperties:{$ref:"#/definitions/ModuleConfigContents"},type:"object"},ModuleConfigContents:{additionalProperties:!1,properties:{location:{description:"The location of the module. This can be a local path, a remote url, a resolver or 'prefab' (if preinstalled inside a prefab)",type:"string"},outputDir:{description:"If the module should have a custom output directory, specify it here (relative to the app_root)",type:"string"},resolve:{anyOf:[{type:"string"},{additionalProperties:!1,properties:{type:{type:"string"},url:{type:"string"}},required:["url","type"],type:"object"}],description:"The custom resolver to use for the module"},version:{description:"The version of the module (not required for blueprints preinstalled inside a prefab)",type:"string"}},required:["location"],type:"object"},ModuleRegistry:{additionalProperties:!1,description:"See (https://builda.app/docs/build-a-module/registry) for more info",properties:{author:{additionalProperties:!1,description:"The module author's details",properties:{buildaUser:{description:"The builda username of the author. This is optional but is required if you want to publish your module to the builda trade store (see (https://builda.app/docs/trade-store))",type:"string"},email:{description:"The author's email",type:"string"},name:{description:"The author's name",type:"string"},website:{description:"The author's website",type:"string"}},required:["name"],type:"object"},blueprints:{$ref:"#/definitions/ModuleConfig",description:"If the module is a prefab and requires blueprints or has it's own blueprints, you should add them here if the module is a blueprint, this field is ignored",examples:["github:cool-developer/blueprint-cool-module@3.0.0","internal:blueprint-name"]},funding:{description:"Is this module looking for funding? If so, you can add a list of funding links here.",items:{type:"string"},type:"array"},generatorOptions:{additionalProperties:!1,description:"A set of options which will be passed to the module generator when the module has been installed",properties:{extraFolders:{description:"Extra folders which should be created in the module root when the module is installed (Will create any folders which don't already exist in the tree)",items:{type:"string"},type:"array"},substitutions:{additionalProperties:!1,description:"A set of substitutions which should be made in the module files when the module is installed",type:"array",items:{$ref:"#/definitions/TSubstitution"}},postScripts:{description:"Any post install scripts which should be run after the module has been installed and all files have been copied across and substitutions made (script paths are relative to the module root and should be in the form of a node cli script)",items:{type:"string"},type:"array"},rootFiles:{description:"Any files which should be copied to the module root when the module is installed in addition to the default files (see (https://builda.app/docs/build-a-module/prefabs#root-files)) e.g. .env files",items:{type:"string"},type:"array"}},type:"object"},keywords:{description:"The module keywords (optional but recommended if you want to publish your module to the builda trade store)",items:{type:"string"},type:"array"},name:{description:"The name of the module",type:"string"},prerelease:{default:!1,description:"If this is a prerelease, set this to true",type:"boolean"},publishToTradeStore:{default:!1,description:"Do you want to publish this module to the builda trade store? (see (https://builda.app/docs/trade-store))",type:"boolean"},type:{description:"The module type",enum:["blueprint","prefab"],type:"string"},url:{description:"The url of the module (generally a git repository) You can also use resolver aliases here. See (https://builda.app/docs/resolvers)",type:"string"},version:{description:"The module version number (in semver format)",pattern:"^\\d+\\.\\d+\\.\\d+$",type:"string"}},required:["name","type","version","url"],type:"object"},RootFile:{additionalProperties:!1,properties:{path:{description:"The path to the root file (relative to the .builda/export directory)",type:"string"},rewrite:{default:!1,description:"Should the file contents be rewritten with the default substitutions? https://builda.app/docs/build-a-module/substitutions",type:"boolean"},substitutions:{description:"Are there any custom substitutions to be made? see (https://builda.app/docs/build-a-module/substitutions)",items:{$ref:"#/definitions/TSubstitution"},type:"array"}},required:["path","substitutions"],type:"object"},TSubstitution:{additionalProperties:!1,properties:{replace:{description:"The string to be replaced",pattern:"^%[A-Z_]+%$",type:"string"},required:{default:!1,description:"Is this substitution required? (i.e. if it is not found, should the build fail?)",type:"boolean"},valid:{description:"Do you want to provide a list of valid options for this substitution? (i.e. if it is not found, should the build fail?)",items:{type:"string"},type:"array"},with:{description:"The string to replace with",type:"string"}},required:["replace","with"],type:"object"}}};var Co=new jo,B=async(e,t)=>{let r=e;if(!t){let i=N({registryPath:e});if(i.error)return{status:!1,message:i.error};r=i.url}let o=r.includes("registry.json")?r:`${r}/registry.json`;return Po.get(o).then(i=>{var a;if(!i.data)return{status:!1,message:"Something went wrong while fetching the registry. No data was returned and no error was provided."};let s=Co.compile(_t);return s(i.data)?{status:!0,message:"Registry fetched successfully"}:((a=s.errors)==null||a.forEach(c=>{console.log(`Registry validation error: ${c.message}`)}),{status:!1,message:"The registry file is not valid. Please check the documentation for the correct format."})}).catch(i=>i.code==="ENOTFOUND"||i.code==="ERR_BAD_REQUEST"?{status:!1,message:"The url must point to a folder that contains a registry.json file"}:i.code==="ECONNREFUSED"?{status:!1,message:`The server at ${o} is not responding are you sure it is correct?`}:{status:!1,message:i.message})};import Eo from"inquirer";import _e from"chalk";var Ht=[{name:"Test Blueprint",value:"github:builda-modules/blueprint-test"},{name:"Fake blueprint",value:""},{name:"Another fake blueprint",value:""},{name:"Yet another fake blueprint",value:""}];var Zt=async(e,t)=>{let r=await B(e);if(r.status){if(t.prefabRegistry){let i=t.prefabRegistry.blueprints;return i&&i[e]?{status:!1,message:"A blueprint with that name already exists"}:{status:!0,message:""}}return{status:!0,message:""}}return{status:!1,message:r.message||"Could not validate the blueprint"}},He=async e=>(b(`These questions are all about adding blueprints to your project.\r

If you're not sure what a blueprint is`+j({link:"docs/blueprints"})),Eo.prompt([{type:"confirm",name:"addBlueprints",message:()=>{let t=[],r=e.prefabRegistry,o=r==null?void 0:r.blueprints;return e.prefab&&o&&(t=Object.keys(o),b(`You are generating this project from the ${_e.blue(r.name)} prefab.

It comes with the following blueprints:

	`+t.map(i=>_e.blue(i)).join(`
	`)+`

Ensure that any additional blueprints you add are compatible with this prefab.`,"warning")),`Do you want to add any${t.length?"additional":""} blueprints to your project?`},default:!0},{type:"list",name:"blueprintChoice",message:"Do you have url(s) for your blueprint(s) or do you want to choose from a list?",choices:[{name:"I have url(s)",value:"url"},{name:"I want to choose from a list (coming soon)",value:"list",disabled:"This option is not available yet"}]},{type:"input",name:"blueprintUrls",message:"Enter the blueprint url(s) (if adding more than one, please separate them with a space):",when:t=>t.blueprintChoice==="url",validate:async t=>{if(!t)return"You must enter at least one url";let r=t.split(" ");for(let o of r){let i=await Zt(o,e);if(!i.status)return`The module at ${o} returned an error: ${i.message}`}return!0}},{type:"checkbox",name:"blueprintList",message:()=>(b("This list is not exhaustive. You can find more blueprints at "+_e.blue.underline(C("tradeStore/blueprints"))),"Choose your blueprints:"),choices:Ht,when:t=>t.blueprintChoice==="list",validate:async t=>{if(!t.length)return"You must choose at least one blueprint";for(let r of t){let o=await Zt(r,e);if(!o.status)return`The module at ${r} returned an error: ${o.message}`}return!0}}]));import $e from"fs";import Fo from"inquirer";import Qt from"chalk";var Ze=async()=>{let e=()=>{try{return JSON.parse($e.readFileSync("package.json","utf8"))}catch{return""}};e()||(b("You must have a package.json file in the root of your project to add to an existing project.","error"),process.exit(1));let{name:t}=e(),o=(()=>!!($e.existsSync("lerna.json")||e().workspaces))(),s=(()=>$e.existsSync("yarn.lock")?"yarn":$e.existsSync("package-lock.json")?"npm":"unknown")();return Fo.prompt([{type:"input",name:"projectName",message:`We think your project is called ${Qt.bold.magenta(t)}. Press enter if correct? If not, enter the correct name here.`,default:t},{type:"input",name:"appRoot",message:()=>(b(`The app root is the directory where your app files are stored.

This is usually your current working directory but if you are using a monorepo or if you'd like to store your app files in a different directory, you can specify it here it here.

If you're not sure, just press enter to use the current working directory.`),`We think your app root ${o?"may be in a monorepo, please enter the package name. If it is not a monorepo, just press enter to use ./ or specify the directory your app is store in":"is ./"}`),default:"./"},{type:"list",name:"packageManager",message:()=>(b("Builda works with both npm and yarn. If you are using a different package manager, unfortunately, Builda may not work for you."),"We think you are using "+Qt.bold.magenta(s)+". Press enter if correct? If not, select the correct package manager."),choices:["npm","yarn"],default:s}])};import No from"inquirer";import Ro from"chalk";var Qe=async e=>{let t=ue();return e&&b(`Great! That prefab is ready to install!

First things first though, we need a few more details, to get you set up.`,"success"),No.prompt([{type:"input",name:"appName",required:!0,message:`What do you want to call your project? This will also be the folder name we will create for your app. (If you don't know, just press enter to use ${Ro.bold.magenta(t)})`,default:t}])};import Mo from"inquirer";import Se from"chalk";var Kt=[{name:"Test Prefab",value:"github:builda-modules/prefab-test"},{name:"Fake prefab",value:""},{name:"Another fake prefab",value:""},{name:"Yet another fake prefab",value:""}];var Ke=async()=>(b(`These questions are all about building a project from a prefab.

If you're not sure what a prefab is, visit `+Se.blue.underline(C("docs/prefabs"))+Se.white(" for more information.")),Mo.prompt([{type:"list",name:"prefabChoice",message:"Do you have a prefab url or do you want to choose from a list?",choices:[{name:"I have a url",value:"url"},{name:"I want to choose from a list (coming soon)",value:"list",disabled:"This option is not available yet"}]},{type:"input",name:"prefabUrl",message:()=>(b("The url should point to the folder that the prefabs registry.json file is in. It can be a regular link or use a resolver."+j({link:"docs/resolvers"})),"Enter the prefab url:"),when:e=>e.prefabChoice==="url",validate:async e=>{if(!e)return"You must enter a url";let t=await B(e);return t.status!==!0&&Se.red(t.message),t.status}},{type:"list",name:"prefabList",message:()=>(b("This list is not exhaustive. You can find more prefabs at "+Se.blue.underline(C("tradeStore/prefabs"))),"Choose a prefab:"),choices:Kt,when:e=>e.prefabChoice==="list"}]));var Do=e=>e.startsWith("http")||e.startsWith("https")?e:`https://${e}`,Ue=Do;import Lo from"axios";import ie from"fs";import se from"path";async function Vt({module:e,rootDir:t,prefabDir:r,name:o,buildaDir:i,websiteUrl:s,buildaReadmeFileName:n}){var y,v,E,F;let a=se.join(t,i,"export");ie.existsSync(a)||l("No export directory found"),(v=(y=e==null?void 0:e.generatorOptions)==null?void 0:y.rootFiles)==null||v.forEach(async S=>{if(typeof S=="string")te([S],t);else{let K=S.substitutions??[];await I({log:!0,name:o,paths:[S.path],substitute:K,source:r.replace(`${t}/`,""),destination:t})}}),(F=(E=e==null?void 0:e.generatorOptions)==null?void 0:E.extraFolders)==null||F.forEach(async S=>{ie.mkdirSync(se.join(t,S),{recursive:!0}),ie.writeFileSync(se.join(t,S,".gitkeep"),"")});let c=ie.readFileSync(se.resolve(r,"package.json"),{encoding:"utf8"}),f=JSON.parse(c),u={...f,name:x(o,"kebabCase")},d=f.scripts,h={};Object.entries(d).forEach(([S,K])=>{h[S]=me(S,K)}),u.scripts=h,ie.writeFileSync(se.join(t,"package.json"),JSON.stringify(u,null,2));let g=`${s}/assets/prefab-getting-started.md`,w=[{replace:"%PREFAB_NAME%",with:e.name},{replace:"%PREFAB_URL%",with:e.url},{replace:"%PREFAB_VERSION%",with:e.version}];return await Lo.get(g,{headers:{"Content-Type":"text/plain"}}).then(S=>{S.status===200&&O({content:S.data,rename:n,outputDir:t,substitute:w})}).catch(S=>{console.log(S),p(`Could not download the getting started file. Visit ${s}/docs/getting-started#prefab for assistance`,"warning")}),p("All files copied to application.","success"),e}var ne=async({appName:e,prefab:t,smokeTest:r})=>{let{buildaDir:o,websiteUrl:i,buildaReadmeFileName:s}=m;z();let n={};if(!t){let{usePrefab:g}=await Wo.prompt([{type:"confirm",name:"usePrefab",message:"Do you want to set the project up using a prefab?",default:!0}]);if(g){let w=await Ke();n.prefab=w.prefabUrl||w.prefabList}else b(`You can set up a project from scratch by answering a few questions about your project.\r

If you are unsure about any of these, you can always change them later by editing the 'builda' section of your package.json file.`);n.prefab&&b(`Great! That prefab is ready to install!

First things first though, we need a few more details, to get you set up.`,"success")}let a={};(!t||!e)&&(a=await Qe()),n={...n,...a};let c=e||n.appName,f=t||n.prefab,u=x(c,"kebabCase"),d=er.join(Ve.cwd(),u);await P(u),Ve.chdir(u);let h=er.join(d,o,"modules","prefab");if(Xt.readdirSync(d).length!==0&&l(`The directory: '${u}' already exists. It is not recommended to install a prefab into an existing project.`),f){let g=await oe({prefabPath:f,rootDir:d,prefabDir:h,name:c,buildaDir:o});await W({buildaDir:o,prefabDir:h}),await Vt({module:g,rootDir:d,prefabDir:h,name:c,buildaDir:o,websiteUrl:i,buildaReadmeFileName:s})}p(`Your application, "${c}" has been initialised!`,"success"),r?(Ve.chdir("../"),Xt.rm(c,{recursive:!0,force:!0},g=>{g&&console.log(g),p("This was a smoke test. No files were created.","primary")})):(Oo("cd",[c]),p(`For more information about how to use your application, visit: ${i}/docs/getting-started`,"primary"))};var Xe=()=>({command:"project [appName]",desc:"Generate a new app from a prefab",aliases:["app","--app","--project"],builder:e=>e.positional("appName",{describe:"The name of the app",type:"string",default:""}).option("prefab",{alias:"p",default:"",describe:"The prefab to use (url, local path, or preset name)",type:"string"}).option("smokeTest",{alias:"s",default:!1,describe:"Runs the command but deletes the output immediately",type:"boolean"}),handler:async e=>{let t={appName:e.appName,prefab:e.prefab,smokeTest:e.smokeTest};await ne({...t})}});import tr from"chalk";import Te from"process";import Z from"path";import ae from"fs";import Bo from"execa";var et=async({command:e,args:t})=>{var f;let r=Te.cwd(),o=Z.join(Te.cwd(),m.buildaDir,"export");r.split("/").pop()==="export"&&(o=r);let i=ae.readFileSync(Z.resolve(o,"package.json"),{encoding:"utf8"}),a=JSON.parse(i).scripts[e],c="";ae.existsSync(Z.resolve(r,"yarn.lock"))&&ae.existsSync(Z.resolve(r,"package-lock.json"))?l("Builda detected a yarn.lock file and a package-lock.json file. Please delete one of these files and try again"):ae.existsSync(Z.resolve(r,"yarn.lock"))?c="yarn":ae.existsSync(Z.resolve(r,"package-lock.json"))?c="npm":l("Builda could not detect a yarn.lock or package-lock.json file. Please run `yarn` or `npm install` and try again"),a||l(`No script found with the name '${e}'`),o||l(`No path found for script '${e}'`),e||l("No command found");try{let u=`${c} run ${e}`;if(t){let d=Object.keys(t),h=Object.values(t),g=d.reduce((w,y,v)=>{let E=h[v],F="";return y==="_"||y==="command"||y==="$0"?w:(y.length===1?F=`-${y}`:F=`--${y}`,E&&typeof E=="boolean"?` ${w} ${F}`:` ${w} ${F}="${E}"`)},"");u=`${u}${g}`}Te.stdout.write(tr.magenta("Running with Builda: ")+tr.white.bold(`'${u}'`)+`
`),(f=Bo.command(u,{cwd:o,stdio:"inherit"}).stdout)==null||f.pipe(Te.stdout)}catch(u){l(u.message)}};var tt=()=>({command:"execute <command>",desc:"Execute a command from within the export directory",aliases:["x","exec"],builder:e=>e.positional("command",{describe:"The name of the command",type:"string",demandOption:!0}),handler:async e=>et({command:e.command,args:e})});import Pe from"process";import rr from"fs";var rt=async({pathString:e})=>{var i;let t=$();e||l("A path must be provided"),(i=t.ejected)!=null&&i.includes(e)&&l(`${e} has already been ejected.`);let r=e.replace(`${Pe.cwd()}/`,""),o=`${Pe.cwd()}/.builda/export/${r}`;try{rr.existsSync(o)||l(`No file found at ${o}.`),p(`Moving ${r} to application...`,"info"),te([r],Pe.cwd()),p(`Deleting original from ${o}`,"info"),rr.rmSync(o,{recursive:!0,force:!0});let s=e.replace(`${Pe.cwd()}/`,""),n=t.ejected??[];n.push(s);let a={...t,ejected:n};M(a),p(`Ejected ${e}. You can now edit this file directly.`,"success")}catch(s){l(s.message)}};var ot=()=>({command:"eject <pathString>",desc:"Eject a file or directory from builda to make it editable",builder:e=>e.positional("pathString",{describe:"The path to the file or directory to eject",type:"string",demandOption:!0}).option("configPath",{aliases:["c","config"],default:"",describe:"The path to a config file",type:"string"}),handler:async e=>rt({pathString:e.pathString})});import it from"fs";import je from"path";var Q=async e=>{var h;let{buildaDir:t}=m,r=process.cwd(),o=je.join(r,t),i,s;it.existsSync(je.resolve(process.cwd(),"package.json"))&&(i=JSON.parse(it.readFileSync(je.resolve(process.cwd(),"package.json"),"utf8")),s=i.builda,s||l('No "builda" entry found in package.json'));let n=i.name;it.existsSync(t)&&!e&&(p("A .builda directory already exists. The directory will be deleted and rebuilt from the prefab.","warning"),await q("Do you wish to proceed?")||(p("Installation aborted","error"),process.exit(1))),e?p(`Updating ${n}`,"installing"):p(`Installing ${n}`,"installing");let a=`${(h=s.prefab)==null?void 0:h.location}`,c=je.join(o,"modules","prefab");await oe({prefabPath:a,rootDir:r,prefabDir:c,name:n,buildaDir:t}),await W({buildaDir:t,prefabDir:c}),await Be();let f=await T(c),u=f.name.replace("prefab-",""),d=f.version;e?p(`${u}, been updated to v${d}`,"success"):p(`${u}, v${d} has been installed`,"success")};var st=()=>({command:"install",desc:"Installs the applications prefab and builds the export directory",builder:e=>e.option("configPath",{aliases:["c","config"],default:"",describe:"The path to a config file",type:"string"}),handler:async()=>Q()});import zo from"path";import Jo from"process";var le=async({modulePath:e,fromScript:t})=>{var a;let r={},o=$(),i=Jo.cwd(),s=zo.join(i,m.buildaDir,"modules"),n=e.includes(" ")?e.split(" "):[e];await P(s);for(let c of n){if(R(c)==="remote"){let f=N({registryPath:c}).url;f||l("No registry found"),r=await H(f)}else r=await _(c);if(!t)if(r!=null&&r.name){let f=r.type,u=r.name,d=r.version;f==="blueprint"&&(o!=null&&o.blueprints||(o.blueprints={}),(a=o==null?void 0:o.blueprints)!=null&&a[u]?l(`A blueprint called ${u} already exists. Perhaps you meant 'builda update ${u}?'`):o.blueprints[u]={version:d,location:c}),f==="prefab"&&l("You cannot add a prefab as a module. A prefab is used to set up a new project. Try 'builda project' instead."),M(o),p(`Added ${u} to your project`,"success")}else l("Something went wrong")}};var{websiteUrl:qo}=m,nt=()=>({command:"add <blueprintPath>",desc:"Adds a new blueprint",builder:e=>e.positional("blueprintPath",{describe:`The path to the blueprint (can be a resolver - see http://${qo}/docs/resolvers)`,type:"string",demandOption:!0}).option("configPath",{aliases:["c","config"],default:"",describe:"The path to a config file",type:"string"}),handler:async e=>le({modulePath:e.blueprintPath})});import D from"fs";import Go from"tar";import Uo from"fs";var or=(e,t)=>Uo.existsSync(e)?{error:!1,message:""}:{error:!0,message:`Cannot find ${t&&"a folder called"} '${e}' in the current directory.`};var ce=async e=>{let t=await T(),{name:r,type:o,version:i}=t,s="registry.json",n="module",a=[];if(D.existsSync(".npmignore")){let w=D.readFileSync(".npmignore","utf8").split(`
`).filter(y=>y!==""&&!y.startsWith("#")&&!y.startsWith("!"));a.push(...w)}if(D.existsSync(`${n}/.gitignore`)){let w=D.readFileSync(`${n}/.gitignore`,"utf8").split(`
`).filter(y=>y!==""&&!y.startsWith("#")&&!y.startsWith("!"));a.push(...w)}a.includes(".builda")&&a.splice(a.indexOf(".builda"),1),t||l(`No ${s} file found. See ${j({link:"docs/packaging"})} for more information.`),r||l(`No name entry found in ${s}. Please add one.\r`),o||l(`No type entry found in ${s}. Please add one.\r`),!i&&!e&&l(`No version entry found in ${s}. Please add one.\r`);let c=or(n,!0);c.error&&l(c.message),r.startsWith(`${o}-`)||l(`The name entry in ${s} must be prefixed with ${o}-.\r`),p("All checks passed.","success");let u=(e==null?void 0:e.replace("v",""))||i,d={...t,version:u},h=JSON.stringify(d,null,2);if(D.writeFileSync(s,h),D.existsSync(`${n}.tgz`)){if(p("A module package already exists. Do you want to overwrite it?","warning"),!await q("Overwrite?")){p("Package process aborted","error");return}D.unlinkSync(`${n}.tgz`)}p(`Packaging ${r}...`,"processing"),await Go.create({file:`${n}.tgz`,gzip:!0,cwd:n,filter:g=>!a.includes(g)},D.readdirSync(n)),p("Package created","success")};var at=()=>({command:"package",desc:"Package a module ready for publishing",aliases:["package","pack"],handler:async()=>ce()});import nr from"fs";import{simpleGit as _o}from"simple-git";var ir=async()=>!0;import Yo from"fs";var sr=(e,t)=>Yo.existsSync(e)?{error:!1,message:""}:{error:!0,message:`Cannot find ${t&&"a folder called"} '${e}' in the current directory.`};var lt=async e=>{let t=await T(),{name:r,type:o,version:i,publishToTradeStore:s}=t,n="registry.json",a="README.md",c="module.tgz";t||l(`No ${n} file found. Publish can only be ran in the context of a module`),r||l(`No name entry found in ${n}. Please add one.\r`),o||l(`No type entry found in ${n}. Please add one.\r`),!i&&!e&&l(`No version entry found in ${n}. Please add one.\r`),s||p(`No tradeStore entry found in ${n}.
This module will not be published to the Builda Trade Store (https://builda.app/trade-store).\r`,"info"),nr.existsSync(c)||(p("No module package found. Building package...","processing"),await ce(e),p("Package built","success")),r.startsWith(`${o}-`)||l(`The name entry in ${n} must be prefixed with ${o}-.\r`);let u=sr(a);u.error&&l(u.message);let d=_o();d.checkIsRepo()||l("This is not a git repository. Please initialise git and try again.\r"),(await d.status()).isClean()||l("The git repository is not clean. Please commit all changes and try again.\r"),p("All checks passed.","success");let g=(e==null?void 0:e.replace("v",""))||i,w={...t,version:g},y=JSON.stringify(w,null,2);nr.writeFileSync(n,y),p(`Adding ${c} to git...`,"processing"),await d.add(`${c}`),await d.commit(`Adds updated ${c}`),p("Added to git","success"),p("Tagging the latest commit...","processing");let v=await d.tags();(v.all.includes(g)||v.all.includes(`v${g}`))&&l(`A tag with the version number v${g} already exists. Please update the version number in ${n} and try again.\r`),await d.addTag(`v${g}`);let F="tags";if(t.prerelease)p("Prerelease entry found in registry.json. Skipping latest tag...","info"),F="tag";else{let K=(await d.listRemote(["--tags"])).includes("refs/tags/latest"),wr=(await d.tags()).all.includes("latest");(K||wr)&&(await d.tag(["--delete","latest"]),await d.push(["origin","--delete","latest"])),await d.addTag("latest")}await d.pushTags("origin"),p(`${F} created.`,"success"),p("Pushing changes to git...","processing"),await d.push(),p("Changes pushed to git.","success"),s&&(p("Publishing to the Builda Trade Store...","processing"),ir()),p("Module published.","success")};var ct=()=>({command:"publish",desc:"publish a module",aliases:["pub","push"],builder:e=>e.option("version",{aliases:["v","ver"],default:"",describe:"update module version (semver)",type:"string"}),handler:async e=>lt(e.version)});import Ho from"chokidar";var pt=e=>{let{prefab:t}=e,r=[...e.ignored??[]];r.includes(m.buildaDir)||r.push(m.buildaDir),t||l("No prefab found in config file. Watch cannot be run without a prefab"),Ho.watch(".",{persistent:!0,ignoreInitial:!0,ignored:r}).on("change",i=>{console.log(`File ${i} has been changed`),A({type:"update",pathString:i})}).on("add",i=>{console.log(`File ${i} has been added`),A({type:"copy",pathString:i})}).on("addDir",i=>{console.log(`Directory ${i} has been added`),A({type:"copy",pathString:i})}).on("unlinkDir",i=>{console.log(`Directory ${i} has been deleted`),A({type:"delete",pathString:i})}).on("unlink",i=>{console.log(`File ${i} has been deleted`),A({type:"delete",pathString:i})}).on("ready",()=>{p("Watching for changes...","primary"),p("Press Ctrl+C to stop watching","secondary")})};var ut=()=>({command:"watch",desc:"Watches your app for changes and rebuilds",aliases:["w"],builder:e=>e.option("configPath",{aliases:["c","config"],default:"",describe:"The path to a config file",type:"string"}),handler:async()=>{let e=await $();if(e!=null&&e.prefab)return pt(e);(e==null?void 0:e.prefab)===void 0&&l("No prefab found in config file. Watch can only be run within a prefab"),l("No config file found")}});import lr from"fs";import ft from"path";import Zo from"fs";import ar from"path";var dt=({directory:e,parent:t})=>{let r=Zo.readdirSync(ar.resolve(e));return r.length!==0?r.map(o=>{let i=t?`${t}/${o}`:o;if(!o.match(/\.[jt]sx$/))return`export { default as ${x(o,"pascalCase")} } from './${i}';`;let s=ar.parse(o).name;return`export { default as ${x(s,"camelCase")} } from './${s}';`}).filter(o=>o).toString().replace(/,/g,`
`):""};var Qo=`/**
 This file is autogenerated by Builda, please do not edit it.
 To generate an updated version, please run \`builda index\`
 **/`,mt=e=>{let{indexes:t}=e;if(!t)l(`No indexes entry found in the config file. Index files cannot be generated. See ${C("docs/config","indexes")} for more information.`);else{let{directories:r,indexExt:o}=t,i=o||"ts";r.forEach(s=>{let n=s,a=[],c="";s.includes("*")?(n=s.replace("/*",""),a=lr.readdirSync(ft.resolve(n)),a.forEach(u=>{let d=ft.resolve(`${n}/${u}`);return c+=`${dt({directory:d,parent:u})}
`})):c=dt({directory:s});let f=`${Qo}

${c}`;c&&lr.writeFileSync(ft.resolve(n,`index.${i}`),f)}),p("Generating indexes","config")}};var gt=()=>({command:"indexer",desc:"Generate an index file for the specified directories",aliases:["index"],builder:e=>e.option("configPath",{aliases:["c","config"],default:"",describe:"The path to a config file",type:"string"}),handler:async e=>{let t=await $();if(t)return mt(t);l("No config file found")}});import Ce from"fs";import pr from"path";var Ko=e=>{if(e.scripts){let t={};return Object.entries(e.scripts).forEach(o=>{let i=o[0];t[i]=o[1]}),t}else return l('No "scripts" entry found in config file')},cr=Ko;import Vo from"inquirer";var ur=async(e,t,r,o,i)=>{let{buildaDir:s}=m,n=`${t}/${x(e,"kebabCase")}`,a=pr.join(s,"export",n);Ce.existsSync(n)&&l(`A ${o.use} already exists with the name ${e}`),Ce.existsSync(a)&&l(`An existing ${o.use} with the name ${e} was found in the prefab. Continuing will overwrite this version.\r
If you want to edit the prefab version, you need to eject it with 'builda eject ${e}'`),Ce.mkdirSync(n,{recursive:!0});let{path:c,registry:f}=Ge("blueprint",r,o),u=(i==null?void 0:i.split(":"))||[],d=u.length===2?{replace:u[0],with:u[1]}:void 0,h=o?Ye({registry:f,name:e,script:o,sub:d}):[],g=pr.resolve(c,"module");return Ce.readdirSync(g).forEach(w=>{let y=`${g}/${w}`,v=`${n}`;O({file:y,rename:y.replace("temp_name",e),outputDir:v,substitute:h,name:e})}),r.prefab&&A({type:"copy",pathString:n}),p("Done!","success")},ht=async({config:e,name:t,scriptName:r,subString:o})=>{let i=cr(e),s=i==null?void 0:i[r];if(s.use)if((!t||t==="")&&l(`You need to provide a name for your new ${r}`),p(`Building new ${r}: '${t}'...`,"notice"),s.variants){let n=await Vo.prompt([{type:"list",name:"variantChoice",message:`What type of ${r} do you wish to build?`,choices:s.variants.map(a=>({name:a.name,value:a.outputDir}))}]);await ur(t,n.variantChoice,e,s,o)}else await ur(t,s.outputDir,e,s,o);else l("No valid scripts found")};var yt=()=>({command:"new <scriptName>",desc:"Create something new from a blueprint",builder:e=>e.positional("scriptName",{describe:"The blueprint script to run",type:"string",default:""}).positional("name",{describe:"The name of the new thing",type:"string",default:""}).option("subString",{aliases:["s","sub"],default:"",describe:`A string matcher for the blueprint script. e.g: "%MY_STRING%:'new string'"`,type:"string"}),handler:async e=>{let t=await $();if(t)return ht({config:t,scriptName:e.scriptName,name:e.name});l("No config file found")}});import bt from"fs";import dr from"path";var wt=async({config:e})=>{let{prefab:t}=e,r=process.cwd();t||l("No prefab found in config file. Build cannot be run without a prefab");let o=dr.join(r,m.buildaDir),i=dr.join(r,m.buildaDir,"modules","prefab");bt.existsSync(o)||l("No .builda directory found. Try running `builda install` first"),bt.existsSync(i)||l("No prefab directory could be found in .builda/modules"),p("Building project...","processing"),bt.readdir(r,async(s,n)=>{s&&l(s.message),W({buildaDir:o,prefabDir:i}),(await qe({paths:n,source:r})).forEach(c=>{let u=c.replace(`${r}/`,"");A({type:"update",pathString:u})})})};var xt=()=>({command:"build",desc:"Build your project",aliases:["-b","--build"],builder:e=>e.option("configPath",{aliases:["c","config"],default:"",describe:"The path to a config file",type:"string"}),handler:async()=>{let e=await $();if(e)return wt({config:e});l("No config file found")}});import fr from"fs";import Xo from"path";var vt=async()=>{let e=$(),{prefab:t}=e,{buildaDir:r}=m,o=Xo.join(process.cwd(),r);if(fr.existsSync(o))fr.rmSync(o,{recursive:!0});else if(!t)l('No prefab found in config (perhaps you meant to run "builda init" or "builda project" instead?)');else return p("Prefab config found but no .builda directory found.","warning"),p('Running "builda install" instead',"info"),Q();return Q(!0)};var kt=()=>({command:"update",desc:"An alias for `builda install` which skips the existing folder check",builder:e=>e.option("configPath",{aliases:["c","config"],default:"",describe:"The path to a config file",type:"string"}),handler:async()=>vt()});import mr from"fs";import ei from"events";import gr from"inquirer";import Ae from"chalk";var $t=async({config:e})=>{ei.defaultMaxListeners=50;let{buildaDir:t}=m,r={projectName:"",appRoot:"",packageManager:""};if(e&&Object.keys(e).length!==0){e.prefab&&(b('This project was generated from a prefab and cannot be reinitialised. Maybe you meant to run "builda install" instead?',"error"),process.exit(1)),b(`It looks like builda has already been initialised in this project.
You can overwrite the existing config if you want to start again.\r

`+Ae.yellow("Be careful though")+", continuing will instantly delete any existing config and your"+t+" directory.","warning");let{overwrite:i}=await gr.prompt([{type:"confirm",name:"overwrite",message:Ae.red("Are you sure you want to reset the builda config?"),default:!1}]);i||(p("Process aborted at user request","notice"),process.exit(0)),M(null),mr.existsSync(t)&&mr.rmSync(t,{recursive:!0})}b("Welcome to "+Ae.magenta("Builda")+" This is a guided setup process help you get your project up and running."+j({link:"docs/init",endText:`if you get stuck.

`})+Ae.white("You can exit the process at any time by pressing Ctrl+C."),"builda");let{initType:o}=await gr.prompt([{type:"list",name:"initType",message:"What would you like to do?",choices:[{name:"I want to start a new project",value:"new"},{name:"I want to add builda to an existing project",value:"existing"},{name:"I want to create my own prefab",value:"prefab"},{name:"I want to create my own blueprint",value:"blueprint"}]}]);if(o==="new"&&(b(`A fresh start! Let's get you set up with a new project.\r

You can choose to use a prefab to get started quickly, or you can set up a project from scratch.`),ne({})),o==="existing"){b(`You can add builda to an existing project by answering a few questions about your project.\r

If you are unsure about any of these, you can always change them later by editing the 'builda' entry in package.json.`);let i=await Ze();r={...r,...i};let s=await He(r);r={...r,...s};let n=r.blueprintUrls||r.blueprintList.join("");M({}),le({modulePath:n})}o==="prefab"&&(b(`You can create your own prefab by answering a few questions about your project.\r

If you are unsure about any of these, you can always change them later by editing the 'builda' entry in package.json.`+j({link:"docs/build-a-module",anchor:"prefab"})),console.log("Coming soon..."),process.exit(0)),o==="blueprint"&&(b(`You can create your own blueprint by answering a few questions about your project.\r

If you are unsure about any of these, you can always change them later by editing the 'builda' entry in package.json.\r

`+j({link:"docs/build-a-module",anchor:"blueprint"})),console.log("Coming soon..."),process.exit(0))};var St=()=>({command:"init",desc:"Initialise builda",builder:e=>e.option("configPath",{aliases:["c","config"],default:"",describe:"The path to a config file",type:"string"}),handler:async e=>{let t=await $(!0);return $t({config:t||void 0})}});import ti from"inquirer";var hr=async e=>ti.prompt(e);var yr=async e=>{var n,a;let t=await T(),r=(a=(n=t==null?void 0:t.generatorOptions)==null?void 0:n.rootFiles)==null?void 0:a.filter(c=>typeof c!="string"&&c.rewrite),o=(r==null?void 0:r.map(c=>c.path))??[],i=r==null?void 0:r.map(c=>c.substitutions??[]),s=[...e,...(i==null?void 0:i.flat())??[]];I({paths:o,substitute:s,source:process.cwd(),destination:process.cwd()})};var{websiteUrl:ii}=m,br=async()=>ri.scriptName("builda").usage("$0 <cmd> [args]").help().demandCommand(1,'You need at least one command before moving on. Try "builda --help" for more information').command({...Xe()}).command({...St()}).command({...xt()}).command({...nt()}).command({...ot()}).command({...st()}).command({...yt()}).command({...tt()}).command({...at()}).command({...ct()}).command({...ut()}).command({...kt()}).command({...gt()}).epilogue(`For more information, visit ${oi.blue.underline(`${ii}/docs`)}`).argv;Tt.main===module&&br();var Qu=br;export{br as builda,hr as buildaQuestion,yr as buildaSubstitute,x as changeCase,Qu as default,p as printMessage,l as throwError};
